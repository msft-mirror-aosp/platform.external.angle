// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000040.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000040[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x6d,0x4c,0x56,0x65,
    0x18,0x3e,0xcf,0xfb,0xf2,0x25,0x98,0x42,0x29,0x65,0x99,0x56,0xda,0xe6,0x52,0xd1,
    0x82,0x52,0x41,0x3e,0x44,0xc1,0x2c,0x04,0xbf,0x25,0xd9,0x2c,0x12,0xc9,0x8f,0x02,
    0xd4,0x30,0x51,0x32,0x3f,0x42,0x99,0x26,0xa6,0xa5,0xd3,0xdc,0xf8,0xc5,0x46,0x29,
    0x69,0x86,0x8a,0x1f,0xcc,0x94,0x9c,0x3a,0xb5,0x9a,0x96,0xba,0xf5,0xa7,0x3f,0x2d,
    0x2b,0xfd,0x91,0x16,0xa2,0x39,0xb3,0xe7,0x3e,0xcf,0x75,0xf3,0x5e,0x7b,0x97,0x8b,
    0xed,0xd9,0x39,0xcf,0x75,0x7f,0x5f,0xe7,0xbe,0x9f,0x73,0x5e,0x82,0x81,0x7e,0xd1,
    0x9e,0x67,0xbc,0x58,0x2f,0xc6,0xbb,0x60,0x3c,0xff,0x2f,0xc1,0x0b,0x78,0x72,0x1b,
    0xe7,0x45,0xf9,0xd7,0xb1,0x79,0x93,0xf3,0x92,0x16,0xbd,0x5d,0x92,0x94,0xf2,0xfc,
    0x50,0x91,0x77,0xf3,0x82,0xbe,0x9e,0xc8,0xba,0x7b,0xd1,0x5e,0x84,0xbd,0xca,0x7a,
    0xab,0x78,0x6e,0x99,0xe0,0x23,0xec,0xea,0x69,0x85,0xf1,0x56,0x4f,0xf0,0x68,0xf1,
    0x61,0xef,0x46,0xf8,0x3e,0xc5,0xc6,0xf3,0x5e,0xf4,0x22,0xbd,0x4c,0x17,0xce,0xeb,
    0x87,0xab,0x62,0x06,0x58,0x0c,0x61,0x01,0x60,0xf1,0x84,0x05,0x81,0xf5,0x20,0x2c,
    0x02,0xd8,0x23,0x84,0x45,0x02,0xeb,0x4d,0x58,0x14,0xb0,0x27,0x08,0x8b,0x06,0xd6,
    0x9f,0xb0,0x18,0x60,0x03,0x08,0xeb,0x02,0x6c,0x10,0x61,0xb1,0xc0,0x86,0x12,0x16,
    0x07,0x2c,0x85,0xb0,0xae,0xc0,0x86,0x13,0xf6,0x00,0xb0,0x91,0x84,0x75,0x03,0x96,
    0xe5,0x73,0x17,0xec,0xe4,0x40,0x78,0xac,0xb6,0xd7,0xa7,0xc0,0x99,0xee,0x9f,0xa4,
    0xbd,0x70,0xdf,0x07,0xfb,0x87,0xac,0x55,0xc0,0x97,0x07,0x7d,0xbe,0xe4,0x3e,0xd1,
    0xde,0x45,0xa1,0xf6,0x81,0x56,0x3f,0x0a,0xbc,0xf6,0x4e,0x1a,0x9f,0xd6,0xc3,0x6a,
    0x24,0x10,0x9e,0x68,0xd7,0xa4,0x83,0xf9,0xa3,0x74,0xff,0x98,0x5d,0x53,0xa7,0x5e,
    0xcc,0xd0,0xfd,0xe3,0x76,0xa5,0xc7,0xae,0xcd,0xd4,0x7d,0x5f,0xbb,0x76,0x8f,0x2d,
    0x4e,0xd7,0xbd,0x70,0xf9,0xcb,0xee,0xa7,0x3b,0xf7,0x43,0xec,0xfa,0x64,0x7b,0xaf,
    0xac,0x9e,0x76,0x9f,0x8c,0x1c,0xe4,0x79,0x3f,0x6c,0xf7,0xc2,0x53,0x32,0x72,0x94,
    0xfd,0x30,0x3c,0xa7,0x08,0x5f,0x2f,0xc2,0xe7,0x4c,0x74,0x05,0x4f,0xc3,0x7e,0x04,
    0xd9,0xa7,0x42,0x5f,0xec,0xc5,0x7f,0x06,0xfc,0xcb,0x5f,0x1f,0x5b,0x55,0x26,0x9e,
    0x85,0xc6,0xd1,0x95,0xf1,0x3f,0x4b,0x75,0x24,0x87,0x2c,0x3c,0xff,0x4c,0xe4,0x20,
    0xfb,0x51,0xc0,0x06,0xa2,0xa6,0x6c,0xe4,0x24,0xfa,0xa3,0x21,0x4b,0x21,0xf9,0x38,
    0xf4,0xa4,0xc8,0x5f,0x82,0x3c,0x03,0x72,0xb9,0x8e,0x47,0xce,0xaa,0x3f,0x0d,0x75,
    0xe9,0xbe,0x18,0xfd,0xa1,0x9c,0xce,0x87,0xfe,0x20,0xdb,0xc1,0xc2,0xcd,0x9b,0xc0,
    0x78,0xa9,0x6d,0x59,0x98,0xef,0x4a,0xe2,0x77,0x31,0x72,0x11,0xbc,0x97,0xbd,0x5b,
    0x8a,0xb8,0x38,0x16,0x3a,0x67,0x5e,0xf7,0x62,0xb3,0x0c,0xf7,0x4b,0xc1,0x87,0xec,
    0xab,0xc3,0x62,0x6c,0xc2,0x2c,0xe8,0xbe,0x11,0xb3,0x26,0xcf,0xec,0x0b,0xc4,0x08,
    0x92,0xbc,0x05,0x73,0xa7,0xfb,0x0b,0x98,0x1b,0xdd,0x5f,0x09,0xe3,0xfb,0x06,0xe6,
    0x4f,0xf7,0x77,0x31,0x53,0xba,0x37,0xc6,0xf5,0x84,0xf2,0xf5,0xa0,0x5f,0xc0,0x8a,
    0x4c,0xc9,0xbf,0x87,0x71,0xb1,0xb5,0xa7,0x64,0xdf,0xd3,0x84,0xf2,0x11,0xfd,0x7d,
    0x76,0x5f,0xde,0xb8,0xb0,0xb3,0xc7,0xf7,0xdb,0xfd,0xa6,0xd5,0xf5,0xe9,0x2f,0xd8,
    0xa7,0x18,0x00,0x7f,0x1e,0x6a,0xb8,0x65,0x11,0x79,0xb6,0xe9,0xe8,0xdf,0x34,0xf4,
    0x68,0x81,0xad,0x38,0x15,0x33,0x9e,0x86,0xa5,0x7c,0x96,0xa1,0xf7,0xd3,0x21,0x1f,
    0x65,0x3d,0x48,0xdf,0x8c,0x41,0x6f,0x65,0xc3,0x9f,0xe8,0xe4,0x00,0x5f,0x65,0x75,
    0x64,0x9f,0x0b,0xbb,0x1c,0xd8,0x49,0x3f,0xbd,0x0c,0xbb,0x71,0xb0,0x93,0x9e,0xca,
    0x03,0xbe,0xcb,0xea,0xc8,0x7c,0xe7,0x03,0x93,0x5e,0xeb,0xb0,0x99,0x4f,0x40,0x3e,
    0x7f,0x5b,0xfd,0x7c,0x3f,0x5f,0xcf,0xc7,0xa4,0x1e,0xb9,0x9f,0x68,0xed,0x84,0xcb,
    0xc9,0x88,0x29,0x7f,0xcb,0xc1,0xef,0x14,0xe0,0x93,0x2c,0x3b,0x92,0xd3,0x66,0xe3,
    0x30,0xd5,0xbb,0x6d,0x7d,0xa8,0x2f,0xb9,0xb6,0x5b,0x2e,0x44,0xef,0x80,0x71,0x3a,
    0x91,0xb0,0x29,0xa0,0x1a,0xa6,0xa3,0x86,0x69,0x54,0x43,0x21,0x70,0xad,0xe1,0x15,
    0x60,0x5a,0x43,0x11,0xd5,0x20,0xb2,0x19,0x76,0x15,0x21,0xee,0x0c,0xaa,0x61,0x26,
    0x62,0x1b,0xaa,0xe1,0x55,0xe0,0x5a,0xc3,0x16,0xe3,0x30,0xd5,0x93,0x1a,0xd4,0x57,
    0x11,0xd5,0xd0,0x62,0x9c,0xce,0x04,0xd8,0xcc,0xa0,0x1a,0x5e,0x47,0x0d,0xc5,0x54,
    0xc3,0x2c,0xe0,0x5a,0x43,0x09,0x30,0xad,0xa1,0x94,0x6a,0x10,0xd9,0x6c,0xbb,0x4a,
    0x11,0x77,0x36,0xfa,0x48,0xe2,0xce,0x41,0xec,0x16,0x13,0x9a,0x47,0xc9,0x51,0x75,
    0x4b,0x29,0xc7,0xf3,0xd0,0x2b,0x82,0xdd,0x6c,0xe8,0x96,0x43,0xb7,0x1c,0xba,0xd2,
    0xaf,0x87,0x8c,0x3b,0x3f,0xc4,0xbe,0xd6,0xae,0x0a,0xc8,0x84,0xa3,0x83,0xc6,0x9d,
    0x1f,0x22,0x5b,0x07,0x99,0xd4,0x2a,0xe7,0xc6,0x3b,0xa8,0xb5,0x12,0xb5,0x8a,0xfe,
    0x12,0xe0,0x7b,0x51,0x6b,0x15,0x7c,0x08,0x7e,0xd3,0xea,0x2c,0x80,0x0f,0xad,0xb7,
    0x0a,0xfb,0x05,0xc8,0xab,0x02,0xbe,0xe4,0x6c,0x79,0x17,0xe7,0x8a,0xce,0xc6,0x72,
    0xc4,0x2b,0xa3,0xd9,0x78,0x0f,0xf8,0x0a,0xcc,0xc6,0x4a,0x60,0xe7,0xfd,0x67,0xe9,
    0xea,0x5b,0x03,0x5f,0x2b,0xf1,0x6e,0x95,0x7c,0x56,0x5a,0xfd,0x61,0xa8,0x57,0xea,
    0x5f,0x03,0x1f,0xc9,0xa8,0x53,0x74,0xb2,0xc3,0x38,0x93,0x1c,0xcb,0x71,0x1e,0x6c,
    0x40,0xad,0x13,0x10,0x63,0x23,0x30,0x5e,0xb5,0x88,0xf1,0x21,0x62,0x6c,0xa4,0x3e,
    0xd9,0x8c,0x5a,0x36,0x51,0x9f,0x7c,0x04,0x5c,0xfb,0xe4,0x63,0x60,0xda,0x27,0x5b,
    0x89,0x37,0x91,0x6d,0xb1,0x6b,0x2b,0x72,0xdb,0x82,0x5e,0x97,0xdc,0xb6,0x23,0xa6,
    0x07,0xbb,0x14,0x34,0xcb,0x1d,0x7b,0x2f,0xbe,0x06,0x18,0x67,0x23,0xd7,0x56,0xc4,
    0x7a,0xc6,0x38,0xbb,0x78,0xd8,0x24,0x9b,0x50,0x2c,0x91,0x0d,0xb4,0x2b,0x09,0x76,
    0x72,0xed,0x6a,0xeb,0x96,0x58,0x43,0xd1,0x8b,0x8f,0x22,0xae,0x7c,0x2b,0xd4,0x20,
    0x8f,0x67,0x8d,0x93,0xcb,0xf7,0xc2,0x6a,0x60,0xcf,0x19,0x87,0xf7,0x05,0xb7,0x29,
    0xf0,0x29,0xfe,0xd5,0x6e,0x30,0x72,0x49,0x0c,0xd3,0x91,0x9c,0xee,0xd9,0x68,0xb7,
    0x80,0xb5,0x23,0x87,0xc3,0xc6,0xf9,0x95,0xbc,0x06,0x23,0x57,0x99,0x69,0xe1,0x7e,
    0x9b,0x71,0x72,0xe5,0x43,0x39,0xaa,0x07,0x47,0x06,0xf5,0xe6,0x86,0x71,0x94,0x8a,
    0x98,0xa9,0xc4,0xd1,0x48,0xe3,0xec,0x94,0xa3,0x1c,0xe2,0x48,0x64,0xe9,0x76,0x65,
    0xc1,0x2e,0x8b,0x38,0xca,0x26,0x8e,0xea,0xc3,0x38,0x1a,0x6d,0x9c,0x9c,0x39,0x1a,
    0x63,0x1c,0xae,0x1c,0xe5,0xc2,0x67,0x3a,0x71,0x94,0x89,0x5c,0x12,0xc3,0x74,0x72,
    0x88,0xa3,0x5c,0xe2,0xa8,0xd5,0x38,0xbf,0x92,0x57,0x26,0x72,0x55,0x8e,0x76,0x18,
    0x27,0xdf,0x86,0x3c,0x95,0xa3,0x06,0x70,0x14,0x40,0xbd,0x85,0x61,0x1c,0xe5,0x21,
    0x66,0x1e,0x71,0x94,0x6f,0x9c,0x9d,0x72,0x34,0x9d,0x38,0x12,0x59,0x81,0xc4,0x85,
    0xdd,0x24,0xe2,0x68,0x0a,0x71,0xd4,0x10,0xc6,0xd1,0x54,0xe3,0xe4,0xcc,0xd1,0x34,
    0xe3,0x70,0xe5,0xa8,0x10,0x3e,0x0b,0x88,0xa3,0x89,0xc8,0x25,0x31,0x4c,0x67,0x3a,
    0x71,0x54,0x48,0x1c,0x1d,0x35,0xce,0xaf,0xe4,0x35,0x51,0x73,0x05,0x47,0xf5,0xc6,
    0xc9,0x77,0xe0,0xbb,0x42,0xfc,0xe9,0xec,0x6d,0xa5,0xb3,0xf4,0x18,0x7a,0x6d,0x01,
    0x6c,0xc4,0xbf,0xce,0xfc,0xa7,0x98,0xf9,0x46,0x9a,0xf9,0xcf,0x80,0xeb,0xcc,0xef,
    0x04,0xa6,0x33,0xdf,0x44,0x33,0xbf,0xd3,0xd7,0xb3,0xef,0x1e,0xc4,0x3d,0x40,0xe7,
    0xc9,0x41,0xf8,0x6e,0x21,0xdf,0x87,0x80,0xab,0xef,0xc3,0xc0,0xd4,0x77,0x2b,0xf9,
    0x16,0xd9,0x11,0xe9,0x13,0xf8,0x3e,0x42,0x7d,0x70,0x14,0x75,0x05,0x7d,0x1f,0xce,
    0xd7,0x57,0xc0,0xe7,0x83,0x0b,0xb5,0x6b,0x05,0x17,0xa2,0x73,0x0c,0x31,0x0f,0x40,
    0xff,0x08,0xe2,0xb6,0x51,0x5c,0xd1,0x39,0x6e,0x57,0x1b,0xec,0x8f,0x53,0xdc,0x13,
    0x14,0xb7,0xc0,0x7e,0x1d,0xca,0x77,0xe3,0x49,0x60,0xc7,0x4c,0xe8,0x5b,0x2a,0xe0,
    0x9f,0xc3,0x51,0xbe,0xfc,0x14,0xec,0x74,0xc9,0x19,0x2c,0xf8,0x69,0xd8,0x9e,0xf2,
    0x7d,0x75,0xf1,0x9f,0xd5,0x19,0xf8,0x3a,0x8d,0xef,0xb9,0x48,0xfa,0x2e,0x95,0x9a,
    0x34,0xa7,0x36,0x7a,0xbe,0x5f,0x23,0x76,0x2b,0xec,0x8f,0x43,0xb7,0x09,0xba,0xbb,
    0x28,0xff,0x3d,0xff,0x91,0xff,0x97,0xf7,0xc9,0xbf,0x0e,0x79,0x36,0x43,0x67,0x0f,
    0xe5,0xb9,0x1f,0x36,0xcd,0xf7,0xc9,0x53,0x63,0x37,0x51,0x9e,0x6d,0xc6,0xe5,0xda,
    0x06,0xfb,0x5d,0xd4,0x2b,0xdf,0xa3,0x57,0x2e,0x50,0xaf,0xfc,0x00,0x5c,0x7b,0xe5,
    0x22,0x30,0xed,0x95,0xcb,0xf4,0xcc,0x44,0x76,0xc9,0xae,0xcb,0x88,0x7b,0x89,0x6a,
    0xfe,0x11,0xb1,0xf5,0xdd,0x33,0x2f,0xec,0xcc,0x98,0x89,0x19,0x9c,0x49,0x67,0xc6,
    0x6b,0xc6,0xd9,0xf5,0x87,0xcd,0x5c,0x3a,0x33,0x44,0x56,0x6c,0x57,0x09,0xec,0x4a,
    0xf0,0xee,0x96,0x58,0xa5,0xb0,0xeb,0x4b,0x67,0xc5,0x1b,0xc6,0xe1,0xfb,0xe8,0x6c,
    0x99,0x43,0x67,0x8b,0xc8,0x87,0x80,0xb7,0x79,0xf0,0x59,0x4c,0x67,0xc6,0x2c,0xf8,
    0x94,0xef,0x7d,0xd6,0x99,0x4b,0x67,0xc6,0x3c,0x3a,0x33,0x4e,0x18,0xe7,0x5f,0xf2,
    0x9a,0x85,0x5c,0xf5,0xcc,0x68,0x30,0x4e,0xae,0x7c,0x28,0x47,0x3f,0x81,0x23,0x7d,
    0xf7,0x54,0x87,0x71,0x54,0x81,0x98,0x15,0xc4,0xd1,0x42,0xe3,0xec,0x94,0xa3,0x65,
    0xc4,0x91,0xc8,0x16,0xd9,0xb5,0x18,0x76,0x8b,0x89,0xa3,0x25,0xb0,0x63,0x8e,0xaa,
    0x8c,0xc3,0x99,0xa3,0xa5,0xc4,0x51,0x15,0x71,0x54,0x0d,0x9f,0x8b,0x88,0xa3,0x4a,
    0xf8,0x54,0x8e,0x54,0x67,0x19,0x71,0x54,0x4d,0x1c,0x9d,0x34,0xce,0xbf,0xe4,0x55,
    0x89,0x5c,0x95,0xa3,0x46,0xe3,0xe4,0x0d,0x61,0xef,0x9e,0x9f,0xc1,0x91,0xbe,0x7b,
    0xea,0xc2,0x38,0x5a,0x85,0x98,0xab,0x88,0xa3,0xf7,0x8d,0xb3,0x53,0x8e,0x36,0x10,
    0x47,0x22,0xab,0xb1,0xab,0x16,0x76,0xb5,0xc4,0xd1,0x3a,0xd8,0x31,0x47,0xeb,0x8d,
    0xc3,0x99,0xa3,0x0f,0x88,0xa3,0xf5,0xc4,0x51,0x1d,0x7c,0xd6,0x10,0x47,0x6b,0xe1,
    0x53,0x39,0x52,0x9d,0x0d,0xc4,0x51,0x1d,0x71,0x74,0xda,0x38,0xff,0x92,0xd7,0x5a,
    0xe4,0xaa,0x1c,0xed,0x34,0x4e,0xde,0x48,0xef,0x1e,0x9d,0xbd,0xcb,0x34,0xf3,0x67,
    0xd0,0x6b,0x4d,0xb0,0xa9,0xa3,0x77,0xcf,0xaf,0x98,0xf9,0x2b,0x34,0xf3,0xbf,0x01,
    0xd7,0x99,0xff,0x1d,0x98,0xce,0xfc,0x35,0x9a,0x79,0x91,0x5d,0xb5,0xeb,0x3a,0xe2,
    0x5e,0xa7,0xf3,0xe4,0x4f,0xf8,0xbe,0x41,0xbe,0xff,0x02,0xae,0xbe,0xdb,0x81,0xa9,
    0xef,0x0e,0xf2,0xdd,0xee,0xff,0x36,0x90,0x67,0xeb,0x7c,0xdf,0xa1,0xdf,0x18,0xff,
    0xc0,0xf7,0x5d,0xfa,0x8d,0x71,0x0f,0xf8,0x29,0x7c,0xaf,0x07,0x8c,0xc3,0xe4,0x37,
    0xbf,0xc6,0x0b,0x1a,0x87,0x97,0x21,0x5e,0x24,0xf5,0x82,0xc8,0x22,0xec,0x8a,0xc4,
    0x33,0x89,0x20,0xae,0xf7,0x18,0xf7,0x4e,0x3b,0x43,0xbf,0x01,0x55,0x2f,0xd2,0x84,
    0xb8,0x3e,0x6b,0x9c,0xce,0x1d,0xd8,0x88,0x0f,0xcd,0x27,0x06,0xf9,0x54,0x52,0xfd,
    0x5d,0x8c,0xc3,0x35,0x9f,0x38,0xca,0x47,0x64,0xb1,0x76,0xc5,0x21,0x4e,0x2c,0xe5,
    0xb3,0x17,0xf9,0x9c,0xa5,0x67,0xaf,0x7a,0x71,0x94,0xcf,0x39,0xe3,0x74,0x24,0xc7,
    0xbd,0xf0,0xa7,0xf9,0x74,0x43,0x3e,0x2d,0x94,0x4f,0x77,0xe3,0x70,0xcd,0x27,0x81,
    0xf2,0x11,0x59,0xbc,0x5d,0x09,0x88,0x13,0x4f,0xf9,0x34,0x1b,0xf7,0xbf,0x94,0x73,
    0x26,0xf4,0xfe,0x51,0xbd,0x04,0xca,0xe7,0x3b,0xe8,0x48,0x8e,0xcd,0xf0,0x27,0xba,
    0x1d,0x78,0xc6,0x37,0x69,0xd6,0x6f,0x83,0xef,0xa0,0x17,0x8a,0xf3,0xb9,0x09,0xe1,
    0xfa,0x3b,0x57,0x6d,0x3b,0xa8,0xe7,0xbf,0x35,0x2e,0x96,0xc4,0x16,0x9b,0x9b,0xd0,
    0xbd,0x06,0xdd,0xab,0xf4,0x1e,0xfd,0x03,0xfe,0x64,0xe9,0xff,0xa8,0x03,0xf4,0x1e,
    0x55,0x9b,0x6b,0xe4,0xff,0x1b,0xe3,0x62,0x74,0xc0,0xfe,0xaa,0xff,0x7f,0xbb,0xa0,
    0xff,0xff,0x22,0x91,0xdd,0xb5,0x5d,0x32,0xdc,0xae,0x7f,0x01,0x84,0x90,0x23,0xc9,
    0x54,0x17,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DMS src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = vec4(0);
//     for(int i = 0;i < params . srcSampleCount;i ++)
//     {
//         srcValue += texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), i);
//     }
//     srcValue /= params . srcSampleCount;
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
