// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000020.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000020[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x7b,0x4c,0x96,0x55,
    0x1c,0x7e,0xcf,0xf7,0x71,0xf1,0x96,0xe9,0x32,0xf2,0x86,0xa6,0xd2,0xd6,0xbc,0xc1,
    0x02,0x49,0x45,0x40,0x4c,0x05,0x4b,0xf1,0x42,0xde,0x60,0x4b,0x51,0x61,0x1a,0x28,
    0xa5,0x98,0x26,0x88,0x78,0x5b,0x6c,0x4d,0xb7,0xa6,0xd3,0x84,0xa5,0xd3,0x14,0x54,
    0x26,0x06,0x5d,0x54,0xb4,0xda,0xac,0x64,0xeb,0x9f,0xfe,0xa9,0x59,0xe9,0x1f,0x69,
    0x05,0x6b,0xce,0x5a,0x89,0xf3,0xc2,0xca,0xce,0xef,0x3d,0xcf,0xcf,0xef,0xd9,0xbb,
    0x5c,0x6c,0x67,0xef,0x7b,0x9e,0xdf,0xfd,0x39,0xbf,0x73,0xce,0xcb,0x17,0x0e,0x8d,
    0x88,0xf5,0x3c,0xe3,0xf5,0xf0,0xba,0x79,0x9f,0x1b,0xcf,0xff,0xeb,0xeb,0x85,0x3c,
    0x79,0xed,0xe9,0xc5,0xf8,0xcf,0xec,0x99,0x79,0x33,0xc7,0xae,0x2b,0x5f,0x31,0x36,
    0x65,0x5c,0x92,0xc8,0x7b,0x7b,0x61,0x5f,0x4f,0x64,0x8f,0x7b,0xb1,0x5e,0x94,0x7d,
    0xca,0x58,0x5d,0xb8,0x6a,0x8d,0xe0,0x13,0xec,0x88,0xb6,0xc2,0x3e,0x56,0x4f,0xf0,
    0x58,0xf1,0x61,0xdf,0x26,0xf8,0x3e,0xc5,0xc6,0xf3,0x72,0xbc,0x68,0x2f,0xd3,0x85,
    0xf3,0x46,0xe0,0xa9,0x98,0x01,0xd6,0x8d,0xb0,0x10,0xb0,0x3e,0x84,0x85,0x81,0xf5,
    0x23,0x2c,0x0a,0x58,0x7f,0xc2,0xa2,0x81,0x0d,0x26,0x2c,0x06,0xd8,0xd3,0x84,0xc5,
    0x02,0x4b,0x20,0xac,0x1b,0xb0,0x67,0x09,0xeb,0x0e,0x6c,0x34,0x61,0x3d,0x80,0x25,
    0x11,0xd6,0x13,0x58,0x0a,0x61,0xbd,0x80,0x8d,0x27,0xec,0x31,0x60,0x93,0x08,0xeb,
    0x0d,0x6c,0xb2,0xcf,0x5d,0xf8,0x21,0x07,0xc2,0xe3,0x6a,0xfb,0x1c,0x0e,0xce,0x74,
    0x3e,0x8c,0xe6,0xc2,0xfd,0x10,0xcc,0x9f,0xb0,0x56,0x21,0x5f,0x1e,0xf6,0xf9,0x92,
    0xf7,0x38,0xfb,0x16,0x83,0xda,0x47,0x59,0xfd,0x18,0xf0,0x3a,0x78,0xec,0xac,0xb4,
    0x7e,0x56,0xa3,0x2f,0xe1,0x71,0x76,0xcc,0x3b,0x9b,0x9b,0xa5,0xf3,0x41,0x76,0xcc,
    0x9f,0xff,0x5d,0x86,0xce,0xe3,0xed,0x48,0xef,0xf1,0x56,0xa6,0xce,0x87,0xda,0xd1,
    0x94,0x5d,0x98,0xae,0x73,0xe1,0xb2,0xbd,0xe9,0x99,0x87,0xf3,0x44,0x3b,0x6a,0x0f,
    0x0c,0x98,0xfc,0xa4,0x9d,0x27,0x23,0x07,0x59,0xef,0xa7,0xec,0x5c,0x78,0x4a,0x46,
    0x8e,0x32,0x7f,0x1e,0xeb,0x14,0xe5,0xeb,0x45,0xf9,0x9c,0x89,0xae,0xe0,0x69,0x98,
    0x4f,0x20,0xfb,0x89,0xd0,0x17,0x7b,0xf1,0x9f,0x01,0xff,0xf2,0x37,0xc4,0x56,0x95,
    0x89,0xb5,0xd0,0x38,0x3a,0x32,0xfe,0x67,0xa8,0x8e,0xe4,0x30,0x19,0xeb,0x9f,0x89,
    0x1c,0x64,0x9e,0x05,0x6c,0x14,0x6a,0x9a,0x82,0x9c,0x44,0xff,0x05,0xc8,0x52,0x48,
    0x3e,0x03,0x3d,0x29,0xf2,0x17,0x21,0xcf,0x80,0x5c,0x9e,0xb3,0x90,0xb3,0xea,0x2f,
    0x40,0x5d,0x3a,0x2f,0x44,0x7f,0x0c,0xb0,0x96,0x25,0x54,0x33,0xff,0x61,0x2b,0xfb,
    0x31,0x4a,0xf1,0x5e,0x82,0x9c,0x65,0xbe,0x3a,0x10,0xa3,0x2c,0x30,0x2f,0xc7,0xfe,
    0x12,0xfb,0xf5,0xc8,0x31,0x19,0x3c,0x6f,0xc4,0x7b,0x98,0xf4,0x2b,0x91,0x83,0xce,
    0xab,0xd1,0xff,0x3a,0xdf,0x87,0xfd,0x25,0xf6,0x87,0x90,0x33,0xdb,0xd7,0x63,0xaf,
    0x69,0x9f,0x34,0x05,0xf2,0xb9,0x88,0xbd,0xa3,0xf3,0xcb,0x01,0xce,0xaf,0x63,0x0f,
    0xea,0xfc,0x26,0xf6,0x95,0xce,0xef,0xa0,0x8f,0xd4,0x7f,0xc8,0x27,0xa8,0x3a,0x53,
    0xea,0x8b,0x32,0x2e,0x17,0xed,0x2b,0x99,0x47,0x9b,0x48,0x7e,0xa2,0x7f,0xd4,0xce,
    0xcb,0x1a,0xd6,0x3e,0xec,0xf3,0x63,0x76,0xfe,0xce,0xf6,0x83,0xe9,0xa9,0x76,0x25,
    0x43,0xf0,0xed,0xa1,0xa6,0xbb,0x16,0x91,0xf5,0x4d,0x47,0x0f,0xa7,0xa1,0x4f,0x67,
    0x5b,0x06,0x26,0x62,0x9f,0xa7,0x61,0xe8,0x5a,0xad,0x41,0xff,0xa7,0x43,0x9e,0x65,
    0x3d,0x48,0xef,0x4c,0x45,0x7f,0x4d,0x81,0x3f,0xd1,0x99,0x06,0x7c,0x9b,0xd5,0x91,
    0xf9,0x74,0xd8,0x4d,0x83,0x9d,0xf4,0xd4,0x4b,0xb0,0x9b,0x01,0x3b,0xe9,0xab,0x99,
    0xc0,0x1b,0xad,0x8e,0xec,0xf1,0x5c,0x60,0xb3,0x7c,0x7e,0xc2,0xde,0x1c,0xe4,0x73,
    0xdf,0xea,0xe7,0xfa,0xf9,0x7a,0x3e,0x26,0xf5,0xc8,0xfb,0x5c,0x6b,0x27,0x5c,0xe6,
    0x21,0xa6,0xfc,0x55,0x81,0xdf,0x97,0x81,0xcf,0xb3,0xec,0x48,0x4e,0xdb,0x8c,0xc3,
    0x54,0xef,0x9e,0xf5,0xa1,0xbe,0xe4,0x79,0xdb,0x72,0x21,0x7a,0xf5,0xc6,0xe9,0x44,
    0xc3,0x66,0x36,0xd5,0xb0,0x10,0x35,0x2c,0xa0,0x1a,0x16,0x01,0xd7,0x1a,0x16,0x03,
    0xd3,0x1a,0x0a,0xa8,0x06,0x91,0xe5,0xdb,0x51,0x80,0xb8,0xf9,0x54,0xc3,0x2b,0x88,
    0x6d,0xa8,0x86,0x25,0xc0,0xb5,0x86,0x9d,0xc6,0x61,0xaa,0x27,0x35,0xa8,0xaf,0x02,
    0xaa,0xa1,0xc1,0x38,0x9d,0x39,0xb0,0xc9,0xa7,0x1a,0x96,0xa1,0x86,0x42,0xaa,0x61,
    0x39,0x70,0xad,0x61,0x05,0x30,0xad,0xa1,0x98,0x6a,0x10,0x59,0x91,0x1d,0xc5,0x88,
    0x5b,0x84,0x3e,0x92,0xb8,0x2b,0x11,0xbb,0xc1,0x44,0xf6,0xbb,0xe4,0xa8,0xba,0xc5,
    0x94,0xe3,0x71,0xe8,0x15,0xc0,0xae,0x08,0xf9,0x94,0xf8,0xbd,0xe7,0xce,0x03,0xed,
    0xb9,0xd7,0x90,0x73,0x19,0xf5,0xdc,0xeb,0xc0,0xab,0xd1,0x73,0xeb,0x80,0x89,0x5f,
    0xb1,0x93,0x33,0xe2,0x0d,0xd8,0x95,0xc3,0x4e,0x38,0xdd,0x00,0x5c,0x79,0x7f,0x13,
    0xb6,0x1e,0x61,0x9b,0x80,0x19,0xbf,0xdf,0x62,0xfc,0xf3,0xa5,0x02,0xba,0x9b,0xe0,
    0x43,0x63,0x6c,0x46,0x8c,0x4a,0x8a,0x51,0x05,0x7c,0x89,0xad,0x55,0xf6,0xdb,0x16,
    0xd4,0x54,0x81,0x33,0xa9,0x8a,0xd6,0x63,0x2b,0xec,0xab,0x69,0x3d,0xb6,0x01,0xd7,
    0xf5,0xd8,0x0e,0x4c,0xd7,0x63,0x27,0xad,0x87,0xc8,0x76,0xc8,0x3a,0x83,0xe3,0x1d,
    0xa8,0x43,0xce,0x84,0x1a,0xc4,0xf6,0x60,0x97,0x80,0x45,0xe9,0xb2,0xef,0xe2,0xab,
    0xbf,0x71,0x36,0xf2,0xbc,0x80,0x58,0x03,0x8d,0xb3,0xeb,0x03,0x9b,0x11,0x26,0x12,
    0x4b,0x64,0x83,0xe4,0x2e,0x87,0x9d,0x3c,0x7b,0xd9,0x1a,0xfd,0xbb,0x1b,0x6b,0x3e,
    0x10,0x71,0x07,0xf9,0x39,0xb9,0x3c,0x86,0x19,0x27,0x8f,0xf7,0x6b,0x71,0xd8,0x70,
    0xe3,0xf0,0xa1,0xe8,0x91,0x04,0xf8,0x14,0xff,0x6a,0x17,0x8f,0x5c,0xe2,0x02,0x3a,
    0x92,0xd3,0x03,0x1b,0xed,0x2e,0xb0,0xdb,0xc8,0xe1,0x84,0x71,0x7e,0x25,0xaf,0x78,
    0xe4,0x2a,0x7b,0x47,0xd6,0xa0,0xc6,0x38,0xf9,0x16,0x5a,0x6b,0xb1,0xd9,0x05,0x8e,
    0x0c,0xea,0x4d,0x0d,0x70,0x34,0x12,0x31,0x47,0x12,0x47,0xa3,0x8d,0xb3,0x53,0x8e,
    0xc6,0x11,0x47,0x22,0x1b,0x63,0x47,0x12,0xec,0x92,0x88,0xa3,0xe7,0x88,0xa3,0x5d,
    0x01,0x8e,0x92,0x8d,0x93,0x33,0x47,0x29,0xc6,0xe1,0xca,0x51,0x2a,0x7c,0x8e,0x21,
    0x8e,0x12,0x91,0x4b,0x5c,0x40,0x67,0x1c,0x71,0x94,0x4a,0x1c,0x35,0x1a,0xe7,0x57,
    0xf2,0x4a,0x44,0xae,0xca,0xd1,0xdb,0xc6,0xc9,0x6b,0x90,0xa7,0x72,0xb4,0x07,0x1c,
    0x85,0x50,0x6f,0x4e,0x80,0xa3,0x49,0x88,0x39,0x89,0x38,0xca,0x30,0xce,0x4e,0x39,
    0xca,0x26,0x8e,0x44,0x96,0x69,0xc7,0x14,0xd8,0x4d,0x21,0x8e,0xa6,0x12,0x47,0x7b,
    0x02,0x1c,0x4d,0x33,0x4e,0xce,0x1c,0x4d,0x37,0x0e,0x57,0x8e,0x72,0xe0,0x33,0x93,
    0x38,0xca,0x42,0x2e,0x71,0x01,0x9d,0x6c,0xe2,0x28,0x87,0x38,0x3a,0x65,0x9c,0x5f,
    0xc9,0x2b,0x0b,0xb9,0x2a,0x47,0xbb,0x8d,0x93,0x0b,0x57,0x21,0xf8,0xd3,0xbd,0xb7,
    0x13,0xe7,0x9b,0xe8,0x9d,0x46,0xaf,0x15,0xc3,0x26,0xc7,0x44,0xf6,0xfc,0x7e,0xec,
    0xf9,0x7d,0xb4,0xe7,0xdf,0x05,0xae,0x7b,0xfe,0x00,0x30,0xdd,0xf3,0x75,0xb4,0xe7,
    0x45,0x56,0x2b,0x77,0x3e,0xe2,0x1e,0xa3,0xf3,0xa4,0x01,0xbe,0xeb,0xc9,0xf7,0x71,
    0xe0,0xea,0xfb,0x04,0x30,0xf5,0xdd,0x48,0xbe,0x45,0x76,0xd2,0xd7,0x75,0xbe,0x4f,
    0x52,0x1f,0x9c,0x42,0x5d,0xf2,0x4d,0xd1,0x0a,0x5f,0xa7,0x81,0x37,0x81,0x0b,0xb5,
    0x6b,0x04,0x17,0xa2,0xf3,0x01,0x62,0x1e,0x83,0xfe,0x49,0xc4,0x6d,0xa1,0xb8,0xa2,
    0xd3,0x6c,0x47,0x0b,0xec,0x9b,0x29,0xee,0x47,0x14,0x77,0xb6,0xfd,0x2a,0x93,0xef,
    0xb5,0x4f,0x80,0x9d,0x36,0x91,0x6f,0x96,0x10,0xce,0x6b,0x91,0x9f,0x81,0x9d,0x8e,
    0x1a,0xeb,0x4b,0xf0,0xb3,0xb0,0x3d,0xe3,0xfb,0xea,0xee,0xaf,0x55,0x2b,0x7c,0x9d,
    0xc5,0x77,0x53,0x34,0x7d,0x0f,0x4a,0x4d,0x9a,0x53,0x0b,0xad,0x6f,0x0b,0x62,0x37,
    0xc2,0xbe,0x19,0xba,0x75,0xd0,0xad,0xa5,0xfc,0x0f,0xfe,0x47,0xfe,0x87,0x1f,0x91,
    0xff,0x6e,0xe4,0x79,0x04,0x3a,0x07,0x29,0xcf,0xa3,0xb0,0x39,0xf2,0x88,0x3c,0x35,
    0x76,0x1d,0xe5,0xd9,0x6c,0x5c,0xae,0x2d,0xb0,0xaf,0xa5,0x5e,0xf9,0x02,0xbd,0x72,
    0x91,0x7a,0xe5,0x4b,0xe0,0xda,0x2b,0x5f,0x01,0xd3,0x5e,0x69,0xa3,0x35,0x13,0xd9,
    0x25,0x3b,0xda,0x10,0xf7,0x12,0xd5,0xfc,0x35,0x62,0xeb,0xdd,0x93,0x1f,0x38,0x33,
    0x72,0xb1,0x07,0x73,0xe9,0xcc,0x98,0x63,0x9c,0x5d,0x02,0x6c,0x16,0xd3,0x99,0x21,
    0xb2,0xb9,0xf2,0x0d,0x07,0x3b,0x79,0x6e,0x45,0xac,0x05,0xb0,0x1b,0x4a,0x67,0xc5,
    0x42,0xe3,0xf0,0xa3,0x74,0xb6,0x2c,0xa2,0xb3,0x45,0xe4,0x89,0xe0,0x2d,0x1f,0x3e,
    0xe7,0xd2,0x99,0x91,0x07,0x9f,0xf2,0x5d,0xcd,0x3a,0x8b,0xe9,0xcc,0xc8,0xa7,0x33,
    0xe3,0x43,0xe3,0xfc,0x4b,0x5e,0x79,0xc8,0x55,0xcf,0x8c,0xbd,0xc6,0xc9,0x95,0x0f,
    0xe5,0xe8,0x1b,0x70,0xa4,0x77,0x4f,0x69,0x80,0xa3,0xa5,0x88,0xb9,0x94,0x38,0x5a,
    0x66,0x9c,0x9d,0x72,0x54,0x42,0x1c,0x89,0x6c,0xb9,0x1d,0xc5,0xb0,0x2b,0x26,0x8e,
    0x56,0xc2,0x8e,0x39,0x5a,0x65,0x1c,0xce,0x1c,0xbd,0x4a,0x1c,0xad,0x22,0x8e,0x4a,
    0xe1,0x73,0x39,0x71,0x54,0x04,0x9f,0xca,0x91,0xea,0x94,0x10,0x47,0xa5,0xc4,0xd1,
    0xc7,0xc6,0xf9,0x97,0xbc,0x8a,0x90,0xab,0x72,0xb4,0xdf,0x38,0xf9,0xde,0xc0,0xdd,
    0xf3,0x2d,0x38,0xd2,0xbb,0xa7,0x2a,0xc0,0xd1,0x5a,0xc4,0x5c,0x4b,0x1c,0x95,0x1b,
    0x67,0xa7,0x1c,0x6d,0x26,0x8e,0x44,0xb6,0xde,0x8e,0x8d,0xb0,0xdb,0x48,0x1c,0x6d,
    0x82,0x1d,0x73,0x54,0x61,0x1c,0xce,0x1c,0x55,0x12,0x47,0x15,0xc4,0x51,0x15,0x7c,
    0xae,0x27,0x8e,0x36,0xc0,0xa7,0x72,0xa4,0x3a,0x9b,0x89,0xa3,0x2a,0xe2,0xe8,0x8c,
    0x71,0xfe,0x25,0xaf,0x0d,0xc8,0x55,0x39,0xaa,0x35,0x4e,0xbe,0x9f,0xee,0x1e,0xdd,
    0x7b,0x6d,0xb4,0xe7,0xcf,0xa1,0xd7,0xea,0x60,0x53,0x45,0x77,0xcf,0xf7,0xd8,0xf3,
    0x97,0x69,0xcf,0xff,0x00,0x5c,0xf7,0xfc,0x8f,0xc0,0x74,0xcf,0x5f,0xa5,0x3d,0x2f,
    0xb2,0x2b,0x76,0x5c,0x43,0xdc,0x6b,0x74,0x9e,0xfc,0x0c,0xdf,0xd7,0xc9,0xf7,0x2f,
    0xc0,0xd5,0xf7,0xaf,0xc0,0xd4,0x77,0x07,0xf9,0x16,0x59,0xbb,0x1d,0x37,0xe0,0xfb,
    0x06,0x7d,0x67,0xff,0x0e,0xdf,0x37,0xe9,0x3b,0xfb,0x0f,0xe0,0x6d,0xf8,0x6e,0xff,
    0x13,0x58,0x25,0xc5,0xfb,0x0b,0x78,0x19,0xe2,0x75,0x52,0x3c,0x91,0xdd,0xb2,0xa3,
    0x13,0xf1,0x6e,0x79,0x11,0xae,0x0f,0x19,0x77,0xa7,0x9d,0xa3,0xff,0xb5,0x54,0xaf,
    0x93,0xb8,0x6e,0x35,0x4e,0xe7,0x06,0x6c,0x6e,0x51,0x3e,0x77,0x91,0xcf,0x1d,0xca,
    0xe7,0x1e,0x70,0xcd,0xa7,0x8b,0xf2,0xb9,0xe7,0x3f,0x3d,0x1f,0x93,0x38,0xf7,0x29,
    0x9f,0xc3,0xc8,0xa7,0x95,0xd6,0x5e,0xf5,0xba,0x28,0x9f,0xf3,0xc6,0xe9,0x74,0xc2,
    0xe6,0x3e,0xe5,0xf3,0x0f,0xf2,0xa9,0xa7,0x7c,0x1e,0x00,0xd7,0x7c,0x0c,0xed,0x95,
    0x07,0xb8,0x98,0x0c,0x7a,0xd6,0xa3,0x5e,0x7c,0xdf,0xb8,0xdf,0x2c,0xce,0x9b,0xc8,
    0xfd,0xa3,0x7a,0xc6,0x44,0xf2,0xf9,0x0c,0x3a,0x5d,0xb0,0xf1,0xb0,0x0f,0x3a,0x90,
    0x7b,0x3b,0xed,0xf5,0xdf,0xc0,0x77,0x98,0xea,0x7e,0xcf,0x44,0x70,0xfd,0x7f,0x52,
    0x6d,0x3b,0xa8,0xee,0x4f,0x8d,0x8b,0x25,0xb1,0xc5,0xa6,0x1d,0xba,0x57,0xa1,0x7b,
    0x85,0xee,0xd1,0x9f,0xe0,0x4f,0x86,0xfe,0x1e,0x1c,0xa2,0x7b,0x54,0x6d,0xae,0x92,
    0xff,0x0b,0xc6,0xc5,0xe8,0x80,0xfd,0x15,0xff,0x37,0xb2,0xb0,0xff,0xbb,0x8c,0xc8,
    0xfe,0xb6,0x85,0x8d,0xb7,0xe3,0x5f,0x95,0x1a,0xd9,0x79,0xc0,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture3D src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
