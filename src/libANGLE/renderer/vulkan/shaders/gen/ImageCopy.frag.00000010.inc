// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000010.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000010[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x7b,0x4c,0x96,0x55,
    0x1c,0x7e,0xcf,0xf7,0x71,0xf1,0x56,0xe9,0x32,0xf2,0x86,0xa6,0xd2,0xd6,0xbc,0xc1,
    0x02,0x4d,0x45,0x40,0x48,0x05,0x4b,0xf1,0x42,0xde,0x60,0x4b,0x51,0x61,0x1a,0x28,
    0xa5,0x98,0x26,0x88,0x78,0x5b,0x6c,0x4d,0xb7,0xa6,0xd3,0x84,0xa5,0xd3,0x14,0x54,
    0x26,0x06,0x5d,0x54,0xb4,0xda,0xac,0x64,0xeb,0x9f,0xfe,0xa9,0x59,0xe9,0x1f,0x69,
    0x05,0x6b,0xce,0x5a,0x89,0xf3,0xc2,0xca,0xce,0xef,0x3d,0xcf,0xcf,0xef,0xd9,0x5b,
    0x2e,0xb6,0xb3,0xf7,0x3d,0xcf,0xef,0xfe,0x9c,0xdf,0x39,0xe7,0xe5,0x0b,0x87,0x86,
    0xc7,0x7a,0x9e,0xf1,0x7a,0x78,0xdd,0xbc,0xcf,0x8c,0xe7,0xff,0xf5,0xf1,0x42,0x9e,
    0xbc,0xf6,0xf4,0x62,0xfc,0x67,0xf6,0x8c,0xbc,0x19,0x63,0xd6,0x96,0x2f,0x1f,0x93,
    0x32,0x36,0x49,0xe4,0x8f,0x7a,0x61,0x5f,0x4f,0x64,0x8f,0x79,0xb1,0x5e,0x94,0x7d,
    0xca,0x58,0x55,0xb8,0x72,0xb5,0xe0,0x13,0xec,0x88,0xb6,0xc2,0xde,0x56,0x4f,0xf0,
    0x58,0xf1,0x61,0xdf,0x26,0xf8,0x3e,0xc5,0xc6,0xf3,0x72,0xbc,0x68,0x2f,0xc3,0x85,
    0xf3,0x86,0xe3,0xa9,0x98,0x01,0xd6,0x8d,0xb0,0x10,0xb0,0xde,0x84,0x85,0x81,0xf5,
    0x25,0x2c,0x0a,0x58,0x3f,0xc2,0xa2,0x81,0x0d,0x22,0x2c,0x06,0xd8,0x53,0x84,0xc5,
    0x02,0x4b,0x20,0xac,0x1b,0xb0,0x67,0x08,0xeb,0x0e,0x6c,0x14,0x61,0x3d,0x80,0x25,
    0x11,0xd6,0x13,0x58,0x0a,0x61,0xbd,0x80,0x8d,0x27,0xec,0x11,0x60,0x93,0x08,0x7b,
    0x14,0xd8,0x64,0x9f,0xbb,0xf0,0x03,0x0e,0x84,0xc7,0x55,0xf6,0x39,0x0c,0x9c,0xe9,
    0x7c,0x28,0xcd,0x85,0xfb,0xc1,0x98,0x3f,0x6e,0xad,0x42,0xbe,0x3c,0xec,0xf3,0x25,
    0xef,0x71,0xf6,0x2d,0x06,0xb5,0x8f,0xb4,0xfa,0x31,0xe0,0x75,0xd0,0x98,0x99,0xa9,
    0x7d,0xad,0x46,0x1f,0xc2,0xe3,0xec,0x98,0x7b,0x26,0x37,0x53,0xe7,0x03,0xed,0x98,
    0x37,0xef,0xdb,0x74,0x9d,0xc7,0xdb,0x91,0xd6,0xe3,0xcd,0x0c,0x9d,0x0f,0xb1,0xa3,
    0x29,0xbb,0x30,0x4d,0xe7,0xc2,0x65,0x7b,0xd3,0xd3,0x0f,0xe6,0x89,0x76,0xd4,0xee,
    0xef,0x3f,0xf9,0x09,0x3b,0x4f,0x46,0x0e,0xb2,0xde,0x4f,0xda,0xb9,0xf0,0x94,0x8c,
    0x1c,0x65,0xfe,0x1c,0xd6,0x29,0xca,0xd7,0x8b,0xf2,0x39,0x13,0x5d,0xc1,0x53,0x31,
    0x9f,0x40,0xf6,0x13,0xa1,0x2f,0xf6,0xe2,0x3f,0x1d,0xfe,0xe5,0x6f,0xb0,0xad,0x2a,
    0x03,0x6b,0xa1,0x71,0x74,0xa4,0xff,0xcf,0x50,0x1d,0xc9,0x61,0x32,0xd6,0x3f,0x03,
    0x39,0xc8,0x3c,0x13,0xd8,0x48,0xd4,0x94,0x85,0x9c,0x44,0xff,0x79,0xc8,0x52,0x48,
    0x3e,0x1d,0x3d,0x29,0xf2,0x17,0x20,0x4f,0x87,0x5c,0x9e,0x33,0x91,0xb3,0xea,0xcf,
    0x47,0x5d,0x3a,0x2f,0x44,0x7f,0xf4,0xb7,0x96,0x25,0x90,0x61,0xeb,0xfe,0xeb,0x29,
    0x31,0x4a,0xf1,0x5e,0x82,0x9c,0x65,0xbe,0x2a,0x10,0xa3,0x2c,0x30,0x2f,0xc7,0xfe,
    0x12,0xfb,0x75,0xc8,0x31,0x19,0x3c,0x6f,0xc0,0x7b,0x98,0xf4,0x2b,0xc1,0xbb,0xce,
    0xab,0xd1,0xff,0x3a,0xdf,0x8b,0xfd,0x25,0xf6,0x07,0x91,0x33,0xdb,0xd7,0x63,0xaf,
    0x69,0x9f,0x34,0x05,0xf2,0xb9,0x80,0xbd,0xa3,0xf3,0x4b,0x01,0xce,0xaf,0x61,0x0f,
    0xea,0xfc,0x06,0xf6,0x95,0xce,0x6f,0xa3,0x8f,0xd4,0x7f,0xc8,0x27,0xa8,0x3a,0x43,
    0xea,0x8b,0x32,0x2e,0x17,0xed,0x2b,0x99,0x47,0x9b,0x48,0x7e,0xa2,0x7f,0xc4,0xce,
    0xcb,0x1a,0xd6,0x3c,0xe8,0xf3,0xa3,0x76,0xfe,0xf6,0xb6,0x03,0x69,0xe3,0xec,0x4a,
    0x86,0xe0,0xdb,0x43,0x4d,0x77,0x2c,0x22,0xeb,0x9b,0x86,0x1e,0x4e,0x45,0x9f,0xce,
    0xb2,0x0c,0x4c,0xc4,0x3e,0x4f,0xc5,0xd0,0xb5,0x5a,0x8d,0xfe,0x4f,0x83,0x3c,0xd3,
    0x7a,0x90,0xde,0x99,0x82,0xfe,0xca,0x82,0x3f,0xd1,0x99,0x0a,0x7c,0xab,0xd5,0x91,
    0xf9,0x34,0xd8,0x4d,0x85,0x9d,0xf4,0xd4,0x8b,0xb0,0x9b,0x0e,0x3b,0xe9,0xab,0x19,
    0xc0,0x1b,0xad,0x8e,0xec,0xf1,0x5c,0x60,0x33,0x7d,0x7e,0xc2,0xde,0x6c,0xe4,0x73,
    0xcf,0xea,0xe7,0xfa,0xf9,0x7a,0x3e,0x26,0xf5,0xc8,0xfb,0x1c,0x6b,0x27,0x5c,0xe6,
    0x21,0xa6,0xfc,0x55,0x81,0xdf,0x97,0x80,0xcf,0xb5,0xec,0x48,0x4e,0x5b,0x8d,0xc3,
    0x54,0xef,0xae,0xf5,0xa1,0xbe,0xe4,0x79,0xcb,0x72,0x21,0x7a,0xf5,0xc6,0xe9,0x44,
    0xc3,0x66,0x16,0xd5,0xb0,0x00,0x35,0xcc,0xa7,0x1a,0x16,0x02,0xd7,0x1a,0x16,0x01,
    0xd3,0x1a,0x0a,0xa8,0x06,0x91,0xe5,0xdb,0x51,0x80,0xb8,0xf9,0x54,0xc3,0xcb,0x88,
    0x6d,0xa8,0x86,0xc5,0xc0,0xb5,0x86,0x1d,0xc6,0x61,0xaa,0x27,0x35,0xa8,0xaf,0x02,
    0xaa,0xa1,0xc1,0x38,0x9d,0xd9,0xb0,0xc9,0xa7,0x1a,0x96,0xa2,0x86,0x42,0xaa,0x61,
    0x19,0x70,0xad,0x61,0x39,0x30,0xad,0xa1,0x98,0x6a,0x10,0x59,0x91,0x1d,0xc5,0x88,
    0x5b,0x84,0x3e,0x92,0xb8,0x2b,0x10,0xbb,0xc1,0x44,0xf6,0xbb,0xe4,0xa8,0xba,0xc5,
    0x94,0xe3,0x31,0xe8,0x15,0xc0,0xae,0x08,0xf9,0x94,0xf8,0xbd,0xe7,0xce,0x03,0xed,
    0xb9,0x57,0x91,0x73,0x19,0xf5,0xdc,0x6b,0xc0,0xab,0xd1,0x73,0x6b,0x81,0x89,0x5f,
    0xb1,0x93,0x33,0xe2,0x75,0xd8,0x95,0xc3,0x4e,0x38,0x5d,0x0f,0x5c,0x79,0x7f,0x03,
    0xb6,0x1e,0x61,0x1b,0x81,0x19,0xbf,0xdf,0x62,0xfc,0xf3,0xa5,0x02,0xba,0x1b,0xe1,
    0x43,0x63,0x6c,0x42,0x8c,0x4a,0x8a,0x51,0x05,0x7c,0xb1,0xad,0x55,0xf6,0xdb,0x66,
    0xd4,0x54,0x81,0x33,0xa9,0x8a,0xd6,0x63,0x0b,0xec,0xab,0x69,0x3d,0xb6,0x02,0xd7,
    0xf5,0xd8,0x06,0x4c,0xd7,0x63,0x07,0xad,0x87,0xc8,0xb6,0xcb,0x3a,0x83,0xe3,0xed,
    0xa8,0x43,0xce,0x84,0x1a,0xc4,0xf6,0x60,0x97,0x80,0x45,0xe9,0xb2,0xef,0xe2,0xab,
    0x9f,0x71,0x36,0xf2,0x3c,0x8f,0x58,0x03,0x8c,0xb3,0xeb,0x0d,0x9b,0xe1,0x26,0x12,
    0x4b,0x64,0x03,0xe5,0x2e,0x87,0x9d,0x3c,0x7b,0xd9,0x1a,0xfd,0xbb,0x1b,0x6b,0x3e,
    0x00,0x71,0x07,0xfa,0x39,0xb9,0x3c,0x86,0x1a,0x27,0x8f,0xf7,0x6b,0x71,0xd8,0x30,
    0xe3,0xf0,0x21,0xe8,0x91,0x04,0xf8,0x14,0xff,0x6a,0x17,0x8f,0x5c,0xe2,0x02,0x3a,
    0x92,0xd3,0x7d,0x1b,0xed,0x0e,0xb0,0x5b,0xc8,0xe1,0xb8,0x71,0x7e,0x25,0xaf,0x78,
    0xe4,0x2a,0x7b,0x47,0xd6,0xa0,0xc6,0x38,0xf9,0x66,0x5a,0x6b,0xb1,0xd9,0x09,0x8e,
    0x0c,0xea,0x1d,0x17,0xe0,0x68,0x04,0x62,0x8e,0x20,0x8e,0x46,0x19,0x67,0xa7,0x1c,
    0x8d,0x25,0x8e,0x44,0x36,0xda,0x8e,0x24,0xd8,0x25,0x11,0x47,0xcf,0x12,0x47,0x3b,
    0x03,0x1c,0x25,0x1b,0x27,0x67,0x8e,0x52,0x8c,0xc3,0x95,0xa3,0x71,0xf0,0x39,0x9a,
    0x38,0x4a,0x44,0x2e,0x71,0x01,0x9d,0xb1,0xc4,0xd1,0x38,0xe2,0xa8,0xd1,0x38,0xbf,
    0x92,0x57,0x22,0x72,0x55,0x8e,0xde,0x32,0x4e,0x5e,0x83,0x3c,0x95,0xa3,0xdd,0xe0,
    0x28,0x84,0x7a,0x73,0x02,0x1c,0x4d,0x42,0xcc,0x49,0xc4,0x51,0xba,0x71,0x76,0xca,
    0x51,0x36,0x71,0x24,0xb2,0x0c,0x3b,0xb2,0x60,0x97,0x45,0x1c,0x4d,0x21,0x8e,0x76,
    0x07,0x38,0x9a,0x6a,0x9c,0x9c,0x39,0x9a,0x66,0x1c,0xae,0x1c,0xe5,0xc0,0x67,0x06,
    0x71,0x94,0x89,0x5c,0xe2,0x02,0x3a,0xd9,0xc4,0x51,0x0e,0x71,0x74,0xd2,0x38,0xbf,
    0x92,0x57,0x26,0x72,0x55,0x8e,0x76,0x19,0x27,0x17,0xae,0x42,0xf0,0xa7,0x7b,0x6f,
    0x07,0xce,0x37,0xd1,0x3b,0x85,0x5e,0x2b,0x86,0x4d,0x8e,0x89,0xec,0xf9,0x7d,0xd8,
    0xf3,0x7b,0x69,0xcf,0xbf,0x03,0x5c,0xf7,0xfc,0x7e,0x60,0xba,0xe7,0xeb,0x68,0xcf,
    0x8b,0xac,0x56,0xee,0x7c,0xc4,0x3d,0x4a,0xe7,0x49,0x03,0x7c,0xd7,0x93,0xef,0x63,
    0xc0,0xd5,0xf7,0x71,0x60,0xea,0xbb,0x91,0x7c,0x8b,0xec,0x84,0xaf,0xeb,0x7c,0x9f,
    0xa0,0x3e,0x38,0x89,0xba,0xe4,0x9b,0xa2,0x15,0xbe,0x4e,0x01,0x6f,0x02,0x17,0x6a,
    0xd7,0x08,0x2e,0x44,0xe7,0x7d,0xc4,0x3c,0x0a,0xfd,0x13,0x88,0xdb,0x42,0x71,0x45,
    0xa7,0xd9,0x8e,0x16,0xd8,0x37,0x53,0xdc,0x0f,0x29,0xee,0x2c,0xfb,0x55,0x26,0xdf,
    0x6b,0x1f,0x03,0x3b,0x65,0x22,0xdf,0x2c,0x21,0x9c,0xd7,0x22,0x3f,0x0d,0x3b,0x1d,
    0x35,0xd6,0x97,0xe0,0x67,0x60,0x7b,0xda,0xf7,0xd5,0xdd,0x5f,0xab,0x56,0xf8,0x3a,
    0x83,0xef,0xa6,0x68,0xfa,0x1e,0x94,0x9a,0x34,0xa7,0x16,0x5a,0xdf,0x16,0xc4,0x6e,
    0x84,0x7d,0x33,0x74,0xeb,0xa0,0x5b,0x4b,0xf9,0x1f,0xf8,0x8f,0xfc,0x0f,0x3d,0x24,
    0xff,0x5d,0xc8,0xf3,0x30,0x74,0x0e,0x50,0x9e,0x47,0x60,0x73,0xf8,0x21,0x79,0x6a,
    0xec,0x3a,0xca,0xb3,0xd9,0xb8,0x5c,0x5b,0x60,0x5f,0x4b,0xbd,0xf2,0x39,0x7a,0xe5,
    0x02,0xf5,0xca,0x17,0xc0,0xb5,0x57,0xbe,0x04,0xa6,0xbd,0xd2,0x46,0x6b,0x26,0xb2,
    0x8b,0x76,0xb4,0x21,0xee,0x45,0xaa,0xf9,0x2b,0xc4,0xd6,0xbb,0x27,0x3f,0x70,0x66,
    0xe4,0x62,0x0f,0xe6,0xd2,0x99,0x31,0xdb,0x38,0xbb,0x04,0xd8,0x2c,0xa2,0x33,0x43,
    0x64,0x73,0xe4,0x1b,0x0e,0x76,0xf2,0xdc,0x82,0x58,0xf3,0x61,0x37,0x84,0xce,0x8a,
    0x05,0xc6,0xe1,0x47,0xe8,0x6c,0x59,0x48,0x67,0x8b,0xc8,0x13,0xc1,0x5b,0x3e,0x7c,
    0xce,0xa1,0x33,0x23,0x0f,0x3e,0xe5,0xbb,0x9a,0x75,0x16,0xd1,0x99,0x91,0x4f,0x67,
    0xc6,0x07,0xc6,0xf9,0x97,0xbc,0xf2,0x90,0xab,0x9e,0x19,0x7b,0x8c,0x93,0x2b,0x1f,
    0xca,0xd1,0xd7,0xe0,0x48,0xef,0x9e,0xd2,0x00,0x47,0x4b,0x10,0x73,0x09,0x71,0xb4,
    0xd4,0x38,0x3b,0xe5,0xa8,0x84,0x38,0x12,0xd9,0x32,0x3b,0x8a,0x61,0x57,0x4c,0x1c,
    0xad,0x80,0x1d,0x73,0xb4,0xd2,0x38,0x9c,0x39,0x7a,0x85,0x38,0x5a,0x49,0x1c,0x95,
    0xc2,0xe7,0x32,0xe2,0xa8,0x08,0x3e,0x95,0x23,0xd5,0x29,0x21,0x8e,0x4a,0x89,0xa3,
    0x8f,0x8c,0xf3,0x2f,0x79,0x15,0x21,0x57,0xe5,0x68,0x9f,0x71,0xf2,0x3d,0x81,0xbb,
    0xe7,0x1b,0x70,0xa4,0x77,0x4f,0x55,0x80,0xa3,0x35,0x88,0xb9,0x86,0x38,0x2a,0x37,
    0xce,0x4e,0x39,0xda,0x44,0x1c,0x89,0x6c,0x9d,0x1d,0x1b,0x60,0xb7,0x81,0x38,0xda,
    0x08,0x3b,0xe6,0xa8,0xc2,0x38,0x9c,0x39,0xaa,0x24,0x8e,0x2a,0x88,0xa3,0x2a,0xf8,
    0x5c,0x47,0x1c,0xad,0x87,0x4f,0xe5,0x48,0x75,0x36,0x11,0x47,0x55,0xc4,0xd1,0x69,
    0xe3,0xfc,0x4b,0x5e,0xeb,0x91,0xab,0x72,0x54,0x6b,0x9c,0x7c,0x1f,0xdd,0x3d,0xba,
    0xf7,0xda,0x68,0xcf,0x9f,0x45,0xaf,0xd5,0xc1,0xa6,0x8a,0xee,0x9e,0xef,0xb0,0xe7,
    0x2f,0xd1,0x9e,0xff,0x1e,0xb8,0xee,0xf9,0x1f,0x80,0xe9,0x9e,0xbf,0x42,0x7b,0x5e,
    0x64,0x97,0xed,0xb8,0x8a,0xb8,0x57,0xe9,0x3c,0xf9,0x09,0xbe,0xaf,0x91,0xef,0x9f,
    0x81,0xab,0xef,0x5f,0x80,0xa9,0xef,0x0e,0xf2,0x2d,0xb2,0x76,0x3b,0xae,0xc3,0xf7,
    0x75,0xfa,0xce,0xfe,0x0d,0xbe,0x6f,0xd0,0x77,0xf6,0xef,0xc0,0xdb,0xf0,0xdd,0xfe,
    0x07,0xb0,0x4a,0x8a,0xf7,0x27,0xf0,0x32,0xc4,0xeb,0xa4,0x78,0x22,0xbb,0x69,0x47,
    0x27,0xe2,0xdd,0xf4,0x22,0x5c,0x1f,0x34,0xee,0x4e,0x3b,0x4b,0xff,0x6b,0xa9,0x5e,
    0x27,0x71,0xdd,0x6a,0x9c,0xce,0x75,0xd8,0xdc,0xa4,0x7c,0xee,0x20,0x9f,0xdb,0x94,
    0xcf,0x5d,0xe0,0x9a,0x4f,0x17,0xe5,0x73,0xd7,0x7f,0x7a,0x3e,0x26,0x71,0xee,0x51,
    0x3e,0x87,0x90,0x4f,0x2b,0xad,0xbd,0xea,0x75,0x51,0x3e,0xe7,0x8c,0xd3,0xe9,0x84,
    0xcd,0x3d,0xca,0xe7,0x6f,0xe4,0x53,0x4f,0xf9,0xdc,0x07,0xae,0xf9,0x18,0xda,0x2b,
    0xf7,0x71,0x31,0x19,0xf4,0xac,0x47,0xbd,0xf8,0x9e,0x71,0xbf,0x59,0x9c,0x33,0x91,
    0xfb,0x47,0xf5,0x8c,0x89,0xe4,0xf3,0x29,0x74,0xba,0x60,0xe3,0x61,0x1f,0x74,0x20,
    0xf7,0x76,0xda,0xeb,0xbf,0x82,0xef,0x30,0xd5,0xfd,0xae,0x89,0xe0,0xfa,0xff,0xa4,
    0xda,0x76,0x50,0xdd,0x9f,0x18,0x17,0x4b,0x62,0x8b,0x4d,0x3b,0x74,0xaf,0x40,0xf7,
    0x32,0xdd,0xa3,0x3f,0xc2,0x9f,0x0c,0xfd,0x3d,0x38,0x44,0xf7,0xa8,0xda,0x5c,0x21,
    0xff,0xe7,0x8d,0x8b,0xd1,0x01,0xfb,0xcb,0xfe,0x6f,0x64,0x61,0xff,0x77,0x19,0x91,
    0xfd,0x65,0x0b,0x1b,0x6f,0xc7,0x3f,0xe0,0x2f,0x1b,0xe0,0xc0,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DArray src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
