// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000042.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000042[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x97,0x7b,0x68,0x97,0x55,
    0x18,0xc7,0xdf,0xf3,0xfb,0xed,0xea,0x65,0x5e,0x36,0x53,0xa7,0xc4,0x96,0x6b,0x5e,
    0x76,0xf1,0x5a,0x33,0xf5,0x67,0xc9,0xd2,0xcd,0xd4,0xa9,0x53,0x6b,0x36,0x9d,0x68,
    0xa6,0x59,0xb9,0xfe,0xb0,0x08,0xc2,0xbc,0xd2,0x05,0x84,0x40,0xb0,0x52,0x30,0x92,
    0xb4,0x72,0x58,0x1b,0x92,0x92,0x64,0xa0,0x95,0x12,0xa4,0x95,0x83,0x12,0x0b,0xcb,
    0x41,0x39,0x28,0x87,0xfe,0x65,0x59,0x21,0x76,0x9e,0xf7,0x7c,0x9e,0xed,0xe1,0x47,
    0x92,0x70,0x78,0x7f,0xe7,0xfb,0xdc,0xbe,0xcf,0xf7,0x7d,0xce,0xd9,0x6b,0x32,0x31,
    0x22,0x3b,0x8a,0x5c,0xd4,0x2b,0xca,0x89,0x56,0xb8,0x28,0xfe,0x37,0x20,0x4a,0x44,
    0xf2,0xb3,0x77,0x94,0x15,0x3f,0x6b,0xe6,0x2e,0x9a,0x5b,0xb9,0xe1,0xd9,0xd5,0x95,
    0x93,0xee,0x19,0x27,0xf6,0xbc,0x28,0x19,0xfb,0x89,0xad,0x5f,0x94,0x1d,0x65,0xf8,
    0xa7,0xac,0xf5,0x2b,0xd7,0x35,0x0b,0x5e,0xea,0xd7,0x35,0xbf,0xfa,0x7b,0x3f,0xc1,
    0xb3,0x25,0x87,0xff,0x55,0x1a,0xe7,0x94,0x98,0x28,0xaa,0x8d,0x32,0xa3,0xf2,0x50,
    0x2e,0x1a,0xc1,0x53,0x31,0x07,0x96,0x63,0xb0,0x04,0x58,0x7f,0x83,0x25,0xc1,0x0a,
    0x0c,0x96,0x01,0x36,0xc4,0x60,0x99,0x60,0xc3,0x0d,0x96,0x05,0x56,0x64,0xb0,0x6c,
    0xb0,0x12,0x83,0xe5,0x80,0x8d,0x32,0x58,0x2e,0x58,0xb9,0xc1,0x7a,0x81,0x8d,0x33,
    0x58,0x6f,0xb0,0x49,0x06,0xeb,0x03,0x36,0xd9,0x60,0x7d,0xc1,0xa6,0x19,0x2c,0x0f,
    0xec,0x81,0x58,0xbb,0x64,0xb7,0x06,0xa2,0xe3,0x3a,0xff,0xbc,0x0b,0xcd,0x74,0x5f,
    0x6c,0xf6,0xa2,0xfd,0x9d,0xec,0xf3,0x7d,0x54,0x22,0xb6,0x27,0x63,0xbd,0xe4,0xf7,
    0x1d,0xfe,0x57,0x16,0xbd,0x97,0x79,0xff,0x2c,0x38,0x0c,0xaf,0x9c,0x37,0xb5,0xc0,
    0x7b,0xe4,0x19,0x3c,0xdf,0xaf,0xfa,0x63,0x75,0x33,0x74,0x2f,0xba,0x2e,0x59,0xf2,
    0xfd,0x74,0xdd,0x17,0xfa,0x95,0xea,0xf5,0xca,0xfd,0xba,0x17,0x8d,0x5b,0x6b,0x56,
    0xa6,0x06,0xf9,0x7d,0x11,0x35,0xe4,0x7d,0x0e,0xf6,0xfb,0x62,0xf6,0x09,0xf6,0x25,
    0xbc,0x87,0x8c,0x18,0xcf,0x88,0xee,0xc6,0x57,0xf0,0xa9,0xec,0x4b,0x4d,0xfc,0x48,
    0xfc,0x25,0x5e,0xf2,0x97,0x91,0x2f,0x8a,0xfb,0x1d,0x10,0x6b,0x54,0xcc,0x2a,0x32,
    0xab,0xec,0x7f,0x56,0x51,0xf7,0x33,0x23,0xaa,0xe0,0xfd,0x96,0xc3,0x41,0xf6,0x95,
    0x60,0x65,0xf4,0x34,0x16,0x4e,0xe2,0x3f,0x0e,0x5b,0xb1,0xb1,0xdf,0xcb,0xcc,0x89,
    0xbd,0xaa,0x3b,0x36,0xd8,0xe5,0x39,0x05,0xce,0xea,0x5f,0x4d,0x5f,0x6a,0x9f,0x4d,
    0x7e,0xb5,0xd7,0x31,0x0f,0xaa,0x71,0x03,0xf1,0xe5,0x7e,0x62,0x45,0xab,0xa5,0x60,
    0x76,0x69,0x6c,0x63,0x5a,0xad,0x55,0x46,0xef,0xc7,0xe0,0x26,0xf8,0x50,0xff,0x6b,
    0x2d,0x3c,0xb8,0x06,0xba,0xcf,0xb8,0xee,0x25,0xe6,0x09,0x7e,0xaf,0x45,0x1f,0xd9,
    0xaf,0x4b,0xab,0xb1,0x89,0xd9,0xd7,0xfd,0x2e,0xce,0x96,0xbc,0xc3,0xb7,0xa8,0x91,
    0x34,0xf6,0x03,0x9c,0x33,0xed,0xef,0x58,0x9c,0x6d,0x73,0xb5,0xf8,0x1f,0x47,0xbb,
    0x0c,0xe3,0x7f,0x32,0xed,0x7d,0x9c,0xe5,0xfc,0xe9,0xfe,0x02,0xf3,0xac,0xfb,0x8b,
    0xcc,0x8c,0xf0,0xbf,0x4a,0xed,0xe3,0xf0,0xbf,0xca,0x5d,0x95,0x8c,0xdf,0x5b,0x66,
    0xec,0x97,0x41,0x3f,0x82,0xdd,0xf0,0x88,0xbc,0xcb,0x14,0xf3,0x3a,0x8a,0x99,0x9c,
    0xef,0x3b,0x92,0x79,0x1c,0x0d,0x36,0xca,0xe8,0xd5,0xcc,0xac,0x8f,0xc1,0x3e,0xc3,
    0x67,0x90,0x39,0x19,0xcf,0x2c,0x8d,0x25,0x9f,0xf8,0x4c,0x00,0xdf,0xe6,0x7d,0x64,
    0x3f,0x91,0xb8,0x09,0xc4,0x55,0x71,0x57,0x54,0x32,0x57,0x29,0x66,0xe4,0x3e,0xf0,
    0x43,0xde,0x27,0x2f,0xee,0x25,0x60,0x32,0x5b,0x7f,0x7a,0xe6,0x29,0xf8,0xfc,0xed,
    0xfd,0xa7,0x72,0xb7,0xa4,0xe8,0x47,0x7e,0x2f,0xf4,0x71,0x45,0xdc,0x2f,0x13,0xf1,
    0xdd,0x84,0x5e,0x33,0xc0,0xeb,0xfd,0xdb,0x10,0x4e,0xe3,0x5d,0xc0,0xd4,0xef,0x2f,
    0x9f,0x43,0x73,0xc9,0xf3,0xba,0xd7,0x42,0xfc,0x1e,0x72,0xc1,0x27,0x93,0x98,0x69,
    0xa6,0x87,0x07,0xe9,0xa1,0xda,0xf4,0x30,0x13,0x5c,0x7b,0x98,0x05,0xa6,0x3d,0xd4,
    0x9a,0x1e,0x66,0xc5,0x77,0x5b,0x14,0x63,0x52,0xb7,0xc6,0xf4,0x30,0x87,0xda,0xce,
    0xf4,0x30,0x17,0x5c,0x7b,0x98,0xe4,0x02,0xa6,0x7e,0xd2,0x83,0xe6,0xaa,0x35,0x3d,
    0xcc,0x71,0xc1,0x27,0x45,0x4c,0x8d,0xe9,0x61,0x3e,0x3d,0xd4,0x99,0x1e,0x16,0x80,
    0x6b,0x0f,0x0b,0xc1,0xb4,0x87,0x45,0xa6,0x87,0x85,0x31,0x9f,0x28,0xc6,0xa4,0x6e,
    0x3d,0x73,0x24,0x75,0x97,0x50,0x7b,0x8e,0xeb,0x39,0x6f,0xc2,0x51,0x7d,0x17,0x19,
    0x8e,0x4d,0xf8,0xd5,0x12,0x57,0x8f,0xef,0x32,0x7c,0x97,0xe1,0x2b,0xf3,0x3a,0xcf,
    0x85,0xfb,0x41,0xe2,0x9f,0xf3,0x6b,0x39,0xb6,0x58,0x23,0x17,0xee,0x07,0xb1,0x3d,
    0x8f,0x4d,0x7a,0x95,0x7b,0x61,0x35,0xbd,0xae,0xa2,0x57,0xf1,0x7f,0x1c,0xfc,0x30,
    0xbd,0xae,0x21,0x87,0xe0,0x7f,0x78,0x9f,0x26,0x72,0x68,0xbf,0x6b,0xd8,0x37,0xc1,
    0x6b,0x39,0xb9,0xe4,0xee,0x78,0x92,0x7b,0x43,0xcf,0xc6,0x53,0xd4,0x6b,0x34,0x67,
    0xe3,0x69,0xf0,0x2d,0x9c,0x8d,0x66,0x30,0xe9,0x7f,0x05,0xfd,0x6d,0x20,0x57,0x33,
    0x33,0x2b,0x7c,0xb6,0x7a,0xff,0x12,0xfa,0x95,0xfe,0x37,0x90,0xa3,0x88,0x3e,0xc5,
    0x67,0x6c,0x9a,0x66,0xc2,0xf1,0x19,0xee,0x9f,0x17,0xe8,0x75,0x01,0x35,0x36,0x82,
    0xd9,0xf5,0x2a,0x35,0x5e,0xa4,0xc6,0x46,0x33,0x27,0x9b,0xe9,0x65,0x93,0x99,0x93,
    0x2d,0xe0,0x3a,0x27,0x5b,0xc1,0x74,0x4e,0xb6,0x1b,0xdd,0xb6,0xc6,0xf7,0x41,0x14,
    0x63,0xc2,0x6d,0x1b,0xb3,0x2e,0xdc,0x5e,0xa6,0x66,0x44,0x5c,0x2e,0xc3,0xf2,0x8f,
    0xff,0x2d,0xb9,0x6e,0x12,0x23,0xcf,0x4f,0xa9,0x75,0x8b,0xb8,0xbe,0xc4,0xe4,0xb8,
    0x9e,0x5a,0xb7,0xb8,0xb4,0x92,0x2e,0xc4,0xc9,0xb3,0x8f,0xef,0x5b,0x6a,0x65,0x32,
    0x8b,0x85,0xc4,0xcb,0xdf,0xfe,0x97,0xe0,0x91,0xe5,0x82,0xbd,0x30,0xe6,0x19,0xb0,
    0x6c,0x17,0xf0,0xe1,0x68,0x9b,0x4b,0x4e,0x49,0xa2,0x71,0x09,0x17,0x72,0xe5,0xa7,
    0xf9,0x08,0xa7,0x5b,0xde,0xf1,0x06,0xd8,0x75,0x38,0xd4,0xb9,0x90,0x57,0x78,0x25,
    0xf8,0x63,0x24,0x67,0x5a,0xb4,0xaf,0x72,0xc1,0xae,0x7a,0xa8,0x46,0x3b,0xd0,0xc8,
    0xd1,0xef,0xb0,0x34,0x8d,0xfa,0x51,0x53,0x9e,0xaa,0xd1,0x00,0x17,0xe2,0x54,0xa3,
    0x42,0xa3,0x91,0xd8,0x06,0xfa,0x35,0x88,0xb8,0x41,0x46,0xa3,0xc1,0x46,0xa3,0x1d,
    0x69,0x1a,0x0d,0x71,0xc1,0x6e,0x35,0x1a,0xea,0x02,0xae,0x1a,0x0d,0x23,0xe7,0x40,
    0xa3,0x51,0x01,0x5c,0xf2,0xd3,0x7c,0x0a,0x8d,0x46,0xc3,0x8c,0x46,0x0b,0x5c,0xc8,
    0x2b,0xbc,0x0a,0xe0,0xaa,0x1a,0x4d,0x71,0xc1,0x5e,0x05,0x4f,0xd5,0x68,0x27,0x1a,
    0x25,0xe8,0xb7,0x22,0x4d,0xa3,0x62,0x6a,0x16,0x1b,0x8d,0x46,0xb8,0x10,0xa7,0x1a,
    0x95,0x1b,0x8d,0xc4,0x56,0xe2,0xd7,0x48,0xe2,0x46,0x1a,0x8d,0x46,0x1b,0x8d,0x76,
    0xa6,0x69,0x34,0xc6,0x05,0xbb,0xd5,0xa8,0xcc,0x05,0x5c,0x35,0xaa,0x20,0x67,0x89,
    0xd1,0xa8,0x14,0x2e,0xf9,0x69,0x3e,0xe5,0x46,0xa3,0x0a,0xa3,0x51,0xbd,0x0b,0x79,
    0x85,0x57,0x29,0x5c,0x55,0xa3,0x94,0x0b,0x76,0xd1,0x2a,0x41,0x3e,0x3d,0x7b,0xdb,
    0xcd,0x5d,0xba,0x98,0x59,0x6b,0x22,0xa6,0xc2,0xf5,0x9c,0xf9,0xd7,0x39,0xf3,0xbb,
    0xcc,0x99,0x7f,0x03,0x5c,0xcf,0xfc,0x9b,0x60,0x7a,0xe6,0xf7,0x98,0x33,0x2f,0xb6,
    0xdd,0x7e,0xed,0xa7,0xee,0x7e,0x73,0x9f,0xbc,0x4b,0xee,0x03,0x26,0xf7,0x7b,0xe0,
    0x9a,0xfb,0x7d,0x30,0xcd,0xdd,0x62,0x72,0x8b,0xed,0xa0,0x5f,0x2d,0xe4,0x3e,0x68,
    0xe6,0xe0,0x10,0x7d,0xc9,0xb7,0xce,0x27,0xe4,0xfa,0x00,0xbc,0x01,0x2d,0x34,0xae,
    0x05,0x2d,0xc4,0xe7,0x43,0x6a,0xee,0xc7,0xff,0x20,0x75,0xdb,0x4c,0x5d,0xf1,0x69,
    0xf5,0xab,0x8d,0xf8,0x56,0x53,0xf7,0xb0,0xa9,0x3b,0xdf,0x7f,0xfd,0xc9,0x77,0xe1,
    0x47,0x60,0x8b,0x5d,0xcf,0xb7,0x54,0x22,0xbe,0x87,0xb3,0x62,0xfb,0x11,0xe2,0x74,
    0xc9,0x1d,0x2c,0xf8,0x51,0x62,0x8f,0xc4,0xb9,0x72,0xe3,0x77,0xf5,0x31,0xb9,0x8e,
    0xf2,0x3d,0x97,0x69,0xbe,0x3b,0xa5,0x27,0xe5,0xd4,0x66,0xde,0xef,0x23,0xd4,0x6e,
    0x21,0xbe,0x15,0xdf,0x3d,0xf8,0xee,0x36,0xfc,0xf7,0xfe,0x07,0xff,0xb7,0x6f,0xc3,
    0xff,0x35,0x78,0xee,0xc3,0x67,0xaf,0xe1,0xf9,0x0e,0x31,0xfb,0x6e,0xc3,0x53,0x6b,
    0xef,0x31,0x3c,0x1f,0x76,0x81,0x6b,0x1b,0xf1,0xbb,0xa9,0x51,0x12,0xbf,0xc3,0x60,
    0x97,0x6f,0xe8,0xf5,0x7c,0x3f,0x9f,0x00,0xd7,0x79,0xfa,0x8c,0x79,0x3a,0x69,0xe6,
    0xe9,0x73,0x70,0x9d,0xa7,0x2f,0xc0,0x74,0x9e,0x4e,0x9b,0xf7,0x2a,0xb6,0x53,0x7e,
    0x9d,0x81,0xdb,0x19,0x93,0xfb,0x6b,0x72,0x9f,0x35,0xb9,0xbf,0x01,0xd7,0xdc,0xdf,
    0x82,0x69,0xee,0x76,0x93,0x5b,0x6c,0xe7,0xfc,0x3a,0x4f,0xee,0xf3,0xe6,0x9b,0xe4,
    0x07,0x72,0x5f,0x30,0xdf,0x24,0x3f,0x82,0x7f,0xc9,0xdf,0xf7,0x9f,0xc0,0x2e,0x9a,
    0x7a,0x3f,0x83,0x37,0x52,0xaf,0xc3,0xd4,0x13,0xdb,0x25,0xbf,0x3a,0xa8,0x77,0x89,
    0x6f,0x46,0xd1,0x6d,0xa6,0x0b,0x1c,0x4f,0x44,0x3d,0xdf,0x8c,0xea,0xd7,0xc1,0xfb,
    0x10,0xbf,0x06,0x17,0x7c,0xce,0x13,0x73,0xc9,0xf0,0xf9,0x05,0x3e,0xab,0x0c,0x9f,
    0x5f,0xc1,0x95,0x4f,0xa7,0xe1,0x23,0xb6,0xcb,0x7e,0x75,0x52,0xe7,0xb2,0xe1,0x53,
    0x03,0x9f,0x06,0x73,0x4f,0xa9,0x5f,0xa7,0xe1,0xb3,0xd4,0x05,0x9f,0x0e,0x62,0x2e,
    0x1b,0x3e,0xbf,0xc1,0xe7,0x80,0xe1,0xf3,0x3b,0xb8,0xf2,0xe9,0x32,0x7c,0xc4,0x76,
    0xc5,0xaf,0x2e,0xea,0x5c,0x31,0x7c,0x66,0xbb,0xf0,0x7f,0xd5,0xa5,0xae,0x67,0x5e,
    0xd5,0xaf,0xcb,0xf0,0x59,0xe6,0x82,0x4f,0x27,0x31,0x57,0xf0,0x6d,0xc7,0xf7,0x1c,
    0xe7,0x4a,0x66,0xe5,0x3b,0xf4,0x4e,0x9a,0x3a,0xd5,0xae,0x07,0x8f,0xd2,0x62,0xdb,
    0x4d,0x9d,0x46,0x17,0x6a,0x75,0x11,0x73,0x0e,0xdf,0xd3,0xf8,0x9e,0xe2,0xdc,0x89,
    0xef,0x57,0xe4,0x3b,0xc1,0xb9,0xcb,0xe6,0xac,0x26,0xd3,0x62,0x4e,0x9b,0xfc,0x8f,
    0xba,0x50,0xa3,0x9d,0x78,0xc9,0x37,0xdd,0x47,0x5c,0xc3,0x76,0xd3,0x4f,0xc9,0x64,
    0xbf,0xfe,0x05,0x77,0x08,0x8d,0x63,0x54,0x13,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DMS src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = vec4(0);
//     for(int i = 0;i < params . srcSampleCount;i ++)
//     {
//         srcValue += texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), i);
//     }
//     srcValue /= params . srcSampleCount;
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
