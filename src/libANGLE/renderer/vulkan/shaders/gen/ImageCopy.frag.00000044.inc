// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000044.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000044[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x59,0x6c,0x55,0x55,
    0x14,0x86,0xcf,0xbe,0xb7,0x23,0x43,0x19,0x2c,0x52,0x86,0x98,0x56,0x4a,0x19,0x3a,
    0x30,0x0a,0x08,0x5c,0x81,0x20,0xb4,0x86,0x4a,0x69,0x11,0x62,0x49,0x5b,0x64,0x10,
    0xc4,0xa1,0x24,0xa2,0xf1,0x81,0xc1,0xb6,0x8a,0x0a,0xb1,0x28,0x34,0x2a,0xd5,0x08,
    0xf1,0xc1,0x18,0x41,0x4a,0xf4,0xc5,0x17,0x4d,0x50,0x21,0x46,0x50,0x69,0x0c,0x41,
    0x83,0x52,0x13,0xa5,0x46,0xa9,0x81,0x27,0x14,0x35,0x04,0xf7,0x3a,0xfb,0x5b,0x74,
    0xa5,0xd1,0x40,0xb2,0x72,0xce,0xfe,0xd7,0xfc,0xef,0xb5,0xf7,0xb9,0x25,0x99,0x18,
    0x93,0x19,0x45,0x2e,0xea,0x17,0x65,0x45,0xeb,0x5d,0x14,0xff,0x1b,0x12,0x25,0x22,
    0x79,0xed,0x1f,0x65,0xc4,0xcf,0xf2,0xca,0xe5,0x95,0x65,0x5b,0x9e,0x58,0x5f,0x36,
    0xfd,0x8e,0xc9,0xa2,0xcf,0x89,0x92,0xb1,0x9d,0xe8,0x06,0x45,0x99,0x51,0x9a,0x7f,
    0x8a,0x3c,0xb6,0x66,0x53,0xa3,0xe0,0x45,0x5e,0x2e,0x7b,0x19,0xec,0xed,0x04,0xcf,
    0x94,0x18,0xfe,0xad,0x28,0x8e,0x29,0x3e,0x51,0x54,0x11,0xa5,0x47,0x25,0x21,0x5d,
    0x34,0x86,0xa7,0x62,0x0e,0x2c,0xcb,0x60,0x09,0xb0,0xc1,0x06,0x4b,0x82,0xe5,0x1a,
    0x2c,0x0d,0x2c,0xcf,0x60,0xe9,0x60,0xa3,0x0d,0x96,0x01,0x96,0x6f,0xb0,0x4c,0xb0,
    0x42,0x83,0x65,0x81,0x8d,0x37,0x58,0x36,0x58,0x89,0xc1,0xfa,0x81,0x4d,0x36,0x58,
    0x7f,0xb0,0xe9,0x06,0x1b,0x00,0x36,0xcb,0x60,0x03,0xc1,0xe6,0x1a,0x2c,0x07,0x6c,
    0x7e,0xcc,0x5d,0xf2,0x06,0x07,0xc2,0xe3,0x26,0xff,0xbc,0x1d,0xce,0x74,0x5d,0x60,
    0xd6,0xc2,0xfd,0x6d,0xac,0x6f,0xf1,0x5e,0x89,0x58,0x9f,0x8c,0xf9,0x92,0xf7,0x5b,
    0xfd,0x5b,0x06,0xbd,0x17,0x7b,0xfb,0x0c,0x6a,0xf8,0xa5,0x63,0x6c,0x2a,0xd7,0x5b,
    0xe4,0x18,0x5c,0x78,0xec,0x28,0x5f,0x93,0xd2,0xb5,0x70,0xf8,0x7a,0xfb,0x88,0xf9,
    0xc3,0xfc,0x3a,0x9f,0x18,0xb2,0x5f,0xc3,0xfd,0xba,0x80,0x75,0x82,0x75,0x21,0x3c,
    0xa7,0xc5,0x78,0x5a,0x34,0x16,0x5b,0xc1,0xe7,0xb0,0x2e,0x32,0xfe,0xe3,0xb0,0x17,
    0x7f,0x89,0x5f,0x4c,0xbc,0x28,0xee,0x67,0x48,0xcc,0x41,0x01,0x92,0x6f,0xa4,0xf8,
    0x26,0x92,0x7f,0xe3,0x99,0x16,0x95,0xb2,0x7f,0x25,0xd4,0x20,0xeb,0x32,0xb0,0x62,
    0x7a,0x9a,0x44,0x4d,0x62,0x3f,0x19,0x5d,0x81,0xd1,0xcf,0x60,0xa6,0x44,0x3f,0xf3,
    0x86,0x6f,0xd0,0xcb,0x73,0x36,0x35,0xab,0xfd,0x42,0xfa,0xd2,0xf5,0x52,0xf6,0x57,
    0x7a,0x5e,0x49,0x7d,0x69,0x46,0x5f,0x8b,0x7f,0x89,0x9f,0x48,0xd1,0xaf,0x02,0xb3,
    0xa2,0xb6,0x6b,0x0d,0xbf,0xeb,0xa8,0x45,0xf0,0x11,0xfe,0x6d,0xa3,0xd9,0x1f,0xfd,
    0xe7,0xcc,0x5a,0x7c,0x1e,0xe2,0x7d,0x23,0x7c,0xc8,0x7a,0x53,0x9f,0xfa,0xb7,0x73,
    0x36,0xa4,0xde,0xe7,0x88,0x99,0x34,0xfa,0x3d,0x9c,0x13,0x5d,0x1f,0x62,0xce,0x75,
    0x7d,0xac,0x0f,0xbf,0xa7,0x38,0x2f,0xba,0x3e,0xcb,0xfc,0xe9,0xfa,0x1c,0x33,0xa0,
    0x33,0xf7,0xa3,0xa9,0x47,0xd6,0xbf,0xc7,0xab,0xa6,0x79,0x52,0xff,0x25,0x6a,0xd1,
    0x99,0xba,0xc4,0xdd,0x93,0x34,0xf6,0x4b,0x7c,0xc3,0xcd,0x4d,0x4d,0x73,0x84,0x4f,
    0xb1,0xab,0x74,0x01,0xb3,0xa2,0xb6,0xf7,0xfa,0xf7,0xcd,0xef,0x3c,0x3e,0x4f,0xd7,
    0x4b,0xfd,0x7a,0xef,0x33,0x07,0x52,0x33,0xfc,0x8e,0x27,0xe0,0x3a,0x22,0xfe,0x55,
    0x8f,0xc8,0x1c,0xa4,0x98,0xf5,0xf1,0xcc,0x73,0x95,0xcf,0x23,0xb3,0x3c,0x01,0x6c,
    0xbc,0xe1,0xbe,0x91,0x73,0x32,0x11,0xfd,0x02,0x1f,0x41,0x66,0x6c,0x0a,0x73,0x38,
    0x89,0x78,0x62,0x33,0x15,0xbc,0xc5,0xdb,0xc8,0x7a,0x1a,0x7e,0x53,0xf1,0x9b,0xc9,
    0x3d,0x52,0xc6,0x4c,0xa6,0x98,0xbf,0x3b,0xc1,0x0f,0x7b,0x9b,0x9c,0x98,0x97,0x80,
    0xc9,0x5c,0xfe,0xe9,0x2b,0x4f,0x51,0xcf,0xdf,0xde,0x7e,0x0e,0xf7,0x4e,0x8a,0x7e,
    0xe4,0xbd,0xda,0xfb,0xe5,0x73,0xf7,0x4c,0xc3,0x76,0x07,0x7b,0xb3,0x00,0xbc,0xc6,
    0xb3,0x23,0x35,0x4d,0x71,0x01,0x53,0xbb,0xbf,0x7c,0x0c,0x8d,0x25,0xcf,0x2b,0x9e,
    0x0b,0xb1,0xab,0x72,0xc1,0x26,0x1d,0x9f,0xb9,0xa6,0x87,0xbb,0xe9,0x61,0xa1,0xe9,
    0x61,0x11,0xb8,0xf6,0xb0,0x18,0x4c,0x7b,0xa8,0x30,0x3d,0x2c,0x8e,0xef,0xbd,0x28,
    0xc6,0x24,0x6f,0xb9,0xe9,0x61,0x09,0xb9,0x9d,0xe9,0xa1,0x12,0x5c,0x7b,0x98,0xee,
    0x02,0xa6,0x76,0xd2,0x83,0xc6,0xaa,0x30,0x3d,0x2c,0x73,0xc1,0x26,0x85,0x4f,0xb9,
    0xe9,0xa1,0x8a,0x1e,0x96,0x9a,0x1e,0x96,0x81,0x6b,0x0f,0xd5,0x60,0xda,0xc3,0x72,
    0xd3,0x43,0x75,0x5c,0x4f,0x14,0x63,0x92,0xb7,0x86,0x39,0x92,0xbc,0x2b,0xc8,0xbd,
    0xcc,0xf5,0x9e,0x5d,0xa9,0x51,0x6d,0x97,0x9b,0x1a,0xd7,0x61,0x57,0x81,0x5f,0x0d,
    0xb6,0x75,0xd8,0xd6,0x61,0x2b,0xf7,0x4a,0x8d,0x0b,0x77,0x8b,0xf8,0x3f,0xe9,0xa5,
    0x1e,0x9d,0x70,0x54,0xed,0xc2,0x3d,0x23,0xba,0xa7,0xd0,0x49,0xaf,0x72,0xc7,0xac,
    0xa7,0xd7,0xb5,0xf4,0x2a,0xf6,0x0f,0x82,0xbf,0x4f,0xaf,0x1b,0x88,0x21,0xf8,0x1f,
    0xde,0xa6,0x81,0x18,0xda,0xef,0x06,0xd6,0x0d,0xd4,0x55,0x4f,0x2c,0xb9,0x87,0x1e,
    0xe6,0x0e,0xd2,0xb3,0xf1,0x08,0xf9,0x6a,0xcd,0xd9,0x78,0x14,0xbc,0x89,0xb3,0xd1,
    0x08,0x26,0xfd,0xaf,0xa6,0xbf,0x2d,0xc4,0x6a,0x64,0x66,0xa5,0x1e,0xb1,0x5f,0x49,
    0xbf,0xd2,0xff,0x16,0x62,0xe4,0xd3,0xa7,0xd8,0x4c,0xea,0xc3,0x59,0x43,0xbc,0x6f,
    0x21,0xe6,0x56,0x7a,0xb5,0xf2,0x3c,0x31,0xb7,0x11,0x73,0xab,0x99,0x8b,0x1d,0xd4,
    0xbe,0xdd,0xcc,0xc5,0xd3,0xe0,0x3a,0x17,0x4d,0x60,0x3a,0x17,0x2d,0x86,0x27,0xd1,
    0x35,0x7b,0x69,0xa5,0x96,0x56,0x13,0xfb,0x25,0x62,0xef,0x31,0xb1,0x5f,0x06,0xd7,
    0xd8,0x7b,0xc1,0x34,0x76,0x9b,0x89,0x2d,0xba,0x7d,0x5e,0xda,0x88,0xbd,0xcf,0x9c,
    0x9b,0x57,0xe8,0x47,0xee,0xb9,0x23,0xc4,0x7a,0x15,0xbc,0x16,0x7e,0xd4,0xaf,0x8d,
    0xb9,0x11,0x9b,0xd7,0xc8,0xd9,0x8a,0xfd,0x3e,0xf2,0xb6,0x9b,0xbc,0x62,0xb3,0xdf,
    0x4b,0x3b,0xfe,0xfb,0x4d,0xde,0x37,0x4c,0xde,0x2a,0xff,0x55,0x91,0xef,0xcd,0x9b,
    0x60,0xdb,0xcc,0x3d,0x9a,0x88,0xf7,0x24,0x23,0xd6,0x1f,0xc0,0x4f,0x45,0xf6,0x43,
    0xf0,0x83,0xf8,0x1e,0x88,0x63,0x65,0xc7,0x7b,0xf4,0x16,0x71,0x0e,0x72,0x97,0xa7,
    0xf3,0x6d,0x4e,0xd2,0x93,0xd6,0xd4,0x6e,0xce,0xc9,0x0a,0x17,0x7c,0xda,0xf0,0xdf,
    0x8f,0x6d,0x0b,0xb6,0xcd,0xa6,0xfe,0x9d,0xff,0x51,0xff,0x0b,0x37,0xa9,0x7f,0x17,
    0x7e,0x2a,0xcf,0x52,0xff,0x6e,0x7c,0x77,0x99,0xfa,0x5f,0x24,0xce,0xee,0xff,0xa9,
    0x5f,0x6b,0x6a,0x31,0xf5,0xdf,0xe7,0x42,0x0f,0xed,0xf8,0x4b,0xbd,0x9b,0xf9,0x66,
    0xbd,0x8d,0x7e,0xa7,0x8f,0x24,0xeb,0x77,0xc1,0x2a,0x5d,0xef,0x9c,0x1d,0x66,0xce,
    0x0e,0x99,0x39,0x7b,0x0f,0x5c,0xe7,0xec,0x08,0x98,0xce,0xd9,0x51,0xb3,0xdf,0xa2,
    0xeb,0xf0,0x72,0x94,0xda,0x3a,0xe0,0x4b,0xea,0xfe,0x80,0x9c,0x11,0x7e,0xd9,0x5c,
    0x70,0xff,0xf8,0x77,0x89,0x75,0x0d,0x1f,0x79,0x7e,0x44,0xae,0xeb,0xf8,0x0d,0xc4,
    0x27,0xcb,0xf5,0xe6,0xba,0x0e,0xc1,0x49,0x17,0xfc,0xe4,0xd9,0x4c,0xae,0x74,0x17,
    0xfc,0xf2,0xa2,0xd0,0xaf,0x60,0x19,0x2e,0xe0,0xf2,0xdd,0x1f,0xe0,0xf9,0x12,0x2c,
    0x93,0x7b,0x76,0x24,0xfa,0xd1,0x70,0x9b,0x4d,0xcc,0xc8,0xf5,0xfa,0x27,0x88,0x29,
    0xbf,0x13,0xac,0x8d,0xd4,0x74,0xdd,0x1b,0x5e,0x05,0xbb,0x42,0xec,0x95,0x2e,0xc4,
    0x97,0xba,0x12,0xfc,0x18,0x93,0xef,0x90,0x70,0x3f,0xdb,0x05,0xbd,0xf2,0xa1,0x1c,
    0x7d,0x08,0x47,0x8e,0x7e,0x47,0xf5,0xe1,0x68,0x10,0x39,0xe5,0xa9,0x1c,0x0d,0x71,
    0xc1,0x4f,0x39,0x1a,0x69,0x38,0x12,0xdd,0x50,0x2f,0xc3,0xf0,0x1b,0x66,0x38,0x1a,
    0x8e,0x9f,0xe5,0x28,0xcf,0x05,0xdc,0x72,0x34,0xc2,0x70,0x94,0x67,0x38,0x1a,0x45,
    0xcc,0xa1,0x86,0xa3,0x5c,0x62,0x2a,0x47,0x6a,0x33,0xd2,0x70,0x34,0xca,0x70,0x74,
    0xbf,0x0b,0xf1,0xa5,0xae,0x5c,0x6a,0x55,0x8e,0x52,0x2e,0xe8,0x67,0x93,0x5f,0x39,
    0xfa,0x18,0x8e,0x12,0xf4,0x5b,0xda,0x87,0xa3,0x02,0x72,0x16,0x18,0x8e,0xc6,0xb8,
    0xe0,0xa7,0x1c,0x95,0x18,0x8e,0x44,0x57,0xe8,0x65,0x1c,0x7e,0xe3,0x0c,0x47,0x13,
    0xf0,0xb3,0x1c,0x4d,0x74,0x01,0xb7,0x1c,0x15,0x1b,0x8e,0x26,0x1a,0x8e,0x4a,0x89,
    0x59,0x68,0x38,0x2a,0x22,0xa6,0x72,0xa4,0x36,0x25,0x86,0xa3,0x52,0xc3,0xd1,0x2a,
    0x17,0xe2,0x4b,0x5d,0x45,0xd4,0xaa,0x1c,0xcd,0x77,0x41,0x2f,0x5c,0x25,0xc8,0xa9,
    0x67,0xef,0x28,0xf7,0x82,0xd8,0xd5,0x31,0x6b,0x2d,0xf8,0x94,0x9a,0x33,0xff,0x09,
    0x67,0xfe,0x98,0x39,0xf3,0x9f,0x82,0xeb,0x99,0xff,0x0c,0x4c,0xcf,0xfc,0x09,0x73,
    0xe6,0x45,0x77,0xdc,0xcb,0x49,0xf2,0x9e,0x34,0xdf,0xad,0x2f,0x89,0x7d,0xca,0xc4,
    0xfe,0x0a,0x5c,0x63,0x7f,0x0d,0xa6,0xb1,0x3b,0x4d,0x6c,0xd1,0x9d,0xf6,0x72,0x86,
    0xd8,0x67,0xcc,0x6f,0x93,0x6f,0x89,0x7d,0xd6,0xfc,0x36,0xf9,0x0e,0xfc,0x73,0xee,
    0xe8,0xef,0xc1,0xce,0x99,0x7c,0x3f,0x80,0xd7,0x92,0xaf,0xcb,0xe4,0x13,0xdd,0x79,
    0x2f,0x5d,0xe4,0x3b,0x1f,0xf5,0x72,0xbd,0xc8,0x85,0xbf,0x4f,0xea,0xcc,0x6f,0x47,
    0xb5,0xeb,0x32,0x5c,0xd7,0xbb,0x60,0x73,0x06,0x9f,0xf3,0xa6,0x9e,0x9f,0xa8,0x67,
    0xad,0xa9,0xe7,0x67,0x70,0xad,0xa7,0xdb,0xd4,0x23,0xba,0x0b,0x5e,0xba,0xc9,0x73,
    0xc1,0xd4,0x53,0x4e,0x3d,0xf5,0x66,0xef,0xd5,0xae,0xdb,0xd4,0xd3,0xe0,0x82,0x4d,
    0x17,0x3e,0x17,0x4c,0x3d,0xbf,0x52,0xcf,0x1e,0x53,0xcf,0x6f,0xe0,0x5a,0x4f,0x8f,
    0xa9,0x47,0x74,0x17,0xbd,0xf4,0x90,0xe7,0xa2,0xa9,0xe7,0x1e,0x17,0xfe,0x5e,0x93,
    0x7c,0xfa,0x8d,0x52,0xbb,0x1e,0x53,0xcf,0x1a,0x17,0x6c,0xba,0xf1,0xb9,0x88,0x6d,
    0x27,0xb6,0xa7,0xcd,0x59,0xff,0x06,0xbe,0x93,0x26,0xcf,0x42,0xd7,0x8b,0x47,0x7d,
    0x7c,0x3b,0x4d,0x9e,0x07,0x5c,0xc8,0xd5,0x83,0xcf,0x69,0x6c,0x4f,0x60,0x7b,0x9c,
    0x6f,0xad,0xd8,0x7e,0x41,0x3c,0x11,0xfd,0x7f,0xac,0x84,0xf9,0xd6,0xaa,0xcf,0x09,
    0x13,0x7f,0xb5,0x0b,0x39,0x3a,0xf1,0x97,0x78,0x77,0x79,0x8f,0xcb,0xe8,0xae,0xf9,
    0x29,0x99,0xe5,0xe5,0x5f,0x2d,0x11,0x88,0x1c,0x78,0x13,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform itexture2DMS src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           ivec4 srcValue = ivec4(0);
//     for(int i = 0;i < params . srcSampleCount;i ++)
//     {
//         srcValue += texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), i);
//     }
//     srcValue /= params . srcSampleCount;
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     dstValue /= 255.0;
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
