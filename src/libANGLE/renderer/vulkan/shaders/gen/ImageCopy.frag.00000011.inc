// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000011.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000011[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x97,0xfb,0x6f,0x55,0x45,
    0x10,0xc7,0xcf,0xde,0x7b,0xdb,0xdb,0x82,0x94,0x47,0x8b,0x40,0x4b,0xb4,0xe5,0x65,
    0xb5,0x58,0xde,0xf2,0x28,0x17,0x6c,0x0a,0x6d,0x55,0x04,0x69,0x43,0x82,0x88,0x8f,
    0x2a,0x0a,0x95,0x87,0x82,0xfa,0x0b,0x3f,0x28,0x11,0xb1,0x4d,0x30,0x12,0x41,0xa5,
    0x11,0xa5,0x31,0x42,0x24,0x92,0x08,0x2a,0x24,0x0a,0x28,0x8d,0x21,0x60,0x94,0x26,
    0x28,0x35,0x4a,0x03,0x7f,0x81,0x91,0x48,0x14,0x41,0x0d,0xc1,0x9d,0xb3,0x9f,0xe1,
    0x8e,0x57,0x89,0x4d,0x36,0xe7,0xec,0x77,0xe7,0x3b,0xf3,0x9d,0xd9,0xd9,0xbd,0xa7,
    0xc9,0xc4,0xc8,0x74,0x14,0xb9,0xa8,0x4f,0x54,0x10,0xdd,0xed,0xa2,0xf8,0x6f,0x60,
    0x94,0x88,0xe4,0xb5,0x6f,0x94,0x1f,0x3f,0x1b,0xe6,0x35,0xcf,0xab,0x7e,0xe6,0xd9,
    0x65,0xd5,0x93,0xa7,0x8c,0x97,0xf5,0xa2,0x28,0x19,0xdb,0xc9,0x5a,0xff,0x28,0x1d,
    0xa5,0xfc,0x53,0xc6,0xea,0x96,0xd6,0x35,0x82,0x8f,0xf1,0xe3,0x9c,0x1f,0x03,0xbc,
    0x9d,0xe0,0x69,0xf1,0xe1,0xdf,0xc6,0xc4,0x3e,0x85,0x13,0x45,0x8d,0x51,0x5e,0x34,
    0x36,0x84,0x8b,0x46,0xf2,0x54,0xcc,0x81,0x15,0x18,0x2c,0x01,0x36,0xc0,0x60,0x49,
    0xb0,0x12,0x83,0xa5,0xc0,0x86,0x1a,0x2c,0x0f,0x6c,0xb8,0xc1,0xf2,0xc1,0xca,0x0d,
    0x96,0x06,0x1b,0x65,0xb0,0x02,0xb0,0x4a,0x83,0x15,0x82,0x8d,0x35,0x58,0x1f,0xb0,
    0xf1,0x06,0xeb,0x0b,0x36,0xd9,0x60,0x37,0x80,0x4d,0x33,0x58,0x3f,0xb0,0x99,0x06,
    0x2b,0x02,0xbb,0x33,0xae,0x5d,0xf2,0x5a,0x0d,0xa4,0x8e,0x4b,0xfc,0x73,0x04,0x35,
    0xd3,0x79,0x85,0x99,0x4b,0xed,0x6f,0x62,0x5e,0xec,0x59,0x89,0x78,0x3d,0x19,0xd7,
    0x4b,0xde,0x6f,0xf4,0x6f,0xf9,0xe4,0x5e,0xe5,0xed,0xf3,0xd1,0x30,0xbc,0xfa,0xde,
    0x9a,0x12,0x6f,0x51,0x64,0xf0,0x62,0x3f,0x9a,0x3e,0x9d,0x5f,0xab,0x73,0xa9,0xeb,
    0xa2,0x45,0xdf,0xcf,0xd2,0x79,0xa9,0x1f,0x99,0x3e,0x6d,0xb3,0x75,0x2e,0x35,0xfe,
    0xb0,0xa1,0x25,0x33,0xd8,0xcf,0xcb,0x89,0x21,0xfb,0x39,0xc4,0xcf,0x2b,0x98,0x27,
    0x98,0x8f,0x62,0x1f,0x52,0x31,0x9e,0x8a,0x46,0x63,0x2b,0x78,0x0d,0xf3,0x31,0x86,
    0x7f,0x0b,0xf6,0xc2,0x17,0xff,0x55,0xf8,0x8b,0xe2,0x7c,0x07,0xc6,0x35,0xaa,0x60,
    0x94,0x9b,0x51,0xf5,0x3f,0xa3,0xfc,0xda,0x33,0x15,0xdd,0xce,0xfe,0x8e,0x45,0x83,
    0xcc,0xab,0xc1,0xaa,0xc8,0x69,0x1c,0x9a,0xc4,0x7e,0x3c,0x6b,0x15,0x66,0xfd,0x0e,
    0x7a,0x4e,0xd6,0xa7,0x5e,0xe3,0x86,0x75,0x79,0xce,0x40,0xb3,0xda,0xd7,0x91,0x97,
    0xce,0xe7,0xb3,0xff,0xc3,0x3c,0x73,0x31,0x6b,0x1c,0xcd,0x7f,0x3d,0x25,0xc6,0xfd,
    0xbc,0x2f,0x46,0xb3,0xcc,0x97,0xe4,0xc4,0x58,0x9a,0x33,0x6f,0xe1,0xfc,0x08,0xff,
    0x51,0x34,0x96,0x53,0xe7,0xc7,0x79,0x4f,0x1a,0xfb,0x56,0xea,0xae,0xf3,0xd5,0xf4,
    0xb7,0xce,0x37,0x72,0x7e,0x84,0xff,0x0a,0x9a,0x2d,0x7f,0x1b,0x67,0x49,0xfb,0x64,
    0x87,0xd1,0x23,0xf3,0x3d,0xf1,0xec,0x85,0x3a,0xe1,0xef,0x25,0x7e,0xca,0xf0,0xf7,
    0xe7,0xec,0xc1,0x61,0xce,0x9c,0xce,0x8f,0xd3,0xc3,0x3a,0x3f,0x65,0xfa,0xea,0x2c,
    0x5a,0xf6,0x52,0x9f,0xb3,0xdc,0x4f,0xc9,0x78,0xaf,0xf2,0xe2,0xbc,0x52,0xe8,0x11,
    0xec,0xb2,0x47,0x64,0xff,0x32,0xf4,0x68,0x25,0x7d,0xb8,0xc0,0x67,0x28,0x3d,0x78,
    0x2b,0x58,0xa5,0xd9,0x8b,0x35,0xf4,0xf7,0x6d,0xac,0xd7,0x7a,0x0f,0xd2,0x1b,0x13,
    0xe8,0x9f,0x71,0xf8,0x13,0x9b,0x89,0xe0,0x2f,0x7a,0x1b,0x99,0x4f,0x82,0x37,0x11,
    0xde,0x54,0xee,0x87,0x6a,0x7a,0x29,0x43,0xdf,0x4c,0x07,0xdf,0xeb,0x6d,0x8a,0xe2,
    0x5c,0x02,0x26,0xfd,0x74,0xc9,0x2b,0xcf,0xa0,0xe7,0x4f,0x6f,0x5f,0xc3,0x7d,0x92,
    0x21,0x1f,0x79,0x5f,0xe8,0x79,0xe5,0xdc,0x29,0x93,0xb0,0x7d,0x9e,0x7a,0xd5,0x82,
    0x37,0xf9,0xdd,0x10,0x4d,0x37,0xbb,0x80,0xa9,0xdd,0x1f,0xde,0x87,0xfa,0x92,0xe7,
    0x45,0x5f,0x0b,0xb1,0x9b,0xe6,0x82,0x4d,0x1e,0x9c,0x99,0x26,0x87,0x39,0xe4,0x50,
    0x67,0x72,0x98,0x0b,0xae,0x39,0xd4,0x83,0x69,0x0e,0x8d,0x26,0x87,0xfa,0xf8,0x3e,
    0x8b,0x62,0x4c,0xe2,0x36,0x98,0x1c,0xee,0x21,0xb6,0x33,0x39,0xcc,0x03,0xd7,0x1c,
    0x46,0xb8,0x80,0xa9,0x9d,0xe4,0xa0,0xbe,0x1a,0x4d,0x0e,0xd3,0x5d,0xb0,0xc9,0xc0,
    0x69,0x30,0x39,0x2c,0x20,0x87,0xf9,0x26,0x87,0xfb,0xc0,0x35,0x87,0x85,0x60,0x9a,
    0x43,0xb3,0xc9,0x61,0x61,0xac,0x27,0x8a,0x31,0x89,0xdb,0x44,0x1f,0x49,0xdc,0x45,
    0xc4,0x9e,0xee,0xb2,0xe7,0x59,0x34,0xaa,0x6d,0xb3,0xd1,0x38,0x03,0xbb,0x46,0x78,
    0x4d,0xe8,0x91,0x33,0xff,0x00,0xe7,0x5d,0x7b,0xee,0x41,0x34,0x2f,0x35,0x3d,0xf7,
    0x10,0xf8,0x06,0x7a,0xee,0x11,0xb0,0x19,0x2e,0xf0,0xe4,0x0e,0x78,0x0c,0x5e,0x0b,
    0x3c,0xa9,0xe9,0x32,0x70,0xad,0xfb,0x13,0x70,0x23,0x83,0x2d,0x07,0x73,0x71,0x1d,
    0xf2,0xe3,0xfb,0x63,0x05,0xb6,0xcb,0xf1,0xa1,0x31,0x9e,0x24,0x46,0xab,0x89,0xb1,
    0x12,0xfc,0x61,0x9f,0xab,0x9c,0xb7,0x55,0xe4,0xb4,0x82,0x3b,0x67,0xa5,0xd9,0x8f,
    0x35,0xf0,0x57,0x9b,0xfd,0x78,0x0a,0x5c,0xf7,0xe3,0x69,0x30,0xdd,0x8f,0x75,0x66,
    0x3f,0x64,0x6d,0xad,0x1f,0xeb,0xa8,0xf1,0x5a,0xf2,0x90,0x3b,0xe8,0x39,0x62,0x47,
    0xf0,0x2e,0xf1,0xfe,0x97,0x7f,0x17,0x5f,0x3f,0xc1,0x91,0xe7,0x11,0x62,0xfd,0x0c,
    0xaf,0x1f,0x9c,0xdf,0x4d,0x2c,0x59,0x3b,0xef,0xc7,0x05,0x78,0x17,0xe2,0xdf,0xff,
    0x74,0x1c,0xeb,0x57,0xea,0x55,0x0a,0x5f,0x7e,0x57,0x37,0xa1,0xe3,0x37,0xd6,0x4b,
    0xe3,0x7b,0x35,0x60,0x17,0xc1,0x87,0xd3,0x23,0x97,0xf0,0x79,0xde,0xf0,0x7e,0xc1,
    0x57,0x71,0x8e,0x8d,0x68,0xba,0xea,0xa3,0x5d,0x06,0xbb,0x88,0x86,0x1a,0x17,0xfc,
    0x5e,0x80,0x7b,0x9e,0xb3,0x23,0x7b,0x30,0xda,0x85,0xf5,0x55,0x66,0xaf,0x85,0xb3,
    0x9e,0x1a,0x39,0xf2,0x2d,0x74,0xff,0xac,0xd1,0x15,0x62,0x5e,0x31,0x35,0xba,0x0a,
    0x4f,0x6b,0x54,0xe0,0xb2,0x35,0xba,0xca,0x05,0x9a,0x74,0x81,0x27,0x4f,0xad,0x51,
    0x9e,0xcb,0xd6,0x68,0x7d,0x4e,0x8d,0xf2,0x5d,0x58,0xb7,0x35,0x4a,0xbb,0x80,0x6b,
    0x8d,0x0a,0xf1,0x29,0x4e,0x94,0x97,0x70,0xc1,0x57,0x71,0x8e,0x8d,0x68,0xd2,0x1a,
    0x15,0xba,0x6c,0x8d,0x32,0x2e,0xf8,0x15,0x5d,0xc2,0x15,0x5f,0x5a,0xa3,0x4a,0x17,
    0xd6,0x47,0xa3,0x53,0x6b,0xb4,0x81,0x1a,0x25,0xc8,0xb7,0x2c,0xa7,0x46,0xfd,0x89,
    0x29,0x4f,0xad,0xd1,0x40,0x17,0x78,0x5a,0xa3,0x52,0x53,0x23,0x59,0x1b,0xe4,0xc7,
    0x60,0x78,0x83,0x4d,0x8d,0x86,0x98,0x1a,0x6d,0xc8,0xa9,0xd1,0x50,0x17,0xd6,0x6d,
    0x8d,0x86,0xb9,0x80,0x6b,0x8d,0xca,0xf0,0x39,0xc8,0xd4,0xa8,0x04,0x2d,0xc5,0x39,
    0x36,0xa5,0xa6,0x46,0x65,0xa6,0x46,0xb3,0x5d,0xf0,0x2b,0xba,0x4a,0xd0,0xaa,0x35,
    0xaa,0x72,0x61,0x5d,0x6a,0x95,0xc0,0x9f,0x9e,0xbd,0x75,0xf4,0xa2,0xd8,0xd5,0xd2,
    0x6b,0xcd,0x70,0xca,0x5c,0xf6,0xcc,0xbf,0xc4,0x99,0xdf,0x68,0xce,0xfc,0x26,0x70,
    0x3d,0xf3,0x2f,0x83,0xe9,0x99,0x6f,0x37,0xe7,0x50,0xd6,0xda,0xfc,0xd8,0x4a,0xdc,
    0xad,0xe6,0x3e,0x79,0x1d,0xdf,0xdb,0x8c,0xef,0x37,0xc0,0xd5,0xf7,0x9b,0x60,0xea,
    0xbb,0xc3,0xf8,0x96,0xb5,0xed,0x7e,0x74,0xe0,0x7b,0xbb,0xe9,0x83,0xb7,0xc8,0x4b,
    0xbe,0x29,0x0e,0xe1,0xeb,0x6d,0xf0,0x1d,0xd4,0x42,0x79,0x1d,0xd4,0x42,0x6c,0xde,
    0x21,0xe6,0x56,0xec,0xb7,0x13,0xb7,0xd3,0xc4,0x15,0x9b,0x9d,0x7e,0x74,0xc2,0xdf,
    0x69,0xe2,0xbe,0x6b,0xe2,0x2e,0xf0,0x5f,0x5d,0xf2,0x3d,0xf6,0x1e,0x58,0xad,0xcb,
    0x7e,0xb3,0x24,0xb8,0xaf,0x65,0x7d,0x17,0x3c,0x1d,0xed,0xde,0x97,0xe0,0xbb,0xe1,
    0xee,0x8a,0x7d,0x15,0xc6,0x7b,0xf5,0x3e,0xbe,0x76,0xf3,0xdd,0x94,0x67,0xbe,0xf7,
    0x24,0x27,0xd5,0xd4,0x69,0xf6,0x77,0x0e,0xb1,0x3b,0xe0,0xef,0xc4,0xb6,0x1d,0xdb,
    0x36,0xa3,0x7f,0xf3,0x7f,0xe8,0x7f,0xf5,0x3a,0xfa,0x5f,0x45,0xe7,0x16,0x6c,0x36,
    0x1b,0x9d,0xaf,0xc1,0xd9,0x72,0x1d,0x9d,0x1a,0xbb,0xdd,0xe8,0xac,0x73,0x41,0x6b,
    0x27,0xfc,0x36,0x62,0xc8,0xda,0x07,0xac,0xef,0xe1,0x7b,0x4f,0xbe,0x27,0xf7,0x81,
    0x6b,0x3f,0x7d,0x44,0x3f,0xed,0x37,0xfd,0xf4,0x31,0xb8,0xf6,0xd3,0x27,0x60,0xda,
    0x4f,0x07,0xcd,0xbe,0xca,0xda,0x81,0xb8,0x5f,0x82,0xb6,0x43,0xc6,0xf7,0x11,0x7c,
    0x1f,0x36,0xbe,0x3f,0x07,0x57,0xdf,0x5f,0x80,0xa9,0xef,0x2e,0xe3,0x5b,0xd6,0x8e,
    0xfa,0x71,0x0c,0xdf,0xc7,0xcc,0xef,0xf2,0x09,0x7c,0x1f,0x37,0xbf,0xcb,0x5f,0x81,
    0x9f,0xe0,0x77,0xfe,0x6b,0xb0,0x56,0x13,0xef,0x1b,0xf0,0xa5,0xc4,0xeb,0x36,0xf1,
    0x64,0xed,0xa4,0x1f,0xdd,0xc4,0x3b,0xc9,0xef,0x8b,0xd4,0x6d,0x92,0x0b,0x9c,0x7d,
    0x51,0xf6,0xdb,0x4c,0xed,0xba,0xd9,0x0f,0xb1,0x9b,0xeb,0x82,0xcd,0x31,0x38,0x27,
    0x8d,0x9e,0x6f,0xd1,0x73,0xca,0xe8,0xf9,0x0e,0x5c,0xf5,0xf4,0x18,0x3d,0xb2,0x76,
    0xda,0x8f,0x1e,0xe2,0x9c,0x36,0x7a,0xa6,0xa0,0x67,0xae,0xb9,0xa7,0xd4,0xae,0xc7,
    0xe8,0xa9,0x77,0xc1,0xa6,0x1b,0xce,0x69,0xa3,0xe7,0x07,0xf4,0x6c,0x33,0x7a,0x7e,
    0x04,0x57,0x3d,0xbd,0x46,0x8f,0xac,0x9d,0xf1,0xa3,0x97,0x38,0x67,0x8c,0x9e,0xa9,
    0x2e,0xfc,0xcf,0x50,0xef,0xb2,0xfd,0xaa,0x76,0xbd,0x46,0xcf,0x5d,0x2e,0xd8,0xf4,
    0xc0,0x39,0x83,0x6d,0x17,0xb6,0x47,0xcd,0x77,0xda,0x97,0xd4,0x3b,0x69,0xe2,0x4c,
    0x70,0x59,0x3c,0xca,0xe1,0x76,0x99,0x38,0x8d,0x2e,0xc4,0xea,0x85,0x73,0x14,0xdb,
    0x83,0xd8,0x1e,0xe0,0xdc,0x89,0xed,0x67,0xf8,0xdb,0xc7,0xb9,0x4b,0x73,0x56,0x93,
    0x39,0x9c,0x83,0xc6,0x7f,0x83,0x0b,0x31,0xba,0xe0,0x8b,0xbf,0x59,0x9e,0x71,0x8e,
    0xb5,0x2b,0xbe,0x4b,0xa6,0xf9,0xf1,0x37,0x6e,0xbe,0x31,0x00,0xb0,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DArray src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
