// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000030.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000030[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x6b,0x4c,0x96,0x65,
    0x18,0x7e,0x9f,0xef,0xe3,0xe0,0x29,0xd3,0x65,0x94,0xa1,0x90,0xa7,0xad,0x8d,0x42,
    0x0c,0x14,0x95,0x3e,0x40,0xcc,0x03,0xa5,0xa2,0x78,0x86,0xad,0x46,0x22,0xa6,0x82,
    0x90,0xa7,0x44,0x54,0x3c,0xa4,0xe6,0xd6,0x6c,0x6d,0x3a,0x0f,0x30,0x75,0x9a,0xe2,
    0x81,0xa1,0x41,0x07,0x3c,0x74,0xd8,0xac,0x74,0xeb,0x4f,0x7f,0xdc,0xac,0xf4,0x47,
    0x5a,0xca,0x9a,0xb3,0x56,0xb2,0xf0,0xd0,0xec,0xb9,0xdf,0xe7,0xba,0xf9,0xae,0xbd,
    0xcb,0xc5,0xf6,0xec,0xe5,0xb9,0xee,0xd3,0x75,0x5f,0xcf,0xe1,0x7d,0x21,0x1c,0x1a,
    0x14,0xef,0x79,0xc6,0xeb,0xe6,0x75,0xf1,0xbe,0x32,0x9e,0xff,0xd3,0xdb,0x0b,0x79,
    0x06,0xcf,0x17,0xed,0xb3,0xbb,0x17,0xe7,0xcf,0x27,0x4c,0x9a,0x3e,0x29,0x75,0xd9,
    0xf2,0xd2,0xd4,0x8c,0xe1,0x69,0xe2,0xd7,0xd3,0x0b,0xfb,0xfe,0x62,0x7b,0xdc,0x8b,
    0xf7,0x62,0xec,0x53,0x46,0x45,0xc9,0xc2,0x25,0x82,0x8f,0xb2,0x23,0xce,0x1a,0x7b,
    0x59,0x3f,0xc1,0xe3,0x25,0x87,0xfd,0x6d,0x94,0x9f,0x53,0x62,0x3c,0x6f,0xa2,0x17,
    0xeb,0xe5,0xb8,0xb2,0xde,0x20,0x3c,0x15,0x33,0xc0,0xba,0x10,0x16,0x02,0xd6,0x8b,
    0xb0,0x30,0xb0,0x3e,0x84,0xc5,0x00,0x7b,0x9a,0xb0,0x58,0x60,0xfd,0x08,0x8b,0x03,
    0xf6,0x2c,0x61,0xf1,0xc0,0x06,0x13,0xd6,0x05,0xd8,0x73,0x84,0x75,0x05,0xf6,0x3c,
    0x61,0xdd,0x80,0xa5,0x11,0xd6,0x1d,0x58,0x06,0x61,0x3d,0x80,0x8d,0x24,0xec,0x31,
    0x60,0x2f,0x11,0xd6,0x13,0x58,0xae,0xaf,0x5d,0xb8,0x53,0x03,0xd1,0x51,0x44,0x1e,
    0x08,0xcd,0x74,0x3e,0x80,0xe6,0xa2,0x7d,0x12,0xe6,0x4f,0xd8,0xa8,0x90,0x6f,0x0f,
    0xfb,0x7a,0xc9,0xef,0x09,0xf6,0xb7,0x38,0xf4,0x9e,0x22,0xfe,0xd0,0xb5,0x5f,0xea,
    0xe4,0xac,0x3e,0xd6,0xa3,0x37,0xe1,0x09,0x76,0x14,0xb6,0x4e,0x19,0xa3,0xf3,0x44,
    0x3b,0x66,0xce,0xbc,0x94,0xad,0xf3,0xfe,0x76,0x44,0xba,0x6d,0xcd,0xd1,0x79,0xb2,
    0x1d,0x4d,0x13,0x4a,0x22,0x3a,0x17,0x2d,0x6f,0x34,0x0d,0xe9,0x9c,0x0f,0xb5,0x63,
    0xef,0x9e,0xbe,0xb9,0x4f,0xda,0x79,0x3a,0x38,0xc8,0x7a,0x3f,0x65,0xe7,0xa2,0x53,
    0x3a,0x38,0xca,0x3c,0x13,0xeb,0x14,0xe3,0xfb,0xc5,0xf8,0x9a,0x89,0xaf,0xe0,0x59,
    0x98,0x8f,0xa2,0xf8,0xd1,0xf0,0x97,0x78,0xc9,0x9f,0x8d,0xfc,0xf2,0x93,0x64,0xbb,
    0xca,0xc1,0x5a,0x68,0x1d,0x1d,0xd9,0xff,0x33,0xd4,0x47,0x38,0xe4,0x62,0xfd,0x73,
    0xc0,0x41,0xe6,0x63,0x80,0xa5,0xa0,0xa7,0x3c,0x70,0x12,0xff,0xb1,0xb0,0x65,0x90,
    0x3d,0x1f,0x7b,0x52,0xec,0xaf,0xc0,0x9e,0x0d,0xbb,0x3c,0x27,0x83,0xb3,0xfa,0xcf,
    0x42,0x5f,0x3a,0x2f,0xc1,0xfe,0xe8,0x6b,0x23,0x17,0xc3,0x86,0x23,0xdc,0xf9,0xa3,
    0xf3,0x44,0xbb,0xd6,0xe5,0xf6,0xb9,0x18,0xf5,0x2a,0x80,0x97,0x83,0xbf,0xcc,0x97,
    0x04,0xea,0x55,0x05,0xe6,0x35,0xd0,0x54,0xe2,0xd7,0x80,0x6f,0x3a,0xd9,0x37,0x60,
    0xaf,0xeb,0x7c,0x17,0xce,0x92,0xac,0xc9,0x01,0xf0,0x0b,0x93,0xbd,0x01,0xe7,0x4a,
    0xf7,0xc4,0xc9,0x40,0xbd,0xf3,0x38,0x27,0x3a,0xbf,0x1c,0xd0,0xf7,0x3a,0xce,0x9b,
    0xce,0x6f,0xe3,0x0c,0xe9,0xbc,0x03,0x7b,0x46,0xf3,0x87,0x7d,0x31,0xd6,0xe7,0x08,
    0xff,0x58,0xe3,0xb8,0xe8,0x1e,0x92,0x79,0x9c,0x89,0xf2,0x13,0xff,0xc3,0x76,0x5e,
    0xd9,0xb0,0xb4,0x73,0x4f,0x1f,0xb1,0xf3,0x0f,0x36,0xed,0x8b,0x8c,0xb0,0xab,0x16,
    0x42,0x6e,0x0f,0x3d,0x75,0x58,0x44,0xd6,0x32,0x82,0xfd,0x9a,0x85,0x3d,0x59,0x60,
    0x15,0x18,0x8d,0x33,0x9d,0x85,0xa1,0xeb,0xb2,0x04,0x7b,0x3d,0x02,0xfb,0x18,0x9b,
    0x41,0xf6,0xc9,0xcb,0xd8,0x4b,0x79,0xc8,0x27,0x3e,0xe3,0x80,0x6f,0xb4,0x3e,0x32,
    0x1f,0x8f,0xb8,0x71,0x88,0x93,0xfd,0xf3,0x2a,0xe2,0xf2,0x11,0x27,0x7b,0x68,0x12,
    0xf0,0x13,0xd6,0x47,0xce,0xf3,0x14,0x60,0xb2,0xb7,0xfe,0xb6,0xcc,0xa7,0x82,0xcf,
    0x3d,0xeb,0x3f,0xc5,0xe7,0xeb,0xf9,0x98,0xf4,0x23,0xbf,0x4f,0xb3,0x71,0xa2,0xe5,
    0x74,0xd4,0x94,0x9f,0x75,0xd0,0x77,0x06,0xf0,0x42,0xab,0x8e,0x70,0xda,0x64,0x1c,
    0xa6,0x7e,0x77,0x6d,0x0e,0xcd,0x25,0xcf,0x76,0xab,0x85,0xf8,0x35,0x18,0xe7,0x13,
    0x8b,0x98,0x02,0xea,0x61,0x36,0x7a,0x98,0x45,0x3d,0xcc,0x01,0xae,0x3d,0xcc,0x05,
    0xa6,0x3d,0x14,0x53,0x0f,0x62,0x2b,0xb2,0xa3,0x18,0x75,0x8b,0xa8,0x87,0xd7,0x50,
    0xdb,0x50,0x0f,0xaf,0x03,0xd7,0x1e,0xb6,0x18,0x87,0xa9,0x9f,0xf4,0xa0,0xb9,0x8a,
    0xa9,0x87,0xa3,0xc6,0xf9,0x4c,0x45,0x4c,0x11,0xf5,0xf0,0x06,0x7a,0x28,0xa1,0x1e,
    0xe6,0x01,0xd7,0x1e,0x4a,0x81,0x69,0x0f,0x65,0xd4,0x83,0xd8,0xe6,0xdb,0x51,0x86,
    0xba,0xf3,0xb1,0x8f,0xa4,0xee,0x9b,0xa8,0x7d,0xd4,0x44,0xcf,0xb6,0x70,0x54,0xdf,
    0x32,0xe2,0x78,0x0c,0x7e,0xc5,0x88,0x9b,0x0f,0x3e,0x72,0xe6,0x2b,0x71,0xde,0x75,
    0xcf,0xbd,0x05,0xce,0x55,0xb4,0xe7,0x96,0x02,0x5f,0x8f,0x3d,0xb7,0x1c,0x98,0xe4,
    0xad,0xc4,0x3d,0xbb,0x02,0x78,0xa9,0x9d,0xcb,0xdd,0xf2,0x36,0x72,0x2f,0x40,0xcc,
    0x2a,0x60,0x55,0x5e,0x34,0xa6,0x1a,0xf8,0xbb,0xd6,0x47,0xe6,0xab,0x91,0xa7,0x1a,
    0x7c,0xe4,0x6e,0x59,0x0b,0x3e,0x35,0xe0,0x93,0xee,0xaf,0x99,0xc3,0x2b,0x71,0x1e,
    0x6b,0x81,0xcd,0xb6,0xfd,0x66,0xfa,0x3c,0x5d,0xed,0xd5,0x38,0x5f,0xb5,0xb4,0x26,
    0x1b,0x91,0x6f,0x03,0xad,0xc9,0x26,0xe0,0xba,0x26,0xef,0x00,0xd3,0x35,0xd9,0x42,
    0x6b,0x22,0xb6,0xcd,0xb2,0xd6,0xd0,0x79,0x33,0xf6,0x95,0xf0,0xd8,0x86,0xda,0x1e,
    0xe2,0x86,0x60,0x61,0xee,0xdb,0xdf,0x25,0x57,0x5f,0xe3,0x62,0xe4,0x79,0x0e,0xb5,
    0x12,0x8d,0x8b,0xeb,0x85,0x98,0xc1,0x26,0x5a,0x4b,0x6c,0xfd,0xec,0x48,0x46,0x9c,
    0x3c,0x7b,0xd8,0x1e,0xa5,0xd6,0x00,0xac,0xfb,0x33,0xa8,0x9b,0xe8,0xf3,0x72,0x3c,
    0x06,0x1a,0x67,0xef,0xef,0xf7,0xe1,0xb0,0x41,0xc6,0xe1,0xc9,0xd8,0x27,0x43,0x90,
    0x53,0xf2,0x6b,0x5c,0x12,0xb8,0x24,0x04,0x7c,0x84,0xd3,0x43,0x5b,0xad,0x03,0x58,
    0x3b,0x38,0x1c,0x37,0x2e,0xaf,0xf0,0x4a,0x02,0x57,0x39,0x3f,0xb2,0x06,0xdb,0x8c,
    0xb3,0xab,0x1e,0xaa,0xd1,0x76,0x68,0x64,0xd0,0x6f,0x66,0x40,0xa3,0x14,0xd4,0x4c,
    0x21,0x8d,0x5e,0x30,0x2e,0x4e,0x35,0x1a,0x41,0x1a,0x89,0x2d,0xd5,0x8e,0x61,0x88,
    0x1b,0x46,0x1a,0xa5,0x93,0x46,0xdb,0x03,0x1a,0x65,0x18,0x67,0x67,0x8d,0x86,0x1b,
    0x87,0xab,0x46,0x99,0xc8,0x99,0x4a,0x1a,0xa5,0x81,0x4b,0x42,0xc0,0x67,0x04,0x69,
    0x94,0x49,0x1a,0x35,0x1a,0x97,0x57,0x78,0xa5,0x81,0xab,0x6a,0xf4,0x9e,0x71,0xf6,
    0x6d,0xe0,0xa9,0x1a,0xed,0x80,0x46,0x21,0xf4,0x9b,0x1f,0xd0,0x28,0x82,0x9a,0x11,
    0xd2,0x28,0xc7,0xb8,0x38,0xd5,0x68,0x22,0x69,0x24,0xb6,0x5c,0x3b,0xc6,0x22,0x6e,
    0x2c,0x69,0x34,0x8e,0x34,0xda,0x11,0xd0,0x68,0xbc,0x71,0x76,0xd6,0x68,0x82,0x71,
    0xb8,0x6a,0x94,0x8f,0x9c,0xb9,0xa4,0x51,0x1e,0xb8,0x24,0x04,0x7c,0x26,0x92,0x46,
    0xf9,0xa4,0x51,0x93,0x71,0x79,0x85,0x57,0x1e,0xb8,0xaa,0x46,0xef,0x1b,0x67,0x17,
    0xad,0x42,0xc8,0xa7,0x67,0x6f,0x0b,0xee,0x38,0xf1,0x3b,0x85,0xbd,0x56,0x86,0x18,
    0xc9,0xaf,0x67,0x7e,0x37,0xce,0xfc,0x2e,0x3a,0xf3,0x7b,0x80,0xeb,0x99,0xdf,0x0b,
    0x4c,0xcf,0x7c,0x3d,0x9d,0x79,0xb1,0xd5,0xc9,0x7b,0x1f,0x75,0x8f,0xd0,0x7d,0x72,
    0x14,0xb9,0x1b,0x28,0xf7,0x31,0xe0,0x9a,0xfb,0x38,0x30,0xcd,0xdd,0x48,0xb9,0x8f,
    0xfb,0x7e,0x9e,0x8f,0x49,0xee,0x13,0xb4,0x0f,0x9a,0xd0,0x97,0x7c,0x57,0x9c,0x41,
    0xae,0x53,0xc0,0x4f,0x42,0x0b,0x8d,0x6b,0x84,0x16,0xe2,0xf3,0x11,0x6a,0x1e,0x81,
    0xff,0x09,0xd4,0x6d,0xa1,0xba,0xe2,0xd3,0x6c,0x47,0x0b,0xe2,0x9b,0xa9,0xee,0x27,
    0x54,0xb7,0xc0,0x7e,0x99,0xc9,0x37,0xdb,0x67,0xc0,0x4e,0x99,0xe8,0x77,0x4b,0xc8,
    0xff,0x46,0x88,0xf3,0xed,0xad,0x88,0xd3,0x21,0x77,0xba,0xe0,0xa7,0x11,0xdb,0xea,
    0xe7,0xea,0xea,0xaf,0xd5,0x59,0xe4,0x3a,0x8d,0x6f,0xa7,0x58,0xfa,0x26,0x94,0x9e,
    0x94,0x53,0x0b,0xad,0x6f,0x0b,0x6a,0x37,0x22,0xbe,0x19,0xbe,0xf5,0xf0,0xad,0x23,
    0xfe,0xfb,0xff,0x83,0xff,0xc1,0x47,0xf0,0xdf,0x0e,0x9e,0x87,0xe0,0xb3,0x9f,0x78,
    0x1e,0x46,0xcc,0xa1,0x47,0xf0,0xd4,0xda,0xf5,0xc4,0xb3,0xd9,0x38,0xae,0x2d,0x88,
    0xaf,0xa3,0xbd,0xf2,0x35,0xf6,0xca,0x79,0xda,0x2b,0xdf,0x00,0xd7,0xbd,0xf2,0x2d,
    0x30,0xdd,0x2b,0x17,0x69,0xcd,0xc4,0x76,0xc1,0x8e,0x8b,0xa8,0x7b,0x81,0x7a,0xfe,
    0x0e,0xb5,0xf5,0xdd,0x53,0x1c,0xb8,0x33,0x0a,0x70,0x06,0x0b,0xe8,0xce,0x98,0x66,
    0x5c,0xdc,0x60,0xc4,0x14,0xd1,0x9d,0x21,0xb6,0x42,0x3b,0x66,0x22,0x4e,0x9e,0x1b,
    0x50,0x6b,0x36,0xe2,0x92,0xe9,0xae,0x98,0x63,0x1c,0x7e,0x98,0xee,0x96,0xb9,0x74,
    0xb7,0x88,0x7d,0xa8,0x7e,0x47,0x21,0x67,0x21,0xdd,0x19,0x33,0x90,0x53,0xbe,0xad,
    0xd9,0xa7,0x88,0xee,0x8c,0x62,0xba,0x33,0x3e,0x36,0x2e,0xbf,0xf0,0x9a,0x01,0xae,
    0x7a,0x67,0xec,0x34,0xce,0xae,0x7a,0xa8,0x46,0xdf,0x43,0x23,0x7d,0xf7,0x54,0x04,
    0x34,0x2a,0x41,0xcd,0x12,0xd2,0x68,0x9e,0x71,0x71,0xaa,0x51,0x39,0x69,0x24,0xb6,
    0x52,0x3b,0x16,0x20,0x6e,0x01,0x69,0xb4,0x10,0x71,0xac,0xd1,0x22,0xe3,0x70,0xd6,
    0x68,0x31,0x69,0xb4,0x88,0x34,0xaa,0x40,0xce,0x52,0xd2,0xa8,0x0c,0x39,0x55,0x23,
    0xf5,0x29,0x27,0x8d,0x2a,0x48,0xa3,0x4f,0x8d,0xcb,0x2f,0xbc,0xca,0xc0,0x55,0x35,
    0xda,0x6d,0x9c,0x7d,0x67,0xe0,0xdd,0x73,0x09,0x1a,0xe9,0xbb,0xa7,0x36,0xa0,0xd1,
    0x32,0xd4,0x5c,0x46,0x1a,0xad,0x30,0x2e,0x4e,0x35,0x5a,0x47,0x1a,0x89,0x6d,0xa5,
    0x1d,0xd5,0x88,0xab,0x26,0x8d,0x6a,0x10,0xc7,0x1a,0xad,0x31,0x0e,0x67,0x8d,0xd6,
    0x92,0x46,0x6b,0x48,0xa3,0x5a,0xe4,0x5c,0x49,0x1a,0xad,0x42,0x4e,0xd5,0x48,0x7d,
    0xd6,0x91,0x46,0xb5,0xa4,0x51,0xab,0x71,0xf9,0x85,0xd7,0x2a,0x70,0x55,0x8d,0xea,
    0x8c,0xb3,0xef,0xa6,0x77,0x8f,0x9e,0xbd,0x8b,0x74,0xe6,0xcf,0x60,0xaf,0xd5,0x23,
    0xa6,0x96,0xde,0x3d,0x3f,0xe0,0xcc,0x5f,0xa6,0x33,0xff,0x23,0x70,0x3d,0xf3,0x3f,
    0x01,0xd3,0x33,0x7f,0x95,0xce,0xbc,0xd8,0xae,0xd8,0x71,0x0d,0x75,0xaf,0xd1,0x7d,
    0xf2,0x0b,0x72,0x5f,0xa7,0xdc,0xbf,0x02,0xd7,0xdc,0x37,0x80,0x69,0xee,0x36,0xca,
    0x2d,0xb6,0x9b,0x76,0xdc,0x42,0xee,0x5b,0xf4,0xdd,0xfd,0x3b,0x72,0xdf,0xa6,0xef,
    0xee,0x3f,0x80,0x5f,0xc0,0xdf,0x51,0x7f,0x02,0xab,0xa1,0x7a,0x7f,0x01,0xaf,0x42,
    0xbd,0x76,0xaa,0x27,0xb6,0x3b,0xbe,0x6e,0xae,0xde,0x1d,0x2f,0xaa,0xf5,0x01,0xe3,
    0xde,0x69,0x67,0xe8,0xef,0x2d,0xf5,0x6b,0x27,0xad,0xcf,0x1a,0xe7,0x73,0x0b,0x31,
    0x77,0x88,0xcf,0x5d,0xf0,0xe9,0x20,0x3e,0xf7,0x80,0x2b,0x9f,0x07,0xc4,0xe7,0x9e,
    0xbf,0xaf,0x3d,0x1f,0x93,0x3a,0xf7,0x89,0xcf,0x41,0xf0,0x39,0x4b,0x6b,0xaf,0x7e,
    0x0f,0x88,0xcf,0x39,0xe3,0x7c,0xda,0x11,0x73,0x9f,0xf8,0x3c,0x04,0x9f,0x06,0xe2,
    0xe3,0x19,0x87,0x2b,0x9f,0x10,0x9d,0x15,0xb1,0x19,0xa9,0x87,0x3d,0x6b,0x68,0x2f,
    0x7e,0x68,0xdc,0xff,0x2d,0xce,0x99,0xe8,0xfb,0x47,0xfd,0x42,0x26,0xca,0xe7,0x4b,
    0xf8,0x3c,0x40,0x8c,0xc1,0x39,0x68,0x03,0xf7,0x9b,0x74,0xd6,0x7f,0x83,0xde,0x61,
    0xea,0x7b,0x9f,0x89,0xe2,0xfa,0x37,0xa5,0xc6,0xb6,0x51,0xdf,0x5f,0x18,0x57,0x4b,
    0x6a,0x4b,0xcc,0x4d,0xf8,0x5e,0x85,0xef,0x15,0x7a,0x8f,0xfe,0x8c,0x7c,0x32,0xf4,
    0xff,0xbf,0x21,0x7a,0x8f,0x6a,0xcc,0x55,0xca,0xff,0xb9,0x71,0x35,0xda,0x10,0x7f,
    0xc5,0xff,0x9f,0x58,0xd8,0xff,0xdf,0x8c,0xd8,0xfe,0xb1,0x62,0x8d,0xb4,0xe3,0x5f,
    0x1f,0x12,0xa7,0x58,0xb8,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform sampler2D src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texture(
//         src, vec2(params . srcOffset + srcSubImageCoords)/ textureSize(src, 0), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
