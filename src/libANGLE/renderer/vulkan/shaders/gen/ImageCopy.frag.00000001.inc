// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000001.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000001[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x96,0xdb,0x6f,0x55,0x55,
    0x10,0xc6,0xd7,0x3a,0xa7,0x37,0x8a,0xad,0x60,0xab,0x22,0x12,0xd2,0x0a,0x22,0xd2,
    0x5a,0x4a,0x8b,0x80,0xc0,0x29,0xd6,0x2a,0x6d,0x22,0x82,0xb4,0x21,0x41,0x44,0xa5,
    0x8a,0x28,0x10,0x79,0xc1,0x17,0x12,0xe4,0xa2,0x10,0x88,0x20,0xd2,0x88,0xd2,0x18,
    0x21,0x12,0x79,0x00,0x91,0x3e,0x08,0x6a,0xab,0x12,0x34,0x4a,0x0d,0x4a,0x13,0xa5,
    0x81,0xbf,0xc0,0x48,0x24,0x5e,0x78,0x01,0x8b,0xa0,0xb8,0x66,0xed,0xdf,0xf4,0x8c,
    0x27,0x12,0x4f,0xb2,0xb2,0xf7,0xfa,0x66,0xbe,0xb9,0x7c,0x7b,0xd6,0x3e,0x3b,0x9d,
    0x1a,0x53,0xe8,0x9c,0x77,0xc5,0xae,0xc8,0x35,0x79,0x17,0x7f,0xc3,0x5d,0xca,0xc9,
    0xed,0x50,0x57,0x10,0xaf,0xcd,0x73,0xda,0xe6,0xd4,0xac,0x7e,0x71,0x69,0xcd,0xe4,
    0x7b,0x6b,0xc5,0x5e,0xea,0xd2,0xd1,0x4f,0x6c,0x37,0xba,0x42,0x97,0x17,0xae,0xb2,
    0x5e,0x68,0x5f,0xbe,0x4a,0xf0,0x71,0x61,0x9d,0x0d,0x6b,0x58,0xf0,0x13,0xbc,0x50,
    0x62,0x84,0xbb,0x71,0x31,0xa6,0x70,0x9c,0x6b,0x71,0xf9,0xae,0x3a,0x49,0xe7,0xc6,
    0x70,0x55,0xcc,0x83,0x15,0x19,0x2c,0x05,0x36,0xcc,0x60,0x69,0xb0,0x72,0x83,0xe5,
    0x81,0x8d,0x30,0x58,0x3e,0xd8,0x28,0x83,0x15,0x80,0x55,0x18,0xac,0x10,0x6c,0xac,
    0xc1,0x8a,0xc0,0xc6,0x1b,0x6c,0x08,0x58,0xb5,0xc1,0x8a,0xc1,0x6a,0x0d,0x36,0x14,
    0x6c,0xb2,0xc1,0x6e,0x00,0x9b,0x66,0xb0,0x12,0xb0,0x99,0x06,0x2b,0x05,0xbb,0x3f,
    0x6a,0x97,0x1e,0xd4,0x40,0x74,0x5c,0x14,0xae,0x77,0xa0,0x99,0xee,0x2b,0xcd,0x5e,
    0xb4,0x1f,0xcd,0xbe,0x2c,0xb0,0x52,0xd1,0x9e,0x8e,0x7a,0xc9,0xfd,0x2d,0xe1,0xae,
    0x80,0xde,0xab,0x82,0x7f,0x01,0x35,0x8c,0xaa,0x79,0x64,0x46,0x79,0xf0,0x28,0x35,
    0x78,0x59,0x58,0xad,0xdd,0x73,0x1b,0x75,0x2f,0xba,0x2e,0x58,0x70,0xa6,0x41,0xf7,
    0x23,0xc3,0xca,0x14,0x6f,0x99,0xa5,0x7b,0xd1,0xb8,0xab,0xb9,0x3d,0x73,0x73,0xd8,
    0x57,0x90,0x43,0x9e,0xe7,0xad,0x61,0x5f,0xc9,0x3e,0xc5,0x7e,0x2c,0xcf,0x21,0x2f,
    0xe2,0x79,0xee,0x4e,0x7c,0x05,0x9f,0xc1,0x7e,0x9c,0xe1,0xdf,0x85,0xbf,0xf0,0x25,
    0x7e,0x15,0xf1,0x5c,0xec,0x77,0x78,0xd4,0xa8,0x92,0x55,0x61,0x56,0xd5,0xff,0xac,
    0x8a,0xc1,0x6b,0x9e,0xbb,0x87,0xe7,0x5b,0x4d,0x0d,0xb2,0xaf,0x01,0xab,0xa2,0xa7,
    0x89,0xd4,0x24,0xfe,0xb5,0xd8,0x2a,0x8d,0x7d,0x0a,0x33,0x27,0xf6,0xa9,0x83,0xdc,
    0xc4,0x2e,0xd7,0xe9,0xd4,0xac,0xfe,0x4d,0xf4,0xa5,0xfb,0xb9,0x3c,0xff,0xdb,0x02,
    0x73,0x21,0x36,0x8e,0xe6,0xe0,0x4f,0xf7,0x92,0xe3,0x31,0xee,0x17,0x52,0xb3,0xec,
    0x17,0xe5,0xe4,0x58,0x9c,0xb3,0x6f,0x47,0x47,0xe1,0x3f,0x4d,0x8d,0x15,0xc6,0xbe,
    0x8c,0xf9,0xd5,0xfd,0x5a,0xce,0x87,0x3c,0x87,0xcd,0xd4,0x94,0x36,0xf6,0xed,0x9c,
    0x15,0x9d,0x83,0x5d,0x26,0x9f,0xec,0xf7,0xc5,0xdd,0xfa,0x26,0xe1,0xef,0x27,0x57,
    0x9e,0xe1,0x1f,0xcc,0xd1,0xf8,0x28,0x67,0x4a,0xf7,0xc7,0x99,0x51,0xdd,0x9f,0x34,
    0x73,0x73,0x86,0x5a,0xf6,0xd3,0xff,0x19,0xde,0x3f,0xe9,0xf8,0x2c,0xf2,0x63,0x9f,
    0x79,0xd4,0x23,0xd8,0x40,0x40,0xe4,0xf9,0x64,0x98,0xc1,0xf1,0xcc,0xd9,0xbc,0xd0,
    0xa1,0xcc,0xd8,0xdd,0x60,0xe3,0x8d,0xd6,0xab,0x98,0xdf,0x09,0xd8,0x1b,0x43,0x04,
    0x79,0xf6,0x93,0x98,0x8f,0x89,0xc4,0x13,0x9f,0x3a,0xf0,0x97,0x83,0x8f,0xec,0xeb,
    0xe1,0xd5,0xc1,0x9b,0xca,0xf9,0xaf,0x61,0x56,0x32,0xcc,0xc5,0x7d,0xe0,0x87,0x82,
    0x4f,0x69,0xec,0x25,0xc1,0x64,0x5e,0xfe,0x08,0x95,0x67,0xa8,0xe7,0xcf,0xe0,0x3f,
    0x83,0xf7,0x45,0x86,0x7e,0xe4,0x7e,0x7e,0xe0,0x55,0xf0,0xce,0xa8,0xc7,0x77,0x1d,
    0x7a,0x35,0x82,0xb7,0x86,0xa7,0x21,0x35,0x8d,0xf0,0x09,0xa6,0x7e,0x97,0x43,0x0c,
    0x8d,0x25,0xd7,0x8b,0x41,0x0b,0xf1,0x9b,0xe4,0x13,0x9f,0x7c,0x38,0x33,0x4d,0x0f,
    0x0f,0xd2,0x43,0x93,0xe9,0xe1,0x21,0x70,0xed,0x61,0x36,0x98,0xf6,0xd0,0x62,0x7a,
    0x98,0x1d,0xdf,0x57,0x2e,0x62,0x92,0xb7,0xd9,0xf4,0xf0,0x30,0xb9,0xbd,0xe9,0x61,
    0x0e,0xb8,0xf6,0x70,0xbb,0x4f,0x30,0xf5,0x93,0x1e,0x34,0x56,0x8b,0xe9,0xa1,0xce,
    0x27,0x3e,0x19,0x38,0xcd,0xa6,0x87,0x79,0xf4,0x30,0xd7,0xf4,0xf0,0x28,0xb8,0xf6,
    0x30,0x1f,0x4c,0x7b,0x68,0x33,0x3d,0xcc,0x8f,0xf5,0xb8,0x88,0x49,0xde,0x56,0xe6,
    0x48,0xf2,0x2e,0x20,0x77,0x9d,0xcf,0x9e,0x57,0xa9,0x51,0x7d,0xdb,0x4c,0x8d,0xf5,
    0xf8,0xb5,0xc0,0x6b,0xa5,0x1e,0x39,0xd3,0x8f,0x73,0x9e,0x75,0xe6,0x9e,0xa0,0xe6,
    0xc5,0x66,0xe6,0x9e,0x04,0xdf,0xc0,0xcc,0x2d,0x01,0xab,0xf7,0x09,0x4f,0xce,0xf8,
    0x33,0xf0,0xda,0xe1,0x89,0xa6,0x4b,0xc1,0x9f,0x0a,0x75,0xc8,0x59,0x78,0x96,0x7c,
    0x4b,0x78,0x3f,0x2c,0x35,0x5a,0x3d,0x07,0x7f,0x99,0xd1,0xea,0x79,0x70,0xd5,0x6a,
    0x39,0x98,0x6a,0xb5,0xd2,0x68,0x25,0xb6,0x15,0x61,0xad,0xa4,0xff,0x15,0x3c,0xef,
    0x82,0x78,0xbe,0x92,0xdc,0x0e,0xde,0x05,0xee,0xaf,0x84,0x7b,0x89,0xf5,0x23,0x1c,
    0xb9,0x7e,0x4e,0xae,0x9f,0xe0,0x95,0xc0,0xf9,0xdd,0xe4,0x12,0xdb,0xb9,0xb0,0xce,
    0xc3,0x3b,0x1f,0xff,0x7b,0x0b,0x63,0xae,0x5f,0x38,0xd3,0x23,0xe1,0xcb,0x7f,0xda,
    0x66,0xea,0xf8,0x15,0xbb,0xd8,0x5e,0x01,0xfb,0x0d,0x7c,0x14,0xcf,0xef,0x02,0x31,
    0xcf,0x19,0xde,0xcf,0xc4,0x2a,0xcb,0xf1,0x91,0x9a,0xae,0x85,0x6c,0x03,0x60,0x17,
    0xa9,0x61,0xb2,0x4f,0xe2,0x9e,0x87,0x7b,0x8e,0xb9,0x96,0x67,0x30,0xda,0x27,0x76,
    0xd5,0x43,0x35,0x5a,0x8d,0x46,0x9e,0x7e,0x53,0xfe,0xdf,0x1a,0x5d,0x22,0xe7,0x25,
    0xa3,0xd1,0x00,0x3c,0xd5,0xc8,0xfb,0xac,0x46,0x03,0xb1,0x56,0xe7,0xae,0xc2,0xbb,
    0x6a,0x34,0xfa,0xdb,0x68,0xb4,0x3a,0x47,0xa3,0x6b,0xd8,0xad,0x46,0xe2,0x7c,0xcd,
    0x68,0x24,0xb5,0x49,0xcc,0xcb,0x86,0x77,0x85,0x58,0x65,0x39,0x3e,0xde,0x67,0x35,
    0x12,0x4c,0x35,0x9a,0xe2,0x93,0xb8,0x57,0xe1,0x5e,0x36,0x1a,0x55,0xfa,0xc4,0x3e,
    0x9a,0xb3,0xa5,0x1a,0xad,0x41,0xa3,0x14,0xfd,0x96,0xe7,0x68,0x54,0x44,0x4e,0xb9,
    0xaa,0x46,0xc5,0x3e,0xe1,0xa9,0x46,0x65,0x46,0x23,0xb1,0x0d,0x0d,0xab,0x14,0x9e,
    0x5c,0x55,0xa3,0x61,0x3e,0xab,0xd1,0x9a,0x1c,0x8d,0x86,0xfb,0xc4,0x6e,0x35,0xba,
    0xc9,0x27,0xb8,0x6a,0x54,0x4e,0x4c,0x89,0xaf,0xbc,0x12,0x6a,0x29,0xcb,0xf1,0x29,
    0x33,0x1a,0x95,0x1b,0x8d,0xa6,0xf9,0x24,0xae,0xd4,0x55,0x42,0xad,0xaa,0xd1,0x58,
    0x9f,0xd8,0x45,0xab,0x14,0xf1,0xf4,0xec,0xad,0x64,0x16,0xc5,0x6f,0x3a,0xb3,0xd6,
    0x06,0xa7,0xdc,0x67,0xcf,0xfc,0x4b,0x9c,0xf9,0xb5,0xe6,0xcc,0xaf,0x03,0xd7,0x33,
    0xbf,0x1e,0x4c,0xcf,0xfc,0x46,0x73,0x0e,0xd7,0xc7,0x77,0x92,0x73,0xdb,0xc8,0xbb,
    0xcd,0xbc,0x4f,0x5e,0x23,0xf6,0x76,0x13,0x7b,0x07,0xb8,0xc6,0x7e,0x1d,0x4c,0x63,
    0x77,0x98,0xd8,0x62,0xdb,0x19,0x56,0x07,0xb1,0x77,0x9a,0x39,0x78,0x83,0xbe,0xe4,
    0xff,0xfe,0x53,0x62,0xbd,0x09,0xbe,0x0b,0x2d,0x94,0xd7,0x81,0x16,0xe2,0xf3,0x16,
    0x39,0xb7,0xe1,0xbf,0x93,0xbc,0x9d,0x26,0xaf,0xf8,0xec,0x0e,0xab,0x13,0xfe,0x6e,
    0x93,0xf7,0x6d,0x93,0x77,0x5e,0xf8,0x22,0x92,0x6f,0xa5,0x77,0xc0,0xa6,0xfb,0xec,
    0xf7,0x44,0x2a,0xfe,0xa7,0x14,0x44,0xfb,0x1e,0x78,0xba,0xb6,0x86,0x58,0x82,0xef,
    0x85,0xbb,0x27,0xc6,0x1a,0x12,0x9f,0xd5,0xbb,0xc4,0xda,0xcb,0x37,0x4d,0xbe,0xf9,
    0x16,0x93,0x9e,0xb4,0xa6,0x4e,0xf3,0x7c,0x33,0xe4,0xee,0x80,0xbf,0x1b,0xdf,0x8d,
    0xf8,0x6e,0x30,0xf5,0x6f,0xfa,0x8f,0xfa,0xb7,0x5c,0xa7,0xfe,0x1d,0xd4,0xb9,0x15,
    0x9f,0x4d,0xa6,0xce,0x57,0xe1,0x6c,0xbd,0x4e,0x9d,0x9a,0x7b,0xa3,0xa9,0x73,0xa6,
    0x4f,0x6a,0xed,0x84,0xbf,0x81,0x1c,0x62,0x7b,0x0f,0xfb,0x3e,0xbe,0xc5,0xe4,0x5b,
    0xef,0x00,0xb8,0xce,0xd3,0xfb,0xcc,0xd3,0x41,0x33,0x4f,0x87,0xc0,0x75,0x9e,0x3e,
    0x00,0xd3,0x79,0xea,0x32,0xcf,0x55,0x6c,0x87,0xc3,0x3a,0x42,0x6d,0x47,0x4c,0xec,
    0x8f,0x88,0x7d,0xd4,0xc4,0xfe,0x18,0x5c,0x63,0x7f,0x02,0xa6,0xb1,0x7b,0x4c,0x6c,
    0xb1,0x75,0x87,0x75,0x8c,0xd8,0xc7,0x5c,0xf6,0x7f,0xf9,0x0b,0x62,0x1f,0x37,0xff,
    0xcb,0x5f,0x82,0x7f,0xc3,0xf7,0xd0,0x57,0x60,0xed,0x26,0xdf,0xd7,0xe0,0x8b,0xc9,
    0xd7,0x6b,0xf2,0x89,0xed,0x44,0x58,0xbd,0xe4,0x3b,0xc1,0xbb,0x53,0x74,0xab,0xf6,
    0x09,0xe7,0x80,0xcb,0x7e,0x37,0xa9,0x5f,0x2f,0xcf,0x43,0xfc,0x1a,0x7c,0xe2,0x73,
    0x0c,0xce,0x09,0x53,0xcf,0xb7,0xd4,0x73,0xd2,0xd4,0xf3,0x1d,0xb8,0xd6,0xd3,0x67,
    0xea,0x11,0xdb,0xa9,0xb0,0xfa,0xc8,0x73,0xca,0xd4,0x53,0x43,0x3d,0x0d,0xe6,0x3d,
    0xa5,0x7e,0x7d,0xa6,0x9e,0x59,0x3e,0xf1,0xe9,0x85,0x73,0xca,0xd4,0xf3,0x3d,0xf5,
    0x6c,0x37,0xf5,0xfc,0x00,0xae,0xf5,0xf4,0x9b,0x7a,0xc4,0x76,0x3a,0xac,0x7e,0xf2,
    0x9c,0x36,0xf5,0xd4,0xfa,0xe4,0x7b,0x7e,0x96,0xcf,0xce,0xab,0xfa,0xf5,0x9b,0x7a,
    0x1e,0xf0,0x89,0x4f,0x1f,0x9c,0xd3,0xf8,0xf6,0xe0,0xdb,0x6d,0xbe,0x67,0x3f,0x43,
    0xef,0xb4,0xc9,0x33,0xc1,0x67,0x71,0x97,0xc3,0xed,0x31,0x79,0x1a,0x7d,0x92,0xab,
    0x1f,0x4e,0x37,0xbe,0x5d,0xf8,0x1e,0xe6,0xdc,0x89,0xef,0x87,0xc4,0x3b,0xc0,0xb9,
    0x2b,0xe4,0xac,0xa6,0x73,0x38,0x5d,0x26,0xfe,0xfd,0x3e,0xc9,0xd1,0x03,0x5f,0xe2,
    0x35,0x04,0xc6,0x59,0x6c,0x7f,0x85,0x29,0x99,0x16,0xd6,0x3f,0xd3,0x8b,0xcd,0xc7,
    0x2c,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2D src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, params . srcOffset + srcSubImageCoords, params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
