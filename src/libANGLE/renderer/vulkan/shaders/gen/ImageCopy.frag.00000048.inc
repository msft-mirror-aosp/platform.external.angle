// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000048.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000048[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x5b,0x6c,0x55,0x55,
    0x10,0x86,0xf7,0x3a,0xe7,0xf4,0x02,0x85,0x0a,0xa1,0x82,0x60,0x31,0xad,0x85,0x5a,
    0x6c,0x69,0x11,0x10,0x10,0x7a,0x04,0x44,0x68,0x0d,0xd8,0xd2,0x56,0xf1,0xc2,0x4d,
    0xca,0x4d,0xbc,0x54,0x23,0x1a,0x13,0x03,0x58,0xa8,0xa8,0x11,0x22,0xa0,0x34,0x4a,
    0x1b,0x15,0xe2,0x03,0x0f,0x22,0x42,0xe2,0x8b,0x89,0x89,0x09,0x2a,0x7d,0x10,0x54,
    0x1a,0x43,0xd0,0xa0,0xd4,0x44,0xdb,0x44,0xa9,0x81,0x07,0x14,0x35,0x06,0xd7,0xec,
    0xf5,0x4d,0x3b,0x69,0x34,0x34,0x59,0xd9,0x7b,0xfd,0x6b,0xe6,0x9f,0x99,0x7f,0xcf,
    0x5a,0x7b,0x9f,0x26,0x13,0x45,0x59,0x51,0xe4,0xa2,0xc1,0x51,0x76,0xb4,0xce,0x45,
    0xf1,0xdf,0xf0,0x28,0x11,0xc9,0x6d,0x4e,0x94,0x19,0x5f,0xab,0x16,0x35,0x2c,0x2a,
    0xdf,0xf8,0xf4,0x9a,0xf2,0xa9,0xb7,0x4e,0x92,0xf5,0xdc,0x28,0x19,0xdb,0xc9,0xda,
    0x35,0x51,0x56,0x94,0xf2,0x57,0x19,0x8f,0xaf,0xda,0xd0,0x24,0x78,0xb1,0x1f,0x17,
    0xfd,0x18,0xe6,0xed,0x04,0xcf,0x12,0x0e,0x7f,0x57,0x1c,0x73,0x8a,0x4f,0x14,0x55,
    0x47,0x19,0x51,0x59,0x08,0x17,0x15,0x71,0x55,0xcc,0x81,0x65,0x1b,0x2c,0x01,0x36,
    0xcc,0x60,0x49,0xb0,0x3c,0x83,0xa5,0xc0,0xae,0x33,0x58,0x06,0x58,0xbe,0xc1,0x32,
    0xc1,0x0a,0x0c,0x96,0x05,0x36,0xce,0x60,0xd9,0x60,0x25,0x06,0x1b,0x04,0x56,0x66,
    0xb0,0xc1,0x60,0x93,0x0c,0x96,0x03,0x36,0xd5,0x60,0x43,0xc0,0x66,0x18,0x6c,0x28,
    0x58,0xa5,0xc1,0x72,0xc1,0xe6,0xc4,0xda,0x25,0xfb,0x34,0x10,0x1d,0x37,0xf8,0xeb,
    0x8d,0x68,0xa6,0xf3,0x42,0x33,0x17,0xed,0x6f,0x60,0x3e,0xc2,0x7b,0x25,0xe2,0xf5,
    0x64,0xac,0x97,0xdc,0x8f,0xf4,0x77,0x99,0xd4,0x5e,0xea,0xed,0x33,0xc9,0xa1,0xfb,
    0xf0,0xf8,0x74,0x9e,0xb7,0xc8,0x35,0xb8,0xe8,0x78,0xb8,0x6a,0x55,0x5a,0xe7,0xa2,
    0x61,0xdb,0xbe,0xd1,0x73,0xae,0xf5,0xf3,0x02,0x38,0xe4,0x79,0x8d,0xf2,0xf3,0x42,
    0xe6,0x09,0xe6,0xe3,0xd0,0x39,0x15,0xe3,0xa9,0x68,0x3c,0xb6,0x82,0xcf,0x62,0x5e,
    0x6c,0xfc,0x6f,0xc2,0x5e,0xfc,0x85,0xbf,0x14,0xbe,0x28,0xae,0x67,0x78,0xac,0x41,
    0x21,0xa3,0xc0,0x8c,0xd2,0xab,0x8c,0x82,0xbe,0x6b,0x2a,0x9a,0xc8,0xf3,0x2b,0x23,
    0x07,0x99,0x97,0x83,0x95,0x52,0x53,0x05,0x39,0x89,0xfd,0x24,0xd6,0x0a,0xcd,0xfa,
    0x34,0x7a,0x4a,0xd6,0xa7,0xf7,0xf9,0x86,0x75,0xb9,0xce,0x24,0x67,0xb5,0x9f,0x47,
    0x5d,0x3a,0xaf,0xe1,0xf9,0x4a,0xcd,0x4b,0xf0,0x4d,0xc5,0x39,0x65,0xc5,0xf3,0x07,
    0xe0,0xb0,0x43,0x7d,0x97,0x0e,0xe0,0x6e,0x34,0xfa,0xae,0x26,0x17,0xc1,0x47,0xfb,
    0xbb,0xf5,0x70,0xb3,0xad,0xfb,0xf6,0xac,0xce,0xc5,0xe7,0x61,0xee,0xd7,0xa3,0x87,
    0xcc,0x37,0x0c,0x88,0xb1,0x85,0xbd,0x21,0xf9,0xbe,0x0c,0x67,0xd2,0xac,0xef,0x66,
    0x9f,0xe8,0xfc,0x10,0x7d,0xae,0xf3,0x63,0x03,0xf4,0x3d,0xc9,0x7e,0xd1,0xf9,0x19,
    0xfa,0x4f,0xe7,0x67,0xe9,0x01,0xed,0xb9,0x1f,0x4d,0x3e,0x32,0xff,0x2d,0x9e,0x35,
    0xcf,0x96,0xfc,0x2f,0x90,0x8b,0xf6,0xd4,0x05,0xce,0x9e,0xa4,0xb1,0xbf,0xdb,0x17,
    0xbc,0xb5,0xb9,0x79,0x96,0xe8,0x2b,0x76,0x35,0x2e,0x60,0x76,0xa8,0x6d,0xad,0xbf,
    0x7f,0xe2,0xe0,0x53,0xb3,0x75,0xbe,0xd8,0xcf,0xf7,0xb4,0xbc,0x9d,0x9e,0xe6,0x9f,
    0x78,0x02,0xad,0x23,0xf8,0x2f,0x7b,0x44,0xfa,0x20,0x4d,0xaf,0x97,0xd0,0xcf,0xb5,
    0x3e,0x8e,0xf4,0xf2,0x04,0xb0,0x12,0xa3,0x7d,0x13,0xfb,0xe4,0x66,0xd6,0xe7,0x7a,
    0x06,0xe9,0xb1,0x5b,0xe8,0xc3,0x0a,0xf8,0xc4,0x66,0x32,0xf8,0x36,0x6f,0x23,0xf3,
    0x29,0xf8,0x4d,0xc6,0x6f,0x3a,0xe7,0x48,0x39,0x3d,0x99,0xa6,0xff,0x6e,0x03,0x7f,
    0xcf,0xdb,0xe4,0xc6,0xba,0x04,0x4c,0xfa,0xe8,0x0f,0x9f,0x79,0x9a,0x7c,0xfe,0xf2,
    0xf6,0xb3,0x38,0x77,0xd2,0xd4,0x23,0xf7,0x75,0xde,0xaf,0x80,0xb3,0x67,0x0a,0xb6,
    0x5b,0x78,0x36,0x73,0xc1,0xeb,0xbd,0x3a,0x71,0x4e,0x2e,0x60,0x6a,0xf7,0xa7,0xe7,
    0x50,0x2e,0xb9,0x5e,0xf2,0x5a,0x88,0x5d,0x9d,0x0b,0x36,0x19,0xf8,0x54,0x9a,0x1a,
    0xee,0xa4,0x86,0x79,0xa6,0x86,0xf9,0xe0,0x5a,0xc3,0x02,0x30,0xad,0xa1,0xda,0xd4,
    0xb0,0x20,0x3e,0xf7,0xa2,0x18,0x93,0xb8,0x55,0xa6,0x86,0x85,0xc4,0x76,0xa6,0x86,
    0x45,0xe0,0x5a,0xc3,0x34,0x17,0x30,0xb5,0x93,0x1a,0x94,0xab,0xda,0xd4,0x50,0xef,
    0x82,0x4d,0x1a,0x9f,0x2a,0x53,0x43,0x2d,0x35,0xd4,0x98,0x1a,0x16,0x83,0x6b,0x0d,
    0x75,0x60,0x5a,0x43,0x83,0xa9,0xa1,0x2e,0xce,0x27,0x8a,0x31,0x89,0x5b,0x4f,0x1f,
    0x49,0xdc,0x7b,0x89,0x5d,0xef,0xfa,0xf7,0xae,0xe4,0xa8,0xb6,0x0d,0x26,0xc7,0xb5,
    0xd8,0x55,0xab,0x1f,0xb6,0xcb,0xb0,0x5d,0x86,0xad,0x9c,0x33,0xf7,0xb8,0x70,0xd6,
    0x88,0xff,0x33,0x7e,0x2c,0x67,0x4d,0x34,0x6a,0x70,0xe1,0xac,0x91,0xb5,0x67,0x59,
    0x93,0x5a,0xe5,0x8c,0x59,0x43,0xad,0x8d,0xd4,0x2a,0xf6,0x6b,0xc1,0x8f,0x52,0xeb,
    0x3a,0x38,0x04,0xff,0xdd,0xdb,0xac,0x80,0x43,0xeb,0x5d,0xc7,0x7c,0x05,0x79,0x2d,
    0x87,0x4b,0xce,0xa1,0x47,0x38,0x83,0x74,0x6f,0x3c,0x4a,0xbc,0xa5,0x66,0x6f,0x3c,
    0x06,0xde,0xcc,0xde,0x68,0x02,0x93,0xfa,0x57,0x52,0xdf,0x46,0xb8,0x9a,0xe8,0x59,
    0xc9,0x47,0xec,0x97,0x50,0xaf,0xd4,0xbf,0x11,0x8e,0x02,0xea,0x14,0x9b,0x8a,0x01,
    0x9a,0x49,0x8e,0x9b,0x78,0xa6,0xcf,0x51,0xeb,0x62,0x62,0x6c,0x02,0xb3,0xe3,0x45,
    0x62,0x6c,0x26,0xc6,0x26,0xd3,0x27,0xcf,0x53,0xcb,0x16,0xd3,0x27,0xcd,0xe0,0xda,
    0x27,0x5b,0xc1,0xb4,0x4f,0x5a,0x8c,0x6e,0x5b,0xe3,0xf3,0x20,0x8a,0x76,0x91,0xdb,
    0x2e,0xc3,0xbd,0x07,0xee,0xdd,0x86,0xfb,0x35,0x70,0xe5,0x7e,0x1d,0x4c,0xb9,0x5b,
    0x0d,0xb7,0xac,0xed,0xf5,0xa3,0x15,0xee,0xbd,0xec,0x23,0xe1,0x79,0x83,0x7a,0x92,
    0xf1,0xf9,0x1e,0xb8,0xde,0x04,0x9f,0x89,0x5e,0xea,0xd7,0x4a,0x1f,0x89,0xcd,0x3e,
    0x62,0xee,0xc2,0x7e,0x2f,0x71,0xdb,0x4d,0x5c,0xb1,0x69,0xf3,0xa3,0x1d,0xff,0x36,
    0x13,0xf7,0x2d,0x13,0xb7,0xd6,0xbf,0x65,0xe4,0xfd,0xf3,0x0e,0xd8,0x66,0x73,0xae,
    0x26,0xe2,0x67,0x92,0x19,0xaf,0xef,0xc7,0x4f,0x87,0x3c,0x0f,0xc1,0x0f,0xe0,0xbb,
    0x3f,0xe6,0x1a,0x14,0x3f,0xa3,0x77,0xe1,0x39,0xc0,0xd9,0x9e,0xc1,0xbb,0x3a,0x49,
    0x4d,0x9a,0x53,0xbb,0xd9,0x37,0xf7,0xb9,0xe0,0xd3,0x8a,0x7f,0x1b,0xb6,0x2d,0xd8,
    0x6e,0x33,0xf9,0xbf,0xf4,0x1f,0xf9,0xbf,0x72,0x95,0xfc,0x77,0xe0,0xa7,0xe3,0x05,
    0xf2,0xdf,0x89,0xef,0x0e,0x93,0xff,0xab,0xf0,0xec,0xfc,0x9f,0xfc,0x35,0xa7,0x16,
    0x93,0xff,0x12,0x17,0x6a,0x68,0xc7,0x5f,0xf2,0x7d,0x92,0x77,0xd8,0x41,0xd6,0xb7,
    0x7b,0xa6,0x71,0x71,0xdf,0x04,0xac,0xc6,0xf5,0xf7,0xd9,0xfb,0xf4,0xd9,0x21,0xd3,
    0x67,0x87,0xc1,0xb5,0xcf,0x3e,0x00,0xd3,0x3e,0x3b,0x6a,0x9e,0xb7,0xac,0x1d,0x89,
    0xcf,0x8a,0x90,0xdb,0x11,0xf4,0x92,0xbc,0x3f,0x24,0x66,0x84,0x5f,0x0e,0x07,0xde,
    0xdf,0xfe,0x5e,0xb8,0xae,0xe0,0x23,0xd7,0x8f,0x89,0xe5,0x5c,0xf0,0x1b,0x8a,0xcf,
    0x60,0xd7,0x1f,0x4b,0xd6,0x12,0x7e,0x64,0x38,0xde,0xd7,0xf2,0x2d,0x40,0xac,0x2c,
    0xfc,0xe4,0x1b,0x77,0x3b,0x58,0xb6,0x0b,0xb8,0x7c,0x07,0x0c,0xf1,0x7a,0x09,0x36,
    0x88,0x73,0x77,0x0c,0xeb,0xf9,0x68,0x9b,0x03,0x67,0xc2,0xf5,0xfb,0xa7,0xe0,0x94,
    0xef,0x06,0x6b,0x23,0x39,0x5d,0xf1,0x2c,0x97,0xc1,0x2e,0xc1,0x7d,0xbf,0x0b,0xfc,
    0x92,0x57,0x8a,0x5c,0xe5,0xbd,0x24,0xda,0x57,0xba,0xb0,0xae,0x7a,0xa8,0x46,0x1f,
    0xa1,0x91,0xa3,0xde,0xb1,0x03,0x34,0x1a,0x4e,0x4c,0xb9,0xaa,0x46,0x23,0x5c,0xf0,
    0x53,0x8d,0xf2,0x8d,0x46,0xb2,0x96,0xe7,0xc7,0x28,0xfc,0x46,0x19,0x8d,0x46,0xe3,
    0x67,0x35,0x1a,0xe3,0x02,0x6e,0x35,0xba,0xde,0x68,0x34,0xc6,0x68,0x34,0x16,0xce,
    0x3c,0xa3,0xd1,0x48,0x38,0x55,0x23,0xb5,0xc9,0x37,0x1a,0x8d,0x35,0x1a,0x3d,0xe8,
    0x02,0xbf,0xe4,0x35,0x92,0x5c,0x55,0xa3,0xd9,0x2e,0xac,0x57,0x12,0x5f,0x35,0xfa,
    0x04,0x8d,0x12,0xd4,0x5b,0x31,0x40,0xa3,0x22,0x62,0x16,0x19,0x8d,0xc6,0xbb,0xe0,
    0xa7,0x1a,0x95,0x1b,0x8d,0x64,0xad,0xd8,0x8f,0x09,0xf8,0x4d,0x30,0x1a,0x95,0xe2,
    0x67,0x35,0x2a,0x73,0x01,0xb7,0x1a,0x4d,0x34,0x1a,0x95,0x19,0x8d,0x2a,0xe0,0x2c,
    0x36,0x1a,0x95,0xc0,0xa9,0x1a,0xa9,0x4d,0xb9,0xd1,0xa8,0xc2,0x68,0xb4,0xcc,0x05,
    0x7e,0xc9,0xab,0x84,0x5c,0x55,0xa3,0x3b,0x5c,0x58,0x17,0xad,0x12,0xc4,0xd4,0xbd,
    0x77,0x94,0x73,0x41,0xec,0x56,0xd0,0x6b,0x2d,0xf8,0x54,0x98,0x3d,0xff,0x29,0x7b,
    0xfe,0x98,0xd9,0xf3,0x9f,0x81,0xeb,0x9e,0xff,0x1c,0x4c,0xf7,0x7c,0x87,0xd9,0xf3,
    0xb2,0x76,0xdc,0x8f,0x13,0xc4,0x3d,0x61,0xde,0x5b,0x5f,0xc2,0x7d,0xd2,0x70,0x7f,
    0x05,0xae,0xdc,0x5f,0x83,0x29,0x77,0xa7,0xe1,0x96,0xb5,0x53,0x7e,0x9c,0x86,0xfb,
    0xb4,0xf9,0x56,0xf9,0x16,0xee,0x33,0xe6,0x5b,0xe5,0x3b,0xf0,0x0e,0xde,0xfb,0xdf,
    0x83,0x9d,0x35,0xf1,0x7e,0x00,0x5f,0x4a,0xbc,0x2e,0x13,0x4f,0xd6,0xce,0xf9,0xd1,
    0x45,0xbc,0x73,0x51,0xbf,0xd6,0x55,0x2e,0xfc,0x5e,0x59,0x61,0xbe,0x25,0xd5,0xae,
    0xcb,0x68,0xbd,0xd2,0x05,0x9b,0xd3,0xf8,0x9c,0x33,0xf9,0xfc,0x44,0x3e,0x8d,0x26,
    0x9f,0x9f,0xc1,0x35,0x9f,0x1e,0x93,0x8f,0xac,0x75,0xfb,0xd1,0x43,0x9c,0x6e,0x93,
    0xcf,0x5d,0xe4,0xb3,0xd2,0x3c,0x7b,0xb5,0xeb,0x31,0xf9,0x3c,0xe4,0x82,0x4d,0x17,
    0x3e,0xdd,0x26,0x9f,0x5f,0xc8,0x67,0xb7,0xc9,0xe7,0x57,0x70,0xcd,0xa7,0xd7,0xe4,
    0x23,0x6b,0xe7,0xfd,0xe8,0x25,0xce,0x79,0x93,0xcf,0x42,0x17,0x7e,0xbf,0x49,0x3c,
    0x7d,0x47,0xa9,0x5d,0xaf,0xc9,0x67,0xb5,0x0b,0x36,0x3d,0xf8,0x9c,0xc7,0xb6,0x13,
    0xdb,0x53,0x66,0xaf,0x7f,0x83,0xde,0x49,0x13,0x67,0xbe,0xeb,0xc7,0xa3,0x01,0xbe,
    0x9d,0x26,0x4e,0xa3,0x0b,0xb1,0x7a,0xf1,0x39,0x85,0x6d,0x07,0xb6,0xc7,0x79,0xd7,
    0x8a,0xed,0x17,0xf0,0xc9,0xd0,0xff,0x6b,0x25,0xcc,0xbb,0x56,0x7d,0x3a,0x0c,0xff,
    0x2a,0x17,0x62,0x74,0xe2,0x2f,0x7c,0xb7,0x7b,0x8f,0x8b,0xac,0xfd,0xe3,0xbb,0x64,
    0x86,0x1f,0xff,0x02,0x69,0x09,0xf9,0x18,0x88,0x13,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform utexture2DMS src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           uvec4 srcValue = uvec4(0);
//     for(int i = 0;i < params . srcSampleCount;i ++)
//     {
//         srcValue += texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), i);
//     }
//     srcValue /= params . srcSampleCount;
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     dstValue /= 255.0;
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
