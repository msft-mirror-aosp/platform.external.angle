// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x97,0xdb,0x6f,0x55,0x45,
    0x14,0xc6,0x67,0xce,0x39,0x6d,0xa1,0x40,0x01,0x0b,0x55,0x09,0x9a,0x53,0xc1,0x8a,
    0xb6,0x96,0x0a,0xe5,0x22,0xb4,0x40,0x2d,0xd0,0x1a,0x91,0x4a,0x1b,0x12,0x44,0x54,
    0xaa,0x88,0x02,0x81,0x17,0x7c,0x21,0x41,0x2e,0x0a,0x81,0x08,0x22,0x8d,0x28,0x8d,
    0x11,0xa2,0x91,0x07,0x10,0xe9,0x8b,0xa0,0xd0,0x68,0x08,0x1a,0x81,0x04,0xa5,0x89,
    0xd2,0xc0,0x5f,0x60,0x24,0x12,0x2f,0x24,0xc4,0x0a,0x01,0x9d,0x35,0xfb,0xb7,0x7a,
    0x96,0x27,0x12,0x9b,0x4c,0xf6,0x9e,0x6f,0xdd,0xbe,0xf5,0xed,0x35,0xfb,0xec,0xa6,
    0x53,0x63,0x8a,0x9c,0xf3,0xae,0xd8,0x0d,0x70,0x73,0xbc,0x8b,0x7f,0xc3,0x5d,0xca,
    0xc9,0xed,0x20,0x57,0x18,0xaf,0x4d,0xf3,0xda,0xe6,0x55,0xaf,0x7d,0x75,0x59,0x75,
    0xed,0xa4,0x1a,0xb1,0x97,0xb8,0x74,0xf4,0x13,0xdb,0x50,0x57,0xe4,0x32,0xe1,0x2a,
    0x6b,0x75,0xfb,0x8a,0x35,0x82,0x57,0x84,0x75,0x29,0xac,0x61,0xc1,0x4f,0xf0,0x22,
    0xc9,0x11,0xee,0x2a,0x62,0x4e,0x89,0x71,0xae,0xd9,0x15,0xb8,0xaa,0xa4,0x9c,0x1b,
    0xc3,0x55,0x31,0x0f,0x36,0xc0,0x60,0x29,0xb0,0x61,0x06,0x4b,0x83,0x8d,0x30,0x58,
    0x06,0xec,0x2e,0x83,0x15,0x80,0x8d,0x36,0x58,0x21,0x58,0xd6,0x60,0x45,0x60,0x63,
    0x0d,0x36,0x00,0x6c,0x9c,0xc1,0x06,0x82,0x55,0x19,0xac,0x18,0xac,0xc6,0x60,0x83,
    0xc0,0x6a,0x0d,0x36,0x18,0x6c,0xaa,0xc1,0x86,0x80,0xd5,0x19,0xac,0x04,0x6c,0x56,
    0xd4,0x2e,0xdd,0xaf,0x81,0xe8,0xb8,0x38,0x5c,0xef,0x43,0x33,0xdd,0x97,0x9b,0xbd,
    0x68,0x7f,0x2f,0xfb,0xd2,0x10,0x95,0x8a,0xf6,0x74,0xd4,0x4b,0xee,0xcb,0xc2,0x5d,
    0x21,0xbd,0x57,0x06,0xff,0x42,0x38,0x8c,0xae,0x7e,0x72,0xfa,0x88,0xe0,0x51,0x62,
    0xf0,0xd2,0xb0,0x5a,0x8f,0xcf,0x6f,0xd0,0xbd,0xe8,0xba,0x70,0x61,0xef,0x0c,0xdd,
    0x8f,0x0a,0xab,0xbe,0x78,0xdb,0x4c,0xdd,0x8b,0xc6,0x5d,0x4d,0xed,0xf5,0x23,0xc3,
    0x3e,0x4b,0x0d,0x79,0x9e,0x77,0x86,0x7d,0x39,0xfb,0x14,0xfb,0xb1,0x3c,0x87,0x4c,
    0xc4,0x33,0xee,0x7e,0x7c,0x05,0x9f,0xce,0xbe,0xc2,0xc4,0x3f,0x80,0xbf,0xc4,0x4b,
    0xfe,0x4a,0xf2,0xb9,0xd8,0xef,0xf0,0xa8,0x51,0x39,0x2b,0x6b,0x56,0xe5,0xff,0xac,
    0x6c,0xff,0x35,0xe3,0x1e,0xe6,0xf9,0x56,0xc1,0x41,0xf6,0xd5,0x60,0x95,0xf4,0x34,
    0x1e,0x4e,0xe2,0x5f,0x83,0xad,0xdc,0xd8,0x27,0x33,0x73,0x62,0x9f,0xd2,0x1f,0x9b,
    0xd8,0xe5,0x3a,0x0d,0xce,0xea,0xdf,0x48,0x5f,0x6a,0x7f,0x9c,0xfc,0x6a,0x9f,0xcf,
    0x3c,0xdc,0x1d,0x32,0x2d,0xc2,0x97,0xa3,0xda,0xff,0xa7,0x7b,0xa9,0xf9,0x34,0xf7,
    0x8b,0xe8,0x41,0xf6,0x8b,0xf3,0x6a,0x2e,0xc9,0xdb,0xb7,0xa3,0xab,0xc4,0xbf,0x00,
    0xe7,0xac,0xb1,0x2f,0x67,0x9e,0x75,0xbf,0x9e,0xf3,0x22,0xcf,0x65,0x2b,0x9c,0xd2,
    0xc6,0xbe,0x93,0xb3,0xa3,0x73,0xb1,0xc7,0xd4,0x93,0xfd,0x47,0x71,0xb7,0xb1,0x51,
    0xe2,0x0f,0xa0,0x4f,0xc6,0xc4,0x1f,0xca,0xd3,0xfc,0x18,0x67,0x4c,0xf7,0xa7,0x98,
    0x59,0xdd,0x9f,0x33,0x73,0x74,0x11,0x2e,0x07,0xe8,0xff,0x22,0xef,0xa3,0x74,0x7c,
    0x36,0x05,0xb1,0xcf,0x0c,0x7c,0x04,0xeb,0x0b,0x88,0x3c,0xaf,0x7a,0x66,0x72,0x1c,
    0x73,0xd7,0x12,0x3a,0x94,0x99,0x7b,0x10,0x6c,0x9c,0xd1,0x7a,0x0d,0xf3,0xfc,0x10,
    0xf6,0x86,0x90,0x41,0x66,0xe1,0x11,0xe6,0x65,0x3c,0xf9,0xc4,0x67,0x02,0xf8,0xeb,
    0xc1,0x47,0xf6,0x13,0x89,0x9b,0x40,0xdc,0x14,0xde,0x07,0xd5,0xcc,0x4e,0x3d,0x73,
    0xf0,0x28,0xf8,0xe1,0xe0,0x53,0x12,0x7b,0x49,0x30,0x99,0x9f,0x3f,0x03,0xf3,0x7a,
    0xf8,0x5c,0x0f,0xfe,0xd3,0x79,0x7f,0xd4,0xd3,0x8f,0xdc,0x2f,0x08,0x71,0x59,0xde,
    0x21,0x13,0xf1,0xdd,0x80,0x5e,0x0d,0xe0,0xad,0xe1,0x69,0x08,0xa7,0x51,0x3e,0xc1,
    0xd4,0xef,0xaf,0x90,0x43,0x73,0xc9,0xf5,0x5a,0xd0,0x22,0x72,0xf7,0x89,0x4f,0x01,
    0x31,0x75,0xa6,0x87,0xd9,0xf4,0xd0,0x68,0x7a,0x98,0x03,0xae,0x3d,0xcc,0x05,0xd3,
    0x1e,0x9a,0x4d,0x0f,0x73,0xe3,0xfb,0xcb,0x45,0x4c,0xea,0x36,0x99,0x1e,0x9e,0xa0,
    0xb6,0x37,0x3d,0xcc,0x03,0xd7,0x1e,0xee,0xf1,0x09,0xa6,0x7e,0xd2,0x83,0xe6,0x6a,
    0x36,0x3d,0xd4,0xfa,0xc4,0xa7,0x9e,0x98,0x26,0xd3,0x43,0x0b,0x3d,0xcc,0x37,0x3d,
    0x3c,0x05,0xae,0x3d,0x2c,0x00,0xd3,0x1e,0xda,0x4c,0x0f,0x0b,0x22,0x1f,0x17,0x31,
    0xa9,0xdb,0xca,0x1c,0x49,0xdd,0x85,0xd4,0xae,0xf5,0xb9,0xf3,0x2a,0x1c,0xd5,0xb7,
    0xcd,0x70,0x9c,0x84,0x5f,0x33,0x71,0xad,0xf0,0x91,0x33,0xfd,0x0c,0xe7,0x59,0x67,
    0xee,0x59,0x38,0x2f,0x31,0x33,0xf7,0x1c,0xf8,0x26,0x66,0x6e,0x29,0xd8,0x24,0x9f,
    0xc4,0xc9,0x19,0x7f,0x91,0xb8,0x76,0xe2,0x44,0xd3,0x65,0xe0,0xcf,0x07,0x1e,0x72,
    0x16,0x5e,0xa2,0xde,0x52,0xde,0x0f,0xcb,0x8c,0x56,0x2f,0x13,0xbf,0xdc,0x68,0xf5,
    0x0a,0xb8,0x6a,0xb5,0x02,0x4c,0xb5,0x5a,0x65,0xb4,0x12,0xdb,0xca,0xb0,0x56,0xd1,
    0xff,0x4a,0x9e,0x77,0x61,0x3c,0x5f,0x49,0x6d,0x47,0xdc,0x55,0xee,0x6f,0x84,0x7b,
    0xc9,0xf5,0x13,0x31,0x72,0xfd,0x92,0x5a,0x3f,0x13,0x37,0x84,0x98,0x3f,0x4c,0x2d,
    0xb1,0x5d,0x0e,0xeb,0x0a,0x71,0x57,0xe2,0x6f,0x71,0x51,0xac,0xf5,0x2b,0x67,0x7a,
    0x14,0xf1,0xf2,0x1b,0xb7,0x15,0x1e,0xbf,0x61,0x17,0xdb,0x1b,0x60,0xbf,0x83,0x8f,
    0xe6,0xf9,0x5d,0x25,0xe7,0x65,0x13,0xf7,0x0b,0xb9,0x4a,0xf3,0x7c,0x84,0xd3,0xdf,
    0xa1,0x5a,0x1f,0xd8,0x35,0x38,0x4c,0xf6,0x49,0xde,0x2b,0xc4,0x5e,0x66,0xae,0xe5,
    0x19,0x64,0x7d,0x62,0x57,0x3d,0x54,0xa3,0xb5,0x68,0xe4,0xe9,0x37,0xe3,0xff,0xad,
    0x51,0x1f,0x35,0xfb,0x8c,0x46,0xd7,0x89,0x53,0x8d,0xd2,0x3e,0xa7,0xd1,0xf5,0x18,
    0xeb,0xdc,0x2d,0xe2,0x6e,0x19,0x8d,0x9c,0xcf,0x69,0xb4,0x36,0x4f,0x23,0xef,0x13,
    0xbb,0xd5,0x28,0xe5,0x13,0x5c,0x35,0x12,0x6e,0x92,0xf3,0x86,0x89,0xbb,0x49,0xae,
    0xd2,0x3c,0x1f,0xe1,0xa4,0x1a,0x09,0xa6,0x1a,0x4d,0xf5,0x49,0xde,0x5b,0xc4,0xde,
    0x30,0x1a,0x8d,0xf1,0x89,0x3d,0x0b,0x4f,0xd5,0x68,0x1d,0x1a,0xa5,0xe8,0xb7,0x2c,
    0x4f,0xa3,0x62,0x6a,0xca,0x55,0x35,0x1a,0xec,0x93,0x38,0xd5,0x68,0xa4,0xd1,0x48,
    0x6c,0x43,0xc2,0x1a,0x46,0x9c,0x5c,0x55,0xa3,0x3b,0x8c,0x46,0xeb,0xf2,0x34,0x2a,
    0xf5,0x89,0xdd,0x6a,0x34,0xc2,0x27,0xb8,0x6a,0x54,0x46,0x4e,0xc9,0xaf,0x71,0x43,
    0xe1,0x52,0x9a,0xe7,0x33,0xd2,0x68,0x54,0x66,0x34,0x9a,0xe6,0x93,0xbc,0xc2,0x6b,
    0x28,0x5c,0x55,0xa3,0x0a,0x9f,0xd8,0x45,0xab,0x14,0xf9,0xf4,0xec,0xad,0x62,0x16,
    0xc5,0xaf,0x8e,0x59,0x6b,0x23,0xa6,0xcc,0xe7,0xce,0xfc,0x6b,0x9c,0xf9,0xf5,0xe6,
    0xcc,0x6f,0x00,0xd7,0x33,0xbf,0x11,0x4c,0xcf,0xfc,0x66,0x73,0x0e,0x37,0xc6,0x77,
    0x92,0x73,0x3b,0xa8,0xbb,0xc3,0xbc,0x4f,0xde,0x22,0xf7,0x4e,0x93,0x7b,0x17,0xb8,
    0xe6,0x7e,0x1b,0x4c,0x73,0x77,0x98,0xdc,0x62,0xdb,0x1d,0x56,0x07,0xb9,0x77,0x9b,
    0x39,0x78,0x87,0xbe,0xe4,0xf7,0xbe,0x9b,0x5c,0xef,0x82,0xef,0x41,0x0b,0x8d,0xeb,
    0x40,0x0b,0xf1,0x79,0x8f,0x9a,0x3b,0xf0,0xdf,0x4d,0xdd,0x4e,0x53,0x57,0x7c,0xf6,
    0x86,0xd5,0x49,0xfc,0x5e,0x53,0xf7,0x7d,0x53,0xb7,0x25,0x7c,0x11,0xc9,0xb7,0xd2,
    0x07,0x60,0x75,0x3e,0xf7,0x3d,0x91,0x8a,0xbf,0x29,0x85,0xd1,0xbe,0x8f,0x38,0x5d,
    0xdb,0x43,0x2e,0xc1,0xf7,0x13,0xbb,0x2f,0xe6,0x1a,0x18,0x9f,0xd5,0x87,0xe4,0xda,
    0xcf,0x37,0x4d,0x81,0xf9,0x16,0x93,0x9e,0x94,0x53,0xa7,0x79,0xbe,0x33,0xa9,0xdd,
    0x41,0xfc,0x5e,0x7c,0x37,0xe3,0xbb,0xc9,0xf0,0xdf,0xf2,0x1f,0xfc,0xb7,0xdd,0x86,
    0xff,0x2e,0x78,0x6e,0xc7,0x67,0x8b,0xe1,0xf9,0x26,0x31,0xdb,0x6f,0xc3,0x53,0x6b,
    0x6f,0x36,0x3c,0x67,0xf8,0x84,0x6b,0x27,0xf1,0x9b,0xa8,0x21,0xb6,0x8f,0xb1,0xcb,
    0x77,0xe4,0x6a,0xbe,0x21,0x0f,0x82,0xeb,0x3c,0x7d,0xc2,0x3c,0x1d,0x32,0xf3,0x74,
    0x18,0x5c,0xe7,0xe9,0x53,0x30,0x9d,0xa7,0x2e,0xf3,0x5c,0xc5,0x76,0x24,0xac,0xa3,
    0x70,0x3b,0x6a,0x72,0x7f,0x4e,0xee,0x63,0x26,0xf7,0x17,0xe0,0x9a,0xfb,0x38,0x98,
    0xe6,0xee,0x36,0xb9,0xc5,0x76,0x22,0xac,0x93,0xe4,0x3e,0xe9,0x72,0xbf,0xcb,0x5f,
    0x93,0xfb,0x94,0xf9,0x5d,0xfe,0x06,0xfc,0x0c,0xdf,0x43,0xdf,0x82,0xb5,0x9b,0x7a,
    0xa7,0xc1,0x97,0x50,0xef,0xac,0xa9,0x77,0x3a,0xc6,0xba,0x88,0x49,0xbd,0x33,0xbc,
    0x3b,0x45,0xb7,0x6a,0x9f,0x70,0x3c,0xe8,0x72,0xdf,0x4d,0xea,0x77,0x96,0xe7,0x21,
    0x7e,0xb3,0x7c,0xe2,0x73,0x92,0x98,0x33,0x86,0xcf,0x77,0xf0,0x39,0x67,0xf8,0x7c,
    0x0f,0xae,0x7c,0x7a,0x0c,0x1f,0xb1,0x9d,0x0f,0xab,0x87,0x3a,0xe7,0x0d,0x9f,0x1a,
    0xf8,0xcc,0x32,0xef,0x29,0xf5,0xeb,0x31,0x7c,0x1a,0x7c,0xe2,0x73,0x96,0x98,0xf3,
    0x86,0xcf,0x0f,0xf0,0xd9,0x69,0xf8,0xfc,0x08,0xae,0x7c,0x7a,0x0d,0x1f,0xb1,0x5d,
    0x08,0xab,0x97,0x3a,0x17,0x0c,0x9f,0x09,0x3e,0xf9,0x9f,0xac,0xc1,0xe7,0xe6,0x55,
    0xfd,0x7a,0x0d,0x9f,0xd9,0x3e,0xf1,0xe9,0x21,0xe6,0x02,0xbe,0xdd,0xf8,0x9e,0xe0,
    0x5c,0xc9,0xac,0x7c,0x85,0xde,0x69,0x53,0xa7,0xca,0xe7,0x70,0x97,0x17,0xdb,0x6d,
    0xea,0x34,0xfa,0xa4,0x56,0x2f,0x31,0x27,0xf0,0xed,0xc2,0xf7,0x08,0xe7,0x4e,0x7c,
    0x3f,0x23,0xdf,0x41,0xce,0x5d,0x11,0x67,0x35,0x9d,0x17,0xd3,0x65,0xf2,0x3f,0xe6,
    0x93,0x1a,0xdd,0xc4,0x4b,0xbe,0x19,0x21,0xe2,0x12,0xb6,0x9b,0x61,0x4a,0xa6,0x86,
    0xf5,0x0f,0x82,0xb0,0xca,0xa2,0x3c,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2D src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, params . srcOffset + srcSubImageCoords, params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
