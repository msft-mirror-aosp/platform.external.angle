// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000021.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000021[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x97,0xfb,0x6f,0x55,0x45,
    0x10,0xc7,0xcf,0xde,0x7b,0xdb,0xdb,0x82,0x94,0x47,0x8b,0x40,0x4b,0xb4,0xe5,0x65,
    0xb5,0x58,0xde,0xf2,0x28,0x17,0x6c,0x0a,0x6d,0x55,0x04,0x69,0x43,0x82,0x88,0x8f,
    0x2a,0x0a,0x95,0x87,0x82,0xfa,0x0b,0x3f,0x28,0x11,0xb1,0x4d,0x30,0x10,0x41,0xa5,
    0x11,0xa5,0x31,0x42,0x24,0x92,0x08,0x2a,0x24,0x0a,0x28,0x8d,0x21,0x60,0x94,0x26,
    0x28,0x35,0x4a,0x03,0x7f,0x81,0x91,0x48,0x14,0x41,0x0d,0xc1,0x9d,0xb3,0x9f,0xe1,
    0x8e,0x37,0x12,0x9b,0x6c,0xce,0xd9,0xef,0xce,0x77,0xe6,0x3b,0xb3,0xb3,0x7b,0x4f,
    0x93,0x89,0x91,0xe9,0x28,0x72,0x51,0x9f,0xa8,0x20,0xba,0xd7,0x45,0xf1,0xdf,0xc0,
    0x28,0x11,0xc9,0x6b,0xdf,0x28,0x3f,0x7e,0x36,0xcc,0x6b,0x9e,0x57,0xfd,0xdc,0xf3,
    0xcb,0xaa,0x27,0x4f,0x19,0x2f,0xeb,0x45,0x51,0x32,0xb6,0x93,0xb5,0xfe,0x51,0x3a,
    0x4a,0xf9,0xa7,0x8c,0xd5,0x2d,0xad,0x6b,0x04,0x1f,0xe3,0xc7,0x79,0x3f,0x06,0x78,
    0x3b,0xc1,0xd3,0xe2,0xc3,0xbf,0x8d,0x89,0x7d,0x0a,0x27,0x8a,0x1a,0xa3,0xbc,0x68,
    0x6c,0x08,0x17,0x8d,0xe4,0xa9,0x98,0x03,0x2b,0x30,0x58,0x02,0x6c,0x80,0xc1,0x92,
    0x60,0x25,0x06,0x4b,0x81,0x0d,0x35,0x58,0x1e,0xd8,0x70,0x83,0xe5,0x83,0x95,0x1b,
    0x2c,0x0d,0x36,0xca,0x60,0x05,0x60,0x95,0x06,0x2b,0x04,0x1b,0x6b,0xb0,0x3e,0x60,
    0xe3,0x0d,0xd6,0x17,0x6c,0xb2,0xc1,0x6e,0x02,0x9b,0x66,0xb0,0x7e,0x60,0x33,0x0d,
    0x56,0x04,0x76,0x77,0x5c,0xbb,0xe4,0xf5,0x1a,0x48,0x1d,0x97,0xf8,0xe7,0x08,0x6a,
    0xa6,0xf3,0x0a,0x33,0x97,0xda,0xdf,0xc2,0xbc,0xd8,0xb3,0x12,0xf1,0x7a,0x32,0xae,
    0x97,0xbc,0xdf,0xec,0xdf,0xf2,0xc9,0xbd,0xca,0xdb,0xe7,0xa3,0x61,0x78,0xf5,0xfd,
    0x35,0x25,0xde,0xa2,0xc8,0xe0,0xc5,0x7e,0x34,0x7d,0x36,0xbf,0x56,0xe7,0x52,0xd7,
    0x45,0x8b,0x7e,0x98,0xa5,0xf3,0x52,0x3f,0x32,0x7d,0xda,0x66,0xeb,0x5c,0x6a,0xfc,
    0x51,0x43,0x4b,0x66,0xb0,0x9f,0x97,0x13,0x43,0xf6,0x73,0x88,0x9f,0x57,0x30,0x4f,
    0x30,0x1f,0xc5,0x3e,0xa4,0x62,0x3c,0x15,0x8d,0xc6,0x56,0xf0,0x1a,0xe6,0x63,0x0c,
    0xff,0x36,0xec,0x85,0x2f,0xfe,0xab,0xf0,0x17,0xc5,0xf9,0x0e,0x8c,0x6b,0x54,0xc1,
    0x28,0x37,0xa3,0xea,0x7f,0x46,0xf9,0xf5,0x67,0x2a,0xba,0x93,0xfd,0x1d,0x8b,0x06,
    0x99,0x57,0x83,0x55,0x91,0xd3,0x38,0x34,0x89,0xfd,0x78,0xd6,0x2a,0xcc,0xfa,0x5d,
    0xf4,0x9c,0xac,0x4f,0xbd,0xce,0x0d,0xeb,0xf2,0x9c,0x81,0x66,0xb5,0xaf,0x23,0x2f,
    0x9d,0xcf,0x67,0xff,0x87,0x79,0xe6,0x62,0x93,0xb3,0xfd,0xe3,0xa8,0xc6,0x31,0x1e,
    0xe4,0x7d,0x31,0x9a,0x65,0xbe,0x24,0x27,0xc6,0xd2,0x9c,0x79,0x0b,0xe7,0x47,0xf8,
    0x8f,0xa3,0xb1,0x9c,0x3a,0x3f,0xc9,0x7b,0xd2,0xd8,0xb7,0xa2,0x41,0xe7,0xab,0xe9,
    0x6f,0x9d,0x6f,0xe4,0xfc,0x08,0xff,0x35,0x34,0x5b,0xfe,0x76,0xce,0x92,0xf6,0xc9,
    0x4e,0xa3,0x47,0xe6,0x7b,0xe3,0xd9,0x4b,0x75,0xc2,0xdf,0x47,0xfc,0x94,0xe1,0x1f,
    0xc8,0xd9,0x83,0x23,0x9c,0x39,0x9d,0x9f,0xa0,0x87,0x75,0x7e,0xda,0xf4,0xd5,0x39,
    0xb4,0xec,0xa3,0x3e,0xe7,0xb8,0x9f,0x92,0xf1,0x5e,0xe5,0xc5,0x79,0xa5,0xd0,0x23,
    0xd8,0x15,0x8f,0xc8,0xfe,0x65,0xe8,0xd1,0x4a,0xfa,0x70,0x81,0xcf,0x50,0x7a,0xf0,
    0x76,0xb0,0x4a,0xb3,0x17,0x6b,0xe8,0xef,0x3b,0x58,0xaf,0xf5,0x1e,0xa4,0x37,0x26,
    0xd0,0x3f,0xe3,0xf0,0x27,0x36,0x13,0xc1,0x5f,0xf6,0x36,0x32,0x9f,0x04,0x6f,0x22,
    0xbc,0xa9,0xdc,0x0f,0xd5,0xf4,0x52,0x86,0xbe,0x99,0x0e,0xbe,0xcf,0xdb,0x14,0xc5,
    0xb9,0x04,0x4c,0xfa,0xe9,0xb2,0x57,0x9e,0x41,0xcf,0x5f,0xde,0xbe,0x86,0xfb,0x24,
    0x43,0x3e,0xf2,0xbe,0xd0,0xf3,0xca,0xb9,0x53,0x26,0x61,0xfb,0x22,0xf5,0xaa,0x05,
    0x6f,0xf2,0xbb,0x21,0x9a,0x6e,0x75,0x01,0x53,0xbb,0x3f,0xbd,0x0f,0xf5,0x25,0xcf,
    0x4b,0xbe,0x16,0x62,0x37,0xcd,0x05,0x9b,0x3c,0x38,0x33,0x4d,0x0e,0x73,0xc8,0xa1,
    0xce,0xe4,0x30,0x17,0x5c,0x73,0xa8,0x07,0xd3,0x1c,0x1a,0x4d,0x0e,0xf5,0xf1,0x7d,
    0x16,0xc5,0x98,0xc4,0x6d,0x30,0x39,0xdc,0x47,0x6c,0x67,0x72,0x98,0x07,0xae,0x39,
    0x8c,0x70,0x01,0x53,0x3b,0xc9,0x41,0x7d,0x35,0x9a,0x1c,0xa6,0xbb,0x60,0x93,0x81,
    0xd3,0x60,0x72,0x58,0x40,0x0e,0xf3,0x4d,0x0e,0x0f,0x80,0x6b,0x0e,0x0b,0xc1,0x34,
    0x87,0x66,0x93,0xc3,0xc2,0x58,0x4f,0x14,0x63,0x12,0xb7,0x89,0x3e,0x92,0xb8,0x8b,
    0x88,0x3d,0xdd,0x65,0xcf,0xb3,0x68,0x54,0xdb,0x66,0xa3,0x71,0x06,0x76,0x8d,0xf0,
    0x9a,0xd0,0x23,0x67,0xfe,0x21,0xce,0xbb,0xf6,0xdc,0xc3,0x68,0x5e,0x6a,0x7a,0xee,
    0x11,0xf0,0x0d,0xf4,0xdc,0x63,0x60,0x33,0x5c,0xe0,0xc9,0x1d,0xf0,0x04,0xbc,0x16,
    0x78,0x52,0xd3,0x65,0xe0,0x5a,0xf7,0xa7,0xe0,0x46,0x06,0x5b,0x0e,0xe6,0xe2,0x3a,
    0xe4,0xc7,0xf7,0xc7,0x0a,0x6c,0x97,0xe3,0x43,0x63,0x3c,0x4d,0x8c,0x56,0x13,0x63,
    0x25,0xf8,0xa3,0x3e,0x57,0x39,0x6f,0xab,0xc8,0x69,0x05,0x77,0xce,0x4a,0xb3,0x1f,
    0x6b,0xe0,0xaf,0x36,0xfb,0xf1,0x0c,0xb8,0xee,0xc7,0xb3,0x60,0xba,0x1f,0xeb,0xcc,
    0x7e,0xc8,0xda,0x5a,0x3f,0xd6,0x51,0xe3,0xb5,0xe4,0x21,0x77,0xd0,0x0b,0xc4,0x8e,
    0xe0,0x5d,0xe6,0xfd,0x6f,0xff,0x2e,0xbe,0x7e,0x86,0x23,0xcf,0xa3,0xc4,0xfa,0x05,
    0x5e,0x3f,0x38,0x7f,0x98,0x58,0xb2,0x76,0xc1,0x8f,0x8b,0xf0,0x2e,0xc6,0xbf,0xff,
    0xe9,0x38,0xd6,0x6f,0xd4,0xab,0x14,0xbe,0xfc,0xae,0x6e,0x42,0xc7,0xef,0xac,0x97,
    0xc6,0xf7,0x6a,0xc0,0x2e,0x81,0x0f,0xa7,0x47,0x2e,0xe3,0xf3,0x82,0xe1,0xfd,0x8a,
    0xaf,0xe2,0x1c,0x1b,0xd1,0x74,0xcd,0x47,0xbb,0x02,0x76,0x09,0x0d,0x35,0x2e,0xf8,
    0xbd,0x08,0xf7,0x02,0x67,0x47,0xf6,0x60,0xb4,0x0b,0xeb,0xab,0xcc,0x5e,0x0b,0x67,
    0x3d,0x35,0x72,0xe4,0x5b,0xe8,0xfe,0x5d,0xa3,0xab,0xc4,0xbc,0x6a,0x6a,0x74,0x0d,
    0x9e,0xd6,0xa8,0xc0,0x65,0x6b,0x74,0x8d,0x0b,0x34,0xe9,0x02,0x4f,0x9e,0x5a,0xa3,
    0x3c,0x97,0xad,0xd1,0xfa,0x9c,0x1a,0xe5,0xbb,0xb0,0x6e,0x6b,0x94,0x76,0x01,0xd7,
    0x1a,0x15,0xe2,0x53,0x9c,0x28,0x2f,0xe1,0x82,0xaf,0xe2,0x1c,0x1b,0xd1,0xa4,0x35,
    0x2a,0x74,0xd9,0x1a,0x65,0x5c,0xf0,0x2b,0xba,0x84,0x2b,0xbe,0xb4,0x46,0x95,0x2e,
    0xac,0x8f,0x46,0xa7,0xd6,0x68,0x03,0x35,0x4a,0x90,0x6f,0x59,0x4e,0x8d,0xfa,0x13,
    0x53,0x9e,0x5a,0xa3,0x81,0x2e,0xf0,0xb4,0x46,0xa5,0xa6,0x46,0xb2,0x36,0xc8,0x8f,
    0xc1,0xf0,0x06,0x9b,0x1a,0x0d,0x31,0x35,0xda,0x90,0x53,0xa3,0xa1,0x2e,0xac,0xdb,
    0x1a,0x0d,0x73,0x01,0xd7,0x1a,0x95,0xe1,0x73,0x90,0xa9,0x51,0x09,0x5a,0x8a,0x73,
    0x6c,0x4a,0x4d,0x8d,0xca,0x4c,0x8d,0x66,0xbb,0xe0,0x57,0x74,0x95,0xa0,0x55,0x6b,
    0x54,0xe5,0xc2,0xba,0xd4,0x2a,0x81,0x3f,0x3d,0x7b,0xeb,0xe8,0x45,0xb1,0xab,0xa5,
    0xd7,0x9a,0xe1,0x94,0xb9,0xec,0x99,0x7f,0x85,0x33,0xbf,0xd1,0x9c,0xf9,0x4d,0xe0,
    0x7a,0xe6,0x5f,0x05,0xd3,0x33,0xdf,0x6e,0xce,0xa1,0xac,0xb5,0xf9,0xb1,0x8d,0xb8,
    0xdb,0xcc,0x7d,0xf2,0x06,0xbe,0xb7,0x1b,0xdf,0x6f,0x82,0xab,0xef,0xb7,0xc0,0xd4,
    0x77,0x87,0xf1,0x2d,0x6b,0x3b,0xfc,0xe8,0xc0,0xf7,0x0e,0xd3,0x07,0x6f,0x93,0x97,
    0x7c,0x53,0x1c,0xc6,0xd7,0x3b,0xe0,0x3b,0xa9,0x85,0xf2,0x3a,0xa8,0x85,0xd8,0xbc,
    0x4b,0xcc,0x6d,0xd8,0xef,0x20,0x6e,0xa7,0x89,0x2b,0x36,0xbb,0xfc,0xe8,0x84,0xbf,
    0xcb,0xc4,0x7d,0xcf,0xc4,0x5d,0xe0,0xbf,0xba,0xe4,0x7b,0xec,0x7d,0xb0,0x5a,0x97,
    0xfd,0x66,0x49,0x70,0x5f,0xcb,0xfa,0x6e,0x78,0x3a,0xda,0xbd,0x2f,0xc1,0xf7,0xc0,
    0xdd,0x1d,0xfb,0x2a,0x8c,0xf7,0xea,0x03,0x7c,0xed,0xe1,0xbb,0x29,0xcf,0x7c,0xef,
    0x49,0x4e,0xaa,0xa9,0xd3,0xec,0xef,0x1c,0x62,0x77,0xc0,0xdf,0x85,0x6d,0x3b,0xb6,
    0x6d,0x46,0xff,0xe6,0xff,0xd0,0xbf,0xe5,0x06,0xfa,0xb7,0xa0,0x73,0x2b,0x36,0x9b,
    0x8d,0xce,0xd7,0xe1,0x6c,0xbd,0x81,0x4e,0x8d,0xdd,0x6e,0x74,0xd6,0xb9,0xa0,0xb5,
    0x13,0x7e,0x1b,0x31,0x64,0xed,0x43,0xd6,0xf7,0xf2,0xbd,0x27,0xdf,0x93,0xfb,0xc1,
    0xb5,0x9f,0x3e,0xa6,0x9f,0x0e,0x98,0x7e,0xfa,0x04,0x5c,0xfb,0xe9,0x53,0x30,0xed,
    0xa7,0x43,0x66,0x5f,0x65,0xed,0x60,0xdc,0x2f,0x41,0xdb,0x61,0xe3,0xfb,0x28,0xbe,
    0x8f,0x18,0xdf,0x5f,0x80,0xab,0xef,0x2f,0xc1,0xd4,0x77,0x97,0xf1,0x2d,0x6b,0xc7,
    0xfc,0x38,0x8e,0xef,0xe3,0xe6,0x77,0xf9,0x24,0xbe,0x4f,0x98,0xdf,0xe5,0xaf,0xc1,
    0x4f,0xf2,0x3b,0xff,0x0d,0x58,0xab,0x89,0xf7,0x2d,0xf8,0x52,0xe2,0x75,0x9b,0x78,
    0xb2,0x76,0xca,0x8f,0x6e,0xe2,0x9d,0xe2,0xf7,0x45,0xea,0x36,0xc9,0x05,0xce,0xfe,
    0x28,0xfb,0x6d,0xa6,0x76,0xdd,0xec,0x87,0xd8,0xcd,0x75,0xc1,0xe6,0x38,0x9c,0x53,
    0x46,0xcf,0x77,0xe8,0x39,0x6d,0xf4,0x7c,0x0f,0xae,0x7a,0x7a,0x8c,0x1e,0x59,0x3b,
    0xe3,0x47,0x0f,0x71,0xce,0x18,0x3d,0x53,0xd0,0x33,0xd7,0xdc,0x53,0x6a,0xd7,0x63,
    0xf4,0xd4,0xbb,0x60,0xd3,0x0d,0xe7,0x8c,0xd1,0xf3,0x23,0x7a,0xb6,0x1b,0x3d,0x3f,
    0x81,0xab,0x9e,0x5e,0xa3,0x47,0xd6,0xce,0xfa,0xd1,0x4b,0x9c,0xb3,0x46,0xcf,0x54,
    0x17,0xfe,0x67,0xa8,0x77,0xd9,0x7e,0x55,0xbb,0x5e,0xa3,0xe7,0x1e,0x17,0x6c,0x7a,
    0xe0,0x9c,0xc5,0xb6,0x0b,0xdb,0x63,0xe6,0x3b,0xed,0x2b,0xea,0x9d,0x34,0x71,0x26,
    0xb8,0x2c,0x1e,0xe5,0x70,0xbb,0x4c,0x9c,0x46,0x17,0x62,0xf5,0xc2,0x39,0x86,0xed,
    0x21,0x6c,0x0f,0x72,0xee,0xc4,0xf6,0x73,0xfc,0xed,0xe7,0xdc,0xa5,0x39,0xab,0xc9,
    0x1c,0xce,0x21,0xe3,0xbf,0xc1,0x85,0x18,0x5d,0xf0,0xc5,0xdf,0x2c,0xcf,0x38,0xcf,
    0xda,0x55,0xdf,0x25,0xd3,0xfc,0xf8,0x07,0x24,0x2e,0x4e,0xac,0xb0,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture3D src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
